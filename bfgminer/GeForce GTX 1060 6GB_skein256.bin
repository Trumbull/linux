//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25971371
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_61, texmode_independent
.address_size 64

	// .globl	scanHash_post
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};

.entry scanHash_post(
	.param .u64 .ptr .global .align 1 scanHash_post_param_0,
	.param .u64 .ptr .global .align 4 scanHash_post_param_1,
	.param .u64 scanHash_post_param_2
)
{
	.local .align 16 .b8 	__local_depot0[512];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<170>;
	.reg .b32 	%r<2277>;
	.reg .b64 	%rd<222>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd18, [scanHash_post_param_0];
	add.u64 	%rd3, %SPL, 128;
	mov.u32 	%r73, %ctaid.x;
	mov.u32 	%r74, %ntid.x;
	mov.b32	%r75, %envreg3;
	mad.lo.s32 	%r76, %r73, %r74, %r75;
	mov.u32 	%r77, %tid.x;
	add.s32 	%r1, %r76, %r77;
	shl.b32 	%r78, %r1, 6;
	cvt.u64.u32	%rd20, %r78;
	add.s64 	%rd21, %rd18, %rd20;
	add.s32 	%r79, %r78, 1;
	cvt.u64.u32	%rd22, %r79;
	add.s64 	%rd23, %rd18, %rd22;
	add.s32 	%r80, %r78, 2;
	cvt.u64.u32	%rd24, %r80;
	add.s64 	%rd25, %rd18, %rd24;
	add.s32 	%r81, %r78, 3;
	cvt.u64.u32	%rd26, %r81;
	add.s64 	%rd27, %rd18, %rd26;
	add.s32 	%r82, %r78, 4;
	cvt.u64.u32	%rd28, %r82;
	add.s64 	%rd29, %rd18, %rd28;
	add.s32 	%r83, %r78, 5;
	cvt.u64.u32	%rd30, %r83;
	add.s64 	%rd31, %rd18, %rd30;
	add.s32 	%r84, %r78, 6;
	cvt.u64.u32	%rd32, %r84;
	add.s64 	%rd33, %rd18, %rd32;
	add.s32 	%r85, %r78, 7;
	cvt.u64.u32	%rd34, %r85;
	add.s64 	%rd35, %rd18, %rd34;
	add.s32 	%r86, %r78, 8;
	cvt.u64.u32	%rd36, %r86;
	add.s64 	%rd37, %rd18, %rd36;
	add.s32 	%r87, %r78, 9;
	cvt.u64.u32	%rd38, %r87;
	add.s64 	%rd39, %rd18, %rd38;
	add.s32 	%r88, %r78, 10;
	cvt.u64.u32	%rd40, %r88;
	add.s64 	%rd41, %rd18, %rd40;
	add.s32 	%r89, %r78, 11;
	cvt.u64.u32	%rd42, %r89;
	add.s64 	%rd43, %rd18, %rd42;
	add.s32 	%r90, %r78, 12;
	cvt.u64.u32	%rd44, %r90;
	add.s64 	%rd45, %rd18, %rd44;
	add.s32 	%r91, %r78, 13;
	cvt.u64.u32	%rd46, %r91;
	add.s64 	%rd47, %rd18, %rd46;
	add.s32 	%r92, %r78, 14;
	cvt.u64.u32	%rd48, %r92;
	add.s64 	%rd49, %rd18, %rd48;
	add.s32 	%r93, %r78, 15;
	cvt.u64.u32	%rd50, %r93;
	add.s64 	%rd51, %rd18, %rd50;
	ld.global.u8 	%rs169, [%rd21];
	cvt.u32.u16	%r94, %rs169;
	ld.global.u8 	%r95, [%rd23];
	prmt.b32 	%r96, %r95, %r94, 30212;
	ld.global.u8 	%r97, [%rd25];
	ld.global.u8 	%r98, [%rd27];
	prmt.b32 	%r99, %r98, %r97, 30212;
	ld.global.u8 	%r100, [%rd29];
	ld.global.u8 	%r101, [%rd31];
	prmt.b32 	%r102, %r101, %r100, 30212;
	ld.global.u8 	%r103, [%rd33];
	ld.global.u8 	%r104, [%rd35];
	prmt.b32 	%r105, %r104, %r103, 30212;
	ld.global.u8 	%r106, [%rd37];
	ld.global.u8 	%r107, [%rd39];
	prmt.b32 	%r108, %r107, %r106, 30212;
	ld.global.u8 	%r109, [%rd41];
	ld.global.u8 	%r110, [%rd43];
	prmt.b32 	%r111, %r110, %r109, 30212;
	ld.global.u8 	%r112, [%rd45];
	ld.global.u8 	%r113, [%rd47];
	prmt.b32 	%r114, %r113, %r112, 30212;
	ld.global.u8 	%r115, [%rd49];
	ld.global.u8 	%r116, [%rd51];
	prmt.b32 	%r117, %r116, %r115, 30212;
	prmt.b32 	%r118, %r117, %r114, 4180;
	prmt.b32 	%r119, %r111, %r108, 4180;
	prmt.b32 	%r120, %r105, %r102, 4180;
	prmt.b32 	%r121, %r99, %r96, 4180;
	st.local.v4.u32 	[%rd3], {%r121, %r120, %r119, %r118};
	add.s32 	%r122, %r78, 16;
	cvt.u64.u32	%rd52, %r122;
	add.s64 	%rd53, %rd18, %rd52;
	add.s32 	%r123, %r78, 17;
	cvt.u64.u32	%rd54, %r123;
	add.s64 	%rd55, %rd18, %rd54;
	add.s32 	%r124, %r78, 18;
	cvt.u64.u32	%rd56, %r124;
	add.s64 	%rd57, %rd18, %rd56;
	add.s32 	%r125, %r78, 19;
	cvt.u64.u32	%rd58, %r125;
	add.s64 	%rd59, %rd18, %rd58;
	add.s32 	%r126, %r78, 20;
	cvt.u64.u32	%rd60, %r126;
	add.s64 	%rd61, %rd18, %rd60;
	add.s32 	%r127, %r78, 21;
	cvt.u64.u32	%rd62, %r127;
	add.s64 	%rd63, %rd18, %rd62;
	add.s32 	%r128, %r78, 22;
	cvt.u64.u32	%rd64, %r128;
	add.s64 	%rd65, %rd18, %rd64;
	add.s32 	%r129, %r78, 23;
	cvt.u64.u32	%rd66, %r129;
	add.s64 	%rd67, %rd18, %rd66;
	add.s32 	%r130, %r78, 24;
	cvt.u64.u32	%rd68, %r130;
	add.s64 	%rd69, %rd18, %rd68;
	add.s32 	%r131, %r78, 25;
	cvt.u64.u32	%rd70, %r131;
	add.s64 	%rd71, %rd18, %rd70;
	add.s32 	%r132, %r78, 26;
	cvt.u64.u32	%rd72, %r132;
	add.s64 	%rd73, %rd18, %rd72;
	add.s32 	%r133, %r78, 27;
	cvt.u64.u32	%rd74, %r133;
	add.s64 	%rd75, %rd18, %rd74;
	add.s32 	%r134, %r78, 28;
	cvt.u64.u32	%rd76, %r134;
	add.s64 	%rd77, %rd18, %rd76;
	add.s32 	%r135, %r78, 29;
	cvt.u64.u32	%rd78, %r135;
	add.s64 	%rd79, %rd18, %rd78;
	add.s32 	%r136, %r78, 30;
	cvt.u64.u32	%rd80, %r136;
	add.s64 	%rd81, %rd18, %rd80;
	add.s32 	%r137, %r78, 31;
	cvt.u64.u32	%rd82, %r137;
	add.s64 	%rd83, %rd18, %rd82;
	ld.global.u8 	%r138, [%rd53];
	ld.global.u8 	%r139, [%rd55];
	prmt.b32 	%r140, %r139, %r138, 30212;
	ld.global.u8 	%r141, [%rd57];
	ld.global.u8 	%r142, [%rd59];
	prmt.b32 	%r143, %r142, %r141, 30212;
	ld.global.u8 	%r144, [%rd61];
	ld.global.u8 	%r145, [%rd63];
	prmt.b32 	%r146, %r145, %r144, 30212;
	ld.global.u8 	%r147, [%rd65];
	ld.global.u8 	%r148, [%rd67];
	prmt.b32 	%r149, %r148, %r147, 30212;
	ld.global.u8 	%r150, [%rd69];
	ld.global.u8 	%r151, [%rd71];
	prmt.b32 	%r152, %r151, %r150, 30212;
	ld.global.u8 	%r153, [%rd73];
	ld.global.u8 	%r154, [%rd75];
	prmt.b32 	%r155, %r154, %r153, 30212;
	ld.global.u8 	%r156, [%rd77];
	ld.global.u8 	%r157, [%rd79];
	prmt.b32 	%r158, %r157, %r156, 30212;
	ld.global.u8 	%r159, [%rd81];
	ld.global.u8 	%r160, [%rd83];
	prmt.b32 	%r161, %r160, %r159, 30212;
	prmt.b32 	%r162, %r161, %r158, 4180;
	prmt.b32 	%r163, %r155, %r152, 4180;
	prmt.b32 	%r164, %r149, %r146, 4180;
	prmt.b32 	%r165, %r143, %r140, 4180;
	st.local.v4.u32 	[%rd3+16], {%r165, %r164, %r163, %r162};
	add.s32 	%r166, %r78, 32;
	cvt.u64.u32	%rd84, %r166;
	add.s64 	%rd85, %rd18, %rd84;
	add.s32 	%r167, %r78, 33;
	cvt.u64.u32	%rd86, %r167;
	add.s64 	%rd87, %rd18, %rd86;
	add.s32 	%r168, %r78, 34;
	cvt.u64.u32	%rd88, %r168;
	add.s64 	%rd89, %rd18, %rd88;
	add.s32 	%r169, %r78, 35;
	cvt.u64.u32	%rd90, %r169;
	add.s64 	%rd91, %rd18, %rd90;
	add.s32 	%r170, %r78, 36;
	cvt.u64.u32	%rd92, %r170;
	add.s64 	%rd93, %rd18, %rd92;
	add.s32 	%r171, %r78, 37;
	cvt.u64.u32	%rd94, %r171;
	add.s64 	%rd95, %rd18, %rd94;
	add.s32 	%r172, %r78, 38;
	cvt.u64.u32	%rd96, %r172;
	add.s64 	%rd97, %rd18, %rd96;
	add.s32 	%r173, %r78, 39;
	cvt.u64.u32	%rd98, %r173;
	add.s64 	%rd99, %rd18, %rd98;
	add.s32 	%r174, %r78, 40;
	cvt.u64.u32	%rd100, %r174;
	add.s64 	%rd101, %rd18, %rd100;
	add.s32 	%r175, %r78, 41;
	cvt.u64.u32	%rd102, %r175;
	add.s64 	%rd103, %rd18, %rd102;
	add.s32 	%r176, %r78, 42;
	cvt.u64.u32	%rd104, %r176;
	add.s64 	%rd105, %rd18, %rd104;
	add.s32 	%r177, %r78, 43;
	cvt.u64.u32	%rd106, %r177;
	add.s64 	%rd107, %rd18, %rd106;
	add.s32 	%r178, %r78, 44;
	cvt.u64.u32	%rd108, %r178;
	add.s64 	%rd109, %rd18, %rd108;
	add.s32 	%r179, %r78, 45;
	cvt.u64.u32	%rd110, %r179;
	add.s64 	%rd111, %rd18, %rd110;
	add.s32 	%r180, %r78, 46;
	cvt.u64.u32	%rd112, %r180;
	add.s64 	%rd113, %rd18, %rd112;
	add.s32 	%r181, %r78, 47;
	cvt.u64.u32	%rd114, %r181;
	add.s64 	%rd115, %rd18, %rd114;
	ld.global.u8 	%r182, [%rd85];
	ld.global.u8 	%r183, [%rd87];
	prmt.b32 	%r184, %r183, %r182, 30212;
	ld.global.u8 	%r185, [%rd89];
	ld.global.u8 	%r186, [%rd91];
	prmt.b32 	%r187, %r186, %r185, 30212;
	ld.global.u8 	%r188, [%rd93];
	ld.global.u8 	%r189, [%rd95];
	prmt.b32 	%r190, %r189, %r188, 30212;
	ld.global.u8 	%r191, [%rd97];
	ld.global.u8 	%r192, [%rd99];
	prmt.b32 	%r193, %r192, %r191, 30212;
	ld.global.u8 	%r194, [%rd101];
	ld.global.u8 	%r195, [%rd103];
	prmt.b32 	%r196, %r195, %r194, 30212;
	ld.global.u8 	%r197, [%rd105];
	ld.global.u8 	%r198, [%rd107];
	prmt.b32 	%r199, %r198, %r197, 30212;
	ld.global.u8 	%r200, [%rd109];
	ld.global.u8 	%r201, [%rd111];
	prmt.b32 	%r202, %r201, %r200, 30212;
	ld.global.u8 	%r203, [%rd113];
	ld.global.u8 	%r204, [%rd115];
	prmt.b32 	%r205, %r204, %r203, 30212;
	prmt.b32 	%r206, %r205, %r202, 4180;
	prmt.b32 	%r207, %r199, %r196, 4180;
	prmt.b32 	%r208, %r193, %r190, 4180;
	prmt.b32 	%r209, %r187, %r184, 4180;
	st.local.v4.u32 	[%rd3+32], {%r209, %r208, %r207, %r206};
	add.s32 	%r210, %r78, 48;
	cvt.u64.u32	%rd116, %r210;
	add.s64 	%rd117, %rd18, %rd116;
	add.s32 	%r211, %r78, 49;
	cvt.u64.u32	%rd118, %r211;
	add.s64 	%rd119, %rd18, %rd118;
	add.s32 	%r212, %r78, 50;
	cvt.u64.u32	%rd120, %r212;
	add.s64 	%rd121, %rd18, %rd120;
	add.s32 	%r213, %r78, 51;
	cvt.u64.u32	%rd122, %r213;
	add.s64 	%rd123, %rd18, %rd122;
	add.s32 	%r214, %r78, 52;
	cvt.u64.u32	%rd124, %r214;
	add.s64 	%rd125, %rd18, %rd124;
	add.s32 	%r215, %r78, 53;
	cvt.u64.u32	%rd126, %r215;
	add.s64 	%rd127, %rd18, %rd126;
	add.s32 	%r216, %r78, 54;
	cvt.u64.u32	%rd128, %r216;
	add.s64 	%rd129, %rd18, %rd128;
	add.s32 	%r217, %r78, 55;
	cvt.u64.u32	%rd130, %r217;
	add.s64 	%rd131, %rd18, %rd130;
	add.s32 	%r218, %r78, 56;
	cvt.u64.u32	%rd132, %r218;
	add.s64 	%rd133, %rd18, %rd132;
	add.s32 	%r219, %r78, 57;
	cvt.u64.u32	%rd134, %r219;
	add.s64 	%rd135, %rd18, %rd134;
	add.s32 	%r220, %r78, 58;
	cvt.u64.u32	%rd136, %r220;
	add.s64 	%rd137, %rd18, %rd136;
	add.s32 	%r221, %r78, 59;
	cvt.u64.u32	%rd138, %r221;
	add.s64 	%rd139, %rd18, %rd138;
	add.s32 	%r222, %r78, 60;
	cvt.u64.u32	%rd140, %r222;
	add.s64 	%rd141, %rd18, %rd140;
	add.s32 	%r223, %r78, 61;
	cvt.u64.u32	%rd142, %r223;
	add.s64 	%rd143, %rd18, %rd142;
	add.s32 	%r224, %r78, 62;
	cvt.u64.u32	%rd144, %r224;
	add.s64 	%rd145, %rd18, %rd144;
	add.s32 	%r225, %r78, 63;
	cvt.u64.u32	%rd146, %r225;
	add.s64 	%rd147, %rd18, %rd146;
	ld.global.u8 	%r226, [%rd117];
	ld.global.u8 	%r227, [%rd119];
	prmt.b32 	%r228, %r227, %r226, 30212;
	ld.global.u8 	%r229, [%rd121];
	ld.global.u8 	%r230, [%rd123];
	prmt.b32 	%r231, %r230, %r229, 30212;
	ld.global.u8 	%r232, [%rd125];
	ld.global.u8 	%r233, [%rd127];
	prmt.b32 	%r234, %r233, %r232, 30212;
	ld.global.u8 	%r235, [%rd129];
	ld.global.u8 	%r236, [%rd131];
	prmt.b32 	%r237, %r236, %r235, 30212;
	ld.global.u8 	%r238, [%rd133];
	ld.global.u8 	%r239, [%rd135];
	prmt.b32 	%r240, %r239, %r238, 30212;
	ld.global.u8 	%r241, [%rd137];
	ld.global.u8 	%r242, [%rd139];
	prmt.b32 	%r243, %r242, %r241, 30212;
	ld.global.u8 	%r244, [%rd141];
	ld.global.u8 	%r245, [%rd143];
	prmt.b32 	%r246, %r245, %r244, 30212;
	ld.global.u8 	%r247, [%rd145];
	ld.global.u8 	%r248, [%rd147];
	prmt.b32 	%r249, %r248, %r247, 30212;
	prmt.b32 	%r250, %r249, %r246, 4180;
	prmt.b32 	%r251, %r243, %r240, 4180;
	prmt.b32 	%r252, %r237, %r234, 4180;
	prmt.b32 	%r253, %r231, %r228, 4180;
	st.local.v4.u32 	[%rd3+48], {%r253, %r252, %r251, %r250};
	add.u64 	%rd2, %SPL, 256;
	add.u64 	%rd4, %SPL, 0;
	add.s64 	%rd5, %rd4, 80;
	ld.const.u32 	%r254, [h+24];
	ld.const.u32 	%r255, [h+20];
	ld.const.u32 	%r256, [h+16];
	ld.const.u32 	%r257, [h+12];
	st.local.v4.u32 	[%rd4+80], {%r257, %r256, %r255, %r254};
	ld.const.u32 	%r258, [h+28];
	st.local.u32 	[%rd4+96], %r258;
	ld.const.u32 	%r259, [h+8];
	ld.const.u32 	%r260, [h+4];
	ld.const.u32 	%r261, [h];
	mov.u32 	%r2263, 0;
	st.local.v4.u32 	[%rd4+64], {%r2263, %r261, %r260, %r259};
	mov.u64 	%rd150, 512;
	mov.u64 	%rd151, 0;
	st.local.u64 	[%rd4+120], %rd151;
	st.local.u64 	[%rd4+112], %rd150;
	mov.u32 	%r2252, %r2263;
	bra.uni 	BB0_1;

BB0_17:
	cvt.s64.s32	%rd205, %r2252;
	add.s64 	%rd206, %rd3, %rd205;
	ld.local.u8 	%rs169, [%rd206];

BB0_1:
	cvt.u64.u32	%rd152, %r2263;
	add.s64 	%rd153, %rd4, %rd152;
	st.local.u8 	[%rd153], %rs169;
	ld.local.u32 	%r262, [%rd5+-16];
	add.s32 	%r2263, %r262, 1;
	st.local.u32 	[%rd5+-16], %r2263;
	setp.ne.s32	%p1, %r2263, 64;
	@%p1 bra 	BB0_6;

	add.s64 	%rd210, %rd2, 16;
	ld.local.v4.u32 	{%r264, %r265, %r266, %r267}, [%rd4];
	mov.b32	{%rs4, %rs5}, %r264;
	shr.u16 	%rs6, %rs4, 8;
	shr.u16 	%rs7, %rs5, 8;
	mov.b32	{%rs8, %rs9}, %r265;
	shr.u16 	%rs10, %rs8, 8;
	shr.u16 	%rs11, %rs9, 8;
	mov.b32	{%rs12, %rs13}, %r266;
	shr.u16 	%rs14, %rs12, 8;
	shr.u16 	%rs15, %rs13, 8;
	mov.b32	{%rs16, %rs17}, %r267;
	shr.u16 	%rs18, %rs16, 8;
	shr.u16 	%rs19, %rs17, 8;
	cvt.u32.u16	%r272, %rs4;
	shl.b32 	%r273, %r272, 24;
	cvt.u32.u16	%r274, %rs6;
	shl.b32 	%r275, %r274, 16;
	or.b32  	%r276, %r275, %r273;
	and.b16  	%rs20, %rs5, 255;
	mul.wide.u16 	%r277, %rs20, 256;
	or.b32  	%r278, %r276, %r277;
	cvt.u32.u16	%r279, %rs7;
	or.b32  	%r2254, %r278, %r279;
	cvt.u32.u16	%r280, %rs8;
	shl.b32 	%r281, %r280, 24;
	cvt.u32.u16	%r282, %rs10;
	shl.b32 	%r283, %r282, 16;
	or.b32  	%r284, %r283, %r281;
	and.b16  	%rs21, %rs9, 255;
	mul.wide.u16 	%r285, %rs21, 256;
	or.b32  	%r286, %r284, %r285;
	cvt.u32.u16	%r287, %rs11;
	cvt.u32.u16	%r288, %rs12;
	shl.b32 	%r289, %r288, 24;
	cvt.u32.u16	%r290, %rs14;
	shl.b32 	%r291, %r290, 16;
	or.b32  	%r292, %r291, %r289;
	and.b16  	%rs22, %rs13, 255;
	mul.wide.u16 	%r293, %rs22, 256;
	or.b32  	%r294, %r292, %r293;
	cvt.u32.u16	%r295, %rs15;
	cvt.u32.u16	%r296, %rs16;
	shl.b32 	%r297, %r296, 24;
	cvt.u32.u16	%r298, %rs18;
	shl.b32 	%r299, %r298, 16;
	or.b32  	%r300, %r299, %r297;
	and.b16  	%rs23, %rs17, 255;
	mul.wide.u16 	%r301, %rs23, 256;
	or.b32  	%r302, %r300, %r301;
	cvt.u32.u16	%r303, %rs19;
	or.b32  	%r304, %r302, %r303;
	or.b32  	%r305, %r294, %r295;
	or.b32  	%r306, %r286, %r287;
	add.u64 	%rd158, %SPL, 256;
	st.local.v4.u32 	[%rd158], {%r2254, %r306, %r305, %r304};
	ld.local.v4.u32 	{%r307, %r308, %r309, %r310}, [%rd5+-64];
	mov.b32	{%rs24, %rs25}, %r307;
	shr.u16 	%rs26, %rs24, 8;
	shr.u16 	%rs27, %rs25, 8;
	mov.b32	{%rs28, %rs29}, %r308;
	shr.u16 	%rs30, %rs28, 8;
	shr.u16 	%rs31, %rs29, 8;
	mov.b32	{%rs32, %rs33}, %r309;
	shr.u16 	%rs34, %rs32, 8;
	shr.u16 	%rs35, %rs33, 8;
	mov.b32	{%rs36, %rs37}, %r310;
	shr.u16 	%rs38, %rs36, 8;
	shr.u16 	%rs39, %rs37, 8;
	cvt.u32.u16	%r315, %rs24;
	shl.b32 	%r316, %r315, 24;
	cvt.u32.u16	%r317, %rs26;
	shl.b32 	%r318, %r317, 16;
	or.b32  	%r319, %r318, %r316;
	and.b16  	%rs40, %rs25, 255;
	mul.wide.u16 	%r320, %rs40, 256;
	or.b32  	%r321, %r319, %r320;
	cvt.u32.u16	%r322, %rs27;
	cvt.u32.u16	%r323, %rs28;
	shl.b32 	%r324, %r323, 24;
	cvt.u32.u16	%r325, %rs30;
	shl.b32 	%r326, %r325, 16;
	or.b32  	%r327, %r326, %r324;
	and.b16  	%rs41, %rs29, 255;
	mul.wide.u16 	%r328, %rs41, 256;
	or.b32  	%r329, %r327, %r328;
	cvt.u32.u16	%r330, %rs31;
	cvt.u32.u16	%r331, %rs32;
	shl.b32 	%r332, %r331, 24;
	cvt.u32.u16	%r333, %rs34;
	shl.b32 	%r334, %r333, 16;
	or.b32  	%r335, %r334, %r332;
	and.b16  	%rs42, %rs33, 255;
	mul.wide.u16 	%r336, %rs42, 256;
	or.b32  	%r337, %r335, %r336;
	cvt.u32.u16	%r338, %rs35;
	cvt.u32.u16	%r339, %rs36;
	shl.b32 	%r340, %r339, 24;
	cvt.u32.u16	%r341, %rs38;
	shl.b32 	%r342, %r341, 16;
	or.b32  	%r343, %r342, %r340;
	and.b16  	%rs43, %rs37, 255;
	mul.wide.u16 	%r344, %rs43, 256;
	or.b32  	%r345, %r343, %r344;
	cvt.u32.u16	%r346, %rs39;
	or.b32  	%r347, %r345, %r346;
	or.b32  	%r348, %r337, %r338;
	or.b32  	%r349, %r329, %r330;
	or.b32  	%r350, %r321, %r322;
	st.local.v4.u32 	[%rd210], {%r350, %r349, %r348, %r347};
	ld.local.v4.u32 	{%r351, %r352, %r353, %r354}, [%rd5+-48];
	mov.b32	{%rs44, %rs45}, %r351;
	shr.u16 	%rs46, %rs44, 8;
	shr.u16 	%rs47, %rs45, 8;
	mov.b32	{%rs48, %rs49}, %r352;
	shr.u16 	%rs50, %rs48, 8;
	shr.u16 	%rs51, %rs49, 8;
	mov.b32	{%rs52, %rs53}, %r353;
	shr.u16 	%rs54, %rs52, 8;
	shr.u16 	%rs55, %rs53, 8;
	mov.b32	{%rs56, %rs57}, %r354;
	shr.u16 	%rs58, %rs56, 8;
	shr.u16 	%rs59, %rs57, 8;
	cvt.u32.u16	%r359, %rs44;
	shl.b32 	%r360, %r359, 24;
	cvt.u32.u16	%r361, %rs46;
	shl.b32 	%r362, %r361, 16;
	or.b32  	%r363, %r362, %r360;
	and.b16  	%rs60, %rs45, 255;
	mul.wide.u16 	%r364, %rs60, 256;
	or.b32  	%r365, %r363, %r364;
	cvt.u32.u16	%r366, %rs47;
	cvt.u32.u16	%r367, %rs48;
	shl.b32 	%r368, %r367, 24;
	cvt.u32.u16	%r369, %rs50;
	shl.b32 	%r370, %r369, 16;
	or.b32  	%r371, %r370, %r368;
	and.b16  	%rs61, %rs49, 255;
	mul.wide.u16 	%r372, %rs61, 256;
	or.b32  	%r373, %r371, %r372;
	cvt.u32.u16	%r374, %rs51;
	cvt.u32.u16	%r375, %rs52;
	shl.b32 	%r376, %r375, 24;
	cvt.u32.u16	%r377, %rs54;
	shl.b32 	%r378, %r377, 16;
	or.b32  	%r379, %r378, %r376;
	and.b16  	%rs62, %rs53, 255;
	mul.wide.u16 	%r380, %rs62, 256;
	or.b32  	%r381, %r379, %r380;
	cvt.u32.u16	%r382, %rs55;
	cvt.u32.u16	%r383, %rs56;
	shl.b32 	%r384, %r383, 24;
	cvt.u32.u16	%r385, %rs58;
	shl.b32 	%r386, %r385, 16;
	or.b32  	%r387, %r386, %r384;
	and.b16  	%rs63, %rs57, 255;
	mul.wide.u16 	%r388, %rs63, 256;
	or.b32  	%r389, %r387, %r388;
	cvt.u32.u16	%r390, %rs59;
	or.b32  	%r391, %r389, %r390;
	or.b32  	%r392, %r381, %r382;
	or.b32  	%r393, %r373, %r374;
	or.b32  	%r394, %r365, %r366;
	st.local.v4.u32 	[%rd210+16], {%r394, %r393, %r392, %r391};
	ld.local.v4.u32 	{%r395, %r396, %r397, %r398}, [%rd5+-32];
	mov.b32	{%rs64, %rs65}, %r395;
	shr.u16 	%rs66, %rs64, 8;
	shr.u16 	%rs67, %rs65, 8;
	mov.b32	{%rs68, %rs69}, %r396;
	shr.u16 	%rs70, %rs68, 8;
	shr.u16 	%rs71, %rs69, 8;
	mov.b32	{%rs72, %rs73}, %r397;
	shr.u16 	%rs74, %rs72, 8;
	shr.u16 	%rs75, %rs73, 8;
	mov.b32	{%rs76, %rs77}, %r398;
	shr.u16 	%rs78, %rs76, 8;
	shr.u16 	%rs79, %rs77, 8;
	cvt.u32.u16	%r403, %rs64;
	shl.b32 	%r404, %r403, 24;
	cvt.u32.u16	%r405, %rs66;
	shl.b32 	%r406, %r405, 16;
	or.b32  	%r407, %r406, %r404;
	and.b16  	%rs80, %rs65, 255;
	mul.wide.u16 	%r408, %rs80, 256;
	or.b32  	%r409, %r407, %r408;
	cvt.u32.u16	%r410, %rs67;
	cvt.u32.u16	%r411, %rs68;
	shl.b32 	%r412, %r411, 24;
	cvt.u32.u16	%r413, %rs70;
	shl.b32 	%r414, %r413, 16;
	or.b32  	%r415, %r414, %r412;
	and.b16  	%rs81, %rs69, 255;
	mul.wide.u16 	%r416, %rs81, 256;
	or.b32  	%r417, %r415, %r416;
	cvt.u32.u16	%r418, %rs71;
	cvt.u32.u16	%r419, %rs72;
	shl.b32 	%r420, %r419, 24;
	cvt.u32.u16	%r421, %rs74;
	shl.b32 	%r422, %r421, 16;
	or.b32  	%r423, %r422, %r420;
	and.b16  	%rs82, %rs73, 255;
	mul.wide.u16 	%r424, %rs82, 256;
	or.b32  	%r425, %r423, %r424;
	cvt.u32.u16	%r426, %rs75;
	cvt.u32.u16	%r427, %rs76;
	shl.b32 	%r428, %r427, 24;
	cvt.u32.u16	%r429, %rs78;
	shl.b32 	%r430, %r429, 16;
	or.b32  	%r431, %r430, %r428;
	and.b16  	%rs83, %rs77, 255;
	mul.wide.u16 	%r432, %rs83, 256;
	or.b32  	%r433, %r431, %r432;
	cvt.u32.u16	%r434, %rs79;
	or.b32  	%r435, %r433, %r434;
	or.b32  	%r436, %r425, %r426;
	or.b32  	%r437, %r417, %r418;
	or.b32  	%r438, %r409, %r410;
	st.local.v4.u32 	[%rd210+32], {%r438, %r437, %r436, %r435};
	shr.u32 	%r439, %r306, 7;
	shl.b32 	%r440, %r287, 25;
	or.b32  	%r441, %r439, %r440;
	shr.u32 	%r442, %r284, 18;
	shl.b32 	%r443, %r306, 14;
	or.b32  	%r444, %r442, %r443;
	xor.b32  	%r445, %r441, %r444;
	shr.u32 	%r446, %r306, 3;
	xor.b32  	%r447, %r445, %r446;
	shr.u32 	%r448, %r423, 17;
	shl.b32 	%r449, %r436, 15;
	or.b32  	%r450, %r448, %r449;
	shr.u32 	%r451, %r423, 19;
	shl.b32 	%r452, %r436, 13;
	or.b32  	%r453, %r451, %r452;
	xor.b32  	%r454, %r450, %r453;
	shr.u32 	%r455, %r425, 10;
	xor.b32  	%r456, %r454, %r455;
	add.s32 	%r457, %r393, %r2254;
	add.s32 	%r458, %r457, %r447;
	shr.u32 	%r459, %r305, 7;
	shl.b32 	%r460, %r295, 25;
	or.b32  	%r461, %r459, %r460;
	shr.u32 	%r462, %r292, 18;
	shl.b32 	%r463, %r305, 14;
	or.b32  	%r464, %r462, %r463;
	xor.b32  	%r465, %r461, %r464;
	shr.u32 	%r466, %r305, 3;
	xor.b32  	%r467, %r465, %r466;
	shr.u32 	%r468, %r431, 17;
	shl.b32 	%r469, %r435, 15;
	or.b32  	%r470, %r468, %r469;
	shr.u32 	%r471, %r431, 19;
	shl.b32 	%r472, %r435, 13;
	or.b32  	%r473, %r471, %r472;
	xor.b32  	%r474, %r470, %r473;
	shr.u32 	%r475, %r433, 10;
	xor.b32  	%r476, %r474, %r475;
	add.s32 	%r477, %r392, %r306;
	add.s32 	%r478, %r477, %r467;
	shr.u32 	%r479, %r304, 7;
	shl.b32 	%r480, %r303, 25;
	or.b32  	%r481, %r479, %r480;
	shr.u32 	%r482, %r300, 18;
	shl.b32 	%r483, %r304, 14;
	or.b32  	%r484, %r482, %r483;
	xor.b32  	%r485, %r481, %r484;
	shr.u32 	%r486, %r304, 3;
	xor.b32  	%r487, %r485, %r486;
	add.s32 	%r488, %r458, %r456;
	shf.l.wrap.b32 	%r489, %r488, %r488, 15;
	shf.l.wrap.b32 	%r490, %r488, %r488, 13;
	xor.b32  	%r491, %r489, %r490;
	shr.u32 	%r492, %r488, 10;
	xor.b32  	%r493, %r491, %r492;
	add.s32 	%r494, %r391, %r305;
	add.s32 	%r495, %r494, %r487;
	shr.u32 	%r496, %r350, 7;
	shl.b32 	%r497, %r322, 25;
	or.b32  	%r498, %r496, %r497;
	shr.u32 	%r499, %r319, 18;
	shl.b32 	%r500, %r350, 14;
	or.b32  	%r501, %r499, %r500;
	xor.b32  	%r502, %r498, %r501;
	shr.u32 	%r503, %r350, 3;
	xor.b32  	%r504, %r502, %r503;
	add.s32 	%r505, %r478, %r476;
	shf.l.wrap.b32 	%r506, %r505, %r505, 15;
	shf.l.wrap.b32 	%r507, %r505, %r505, 13;
	xor.b32  	%r508, %r506, %r507;
	shr.u32 	%r509, %r505, 10;
	xor.b32  	%r510, %r508, %r509;
	add.s32 	%r511, %r438, %r304;
	add.s32 	%r512, %r511, %r504;
	add.s32 	%r513, %r512, %r510;
	add.s32 	%r514, %r495, %r493;
	st.local.v4.u32 	[%rd210+48], {%r488, %r505, %r514, %r513};
	shr.u32 	%r515, %r349, 7;
	shl.b32 	%r516, %r330, 25;
	or.b32  	%r517, %r515, %r516;
	shr.u32 	%r518, %r327, 18;
	shl.b32 	%r519, %r349, 14;
	or.b32  	%r520, %r518, %r519;
	xor.b32  	%r521, %r517, %r520;
	shr.u32 	%r522, %r349, 3;
	xor.b32  	%r523, %r521, %r522;
	shf.l.wrap.b32 	%r524, %r514, %r514, 15;
	shf.l.wrap.b32 	%r525, %r514, %r514, 13;
	xor.b32  	%r526, %r524, %r525;
	shr.u32 	%r527, %r514, 10;
	xor.b32  	%r528, %r526, %r527;
	add.s32 	%r529, %r437, %r350;
	add.s32 	%r530, %r529, %r523;
	shr.u32 	%r531, %r348, 7;
	shl.b32 	%r532, %r338, 25;
	or.b32  	%r533, %r531, %r532;
	shr.u32 	%r534, %r335, 18;
	shl.b32 	%r535, %r348, 14;
	or.b32  	%r536, %r534, %r535;
	xor.b32  	%r537, %r533, %r536;
	shr.u32 	%r538, %r348, 3;
	xor.b32  	%r539, %r537, %r538;
	shf.l.wrap.b32 	%r540, %r513, %r513, 15;
	shf.l.wrap.b32 	%r541, %r513, %r513, 13;
	xor.b32  	%r542, %r540, %r541;
	shr.u32 	%r543, %r513, 10;
	xor.b32  	%r544, %r542, %r543;
	add.s32 	%r545, %r436, %r349;
	add.s32 	%r546, %r545, %r539;
	shr.u32 	%r547, %r347, 7;
	shl.b32 	%r548, %r346, 25;
	or.b32  	%r549, %r547, %r548;
	shr.u32 	%r550, %r343, 18;
	shl.b32 	%r551, %r347, 14;
	or.b32  	%r552, %r550, %r551;
	xor.b32  	%r553, %r549, %r552;
	shr.u32 	%r554, %r347, 3;
	xor.b32  	%r555, %r553, %r554;
	add.s32 	%r556, %r530, %r528;
	shf.l.wrap.b32 	%r557, %r556, %r556, 15;
	shf.l.wrap.b32 	%r558, %r556, %r556, 13;
	xor.b32  	%r559, %r557, %r558;
	shr.u32 	%r560, %r556, 10;
	xor.b32  	%r561, %r559, %r560;
	add.s32 	%r562, %r435, %r348;
	add.s32 	%r563, %r562, %r555;
	shr.u32 	%r564, %r394, 7;
	shl.b32 	%r565, %r366, 25;
	or.b32  	%r566, %r564, %r565;
	shr.u32 	%r567, %r363, 18;
	shl.b32 	%r568, %r394, 14;
	or.b32  	%r569, %r567, %r568;
	xor.b32  	%r570, %r566, %r569;
	shr.u32 	%r571, %r394, 3;
	xor.b32  	%r572, %r570, %r571;
	add.s32 	%r573, %r546, %r544;
	shf.l.wrap.b32 	%r574, %r573, %r573, 15;
	shf.l.wrap.b32 	%r575, %r573, %r573, 13;
	xor.b32  	%r576, %r574, %r575;
	shr.u32 	%r577, %r573, 10;
	xor.b32  	%r578, %r576, %r577;
	add.s32 	%r579, %r488, %r347;
	add.s32 	%r580, %r579, %r572;
	add.s32 	%r581, %r580, %r578;
	add.s32 	%r582, %r563, %r561;
	st.local.v4.u32 	[%rd210+64], {%r556, %r573, %r582, %r581};
	shr.u32 	%r583, %r393, 7;
	shl.b32 	%r584, %r374, 25;
	or.b32  	%r585, %r583, %r584;
	shr.u32 	%r586, %r371, 18;
	shl.b32 	%r587, %r393, 14;
	or.b32  	%r588, %r586, %r587;
	xor.b32  	%r589, %r585, %r588;
	shr.u32 	%r590, %r393, 3;
	xor.b32  	%r591, %r589, %r590;
	shf.l.wrap.b32 	%r592, %r582, %r582, 15;
	shf.l.wrap.b32 	%r593, %r582, %r582, 13;
	xor.b32  	%r594, %r592, %r593;
	shr.u32 	%r595, %r582, 10;
	xor.b32  	%r596, %r594, %r595;
	add.s32 	%r597, %r505, %r394;
	add.s32 	%r598, %r597, %r591;
	shr.u32 	%r599, %r392, 7;
	shl.b32 	%r600, %r382, 25;
	or.b32  	%r601, %r599, %r600;
	shr.u32 	%r602, %r379, 18;
	shl.b32 	%r603, %r392, 14;
	or.b32  	%r604, %r602, %r603;
	xor.b32  	%r605, %r601, %r604;
	shr.u32 	%r606, %r392, 3;
	xor.b32  	%r607, %r605, %r606;
	shf.l.wrap.b32 	%r608, %r581, %r581, 15;
	shf.l.wrap.b32 	%r609, %r581, %r581, 13;
	xor.b32  	%r610, %r608, %r609;
	shr.u32 	%r611, %r581, 10;
	xor.b32  	%r612, %r610, %r611;
	add.s32 	%r613, %r514, %r393;
	add.s32 	%r614, %r613, %r607;
	shr.u32 	%r615, %r391, 7;
	shl.b32 	%r616, %r390, 25;
	or.b32  	%r617, %r615, %r616;
	shr.u32 	%r618, %r387, 18;
	shl.b32 	%r619, %r391, 14;
	or.b32  	%r620, %r618, %r619;
	xor.b32  	%r621, %r617, %r620;
	shr.u32 	%r622, %r391, 3;
	xor.b32  	%r623, %r621, %r622;
	add.s32 	%r624, %r598, %r596;
	shf.l.wrap.b32 	%r625, %r624, %r624, 15;
	shf.l.wrap.b32 	%r626, %r624, %r624, 13;
	xor.b32  	%r627, %r625, %r626;
	shr.u32 	%r628, %r624, 10;
	xor.b32  	%r629, %r627, %r628;
	add.s32 	%r630, %r513, %r392;
	add.s32 	%r631, %r630, %r623;
	shr.u32 	%r632, %r438, 7;
	shl.b32 	%r633, %r410, 25;
	or.b32  	%r634, %r632, %r633;
	shr.u32 	%r635, %r407, 18;
	shl.b32 	%r636, %r438, 14;
	or.b32  	%r637, %r635, %r636;
	xor.b32  	%r638, %r634, %r637;
	shr.u32 	%r639, %r438, 3;
	xor.b32  	%r640, %r638, %r639;
	add.s32 	%r641, %r614, %r612;
	shf.l.wrap.b32 	%r642, %r641, %r641, 15;
	shf.l.wrap.b32 	%r643, %r641, %r641, 13;
	xor.b32  	%r644, %r642, %r643;
	shr.u32 	%r645, %r641, 10;
	xor.b32  	%r646, %r644, %r645;
	add.s32 	%r647, %r556, %r391;
	add.s32 	%r648, %r647, %r640;
	add.s32 	%r649, %r648, %r646;
	add.s32 	%r650, %r631, %r629;
	st.local.v4.u32 	[%rd210+80], {%r624, %r641, %r650, %r649};
	shr.u32 	%r651, %r437, 7;
	shl.b32 	%r652, %r418, 25;
	or.b32  	%r653, %r651, %r652;
	shr.u32 	%r654, %r415, 18;
	shl.b32 	%r655, %r437, 14;
	or.b32  	%r656, %r654, %r655;
	xor.b32  	%r657, %r653, %r656;
	shr.u32 	%r658, %r437, 3;
	xor.b32  	%r659, %r657, %r658;
	shf.l.wrap.b32 	%r660, %r650, %r650, 15;
	shf.l.wrap.b32 	%r661, %r650, %r650, 13;
	xor.b32  	%r662, %r660, %r661;
	shr.u32 	%r663, %r650, 10;
	xor.b32  	%r664, %r662, %r663;
	add.s32 	%r665, %r573, %r438;
	add.s32 	%r666, %r665, %r659;
	shr.u32 	%r667, %r436, 7;
	shl.b32 	%r668, %r426, 25;
	or.b32  	%r669, %r667, %r668;
	shr.u32 	%r670, %r423, 18;
	shl.b32 	%r671, %r436, 14;
	or.b32  	%r672, %r670, %r671;
	xor.b32  	%r673, %r669, %r672;
	shr.u32 	%r674, %r436, 3;
	xor.b32  	%r675, %r673, %r674;
	shf.l.wrap.b32 	%r676, %r649, %r649, 15;
	shf.l.wrap.b32 	%r677, %r649, %r649, 13;
	xor.b32  	%r678, %r676, %r677;
	shr.u32 	%r679, %r649, 10;
	xor.b32  	%r680, %r678, %r679;
	add.s32 	%r681, %r582, %r437;
	add.s32 	%r682, %r681, %r675;
	shr.u32 	%r683, %r435, 7;
	shl.b32 	%r684, %r434, 25;
	or.b32  	%r685, %r683, %r684;
	shr.u32 	%r686, %r431, 18;
	shl.b32 	%r687, %r435, 14;
	or.b32  	%r688, %r686, %r687;
	xor.b32  	%r689, %r685, %r688;
	shr.u32 	%r690, %r435, 3;
	xor.b32  	%r691, %r689, %r690;
	add.s32 	%r692, %r666, %r664;
	shf.l.wrap.b32 	%r693, %r692, %r692, 15;
	shf.l.wrap.b32 	%r694, %r692, %r692, 13;
	xor.b32  	%r695, %r693, %r694;
	shr.u32 	%r696, %r692, 10;
	xor.b32  	%r697, %r695, %r696;
	add.s32 	%r698, %r581, %r436;
	add.s32 	%r699, %r698, %r691;
	shf.l.wrap.b32 	%r700, %r488, %r488, 25;
	shf.l.wrap.b32 	%r701, %r488, %r488, 14;
	xor.b32  	%r702, %r700, %r701;
	shr.u32 	%r703, %r488, 3;
	xor.b32  	%r704, %r702, %r703;
	add.s32 	%r705, %r682, %r680;
	shf.l.wrap.b32 	%r706, %r705, %r705, 15;
	shf.l.wrap.b32 	%r707, %r705, %r705, 13;
	xor.b32  	%r708, %r706, %r707;
	shr.u32 	%r709, %r705, 10;
	xor.b32  	%r710, %r708, %r709;
	add.s32 	%r711, %r624, %r435;
	add.s32 	%r712, %r711, %r704;
	add.s32 	%r713, %r712, %r710;
	add.s32 	%r714, %r699, %r697;
	st.local.v4.u32 	[%rd210+96], {%r692, %r705, %r714, %r713};
	shf.l.wrap.b32 	%r715, %r505, %r505, 25;
	shf.l.wrap.b32 	%r716, %r505, %r505, 14;
	xor.b32  	%r717, %r715, %r716;
	shr.u32 	%r718, %r505, 3;
	xor.b32  	%r719, %r717, %r718;
	shf.l.wrap.b32 	%r720, %r714, %r714, 15;
	shf.l.wrap.b32 	%r721, %r714, %r714, 13;
	xor.b32  	%r722, %r720, %r721;
	shr.u32 	%r723, %r714, 10;
	xor.b32  	%r724, %r722, %r723;
	add.s32 	%r725, %r641, %r488;
	add.s32 	%r726, %r725, %r719;
	shf.l.wrap.b32 	%r727, %r514, %r514, 25;
	shf.l.wrap.b32 	%r728, %r514, %r514, 14;
	xor.b32  	%r729, %r727, %r728;
	shr.u32 	%r730, %r514, 3;
	xor.b32  	%r731, %r729, %r730;
	shf.l.wrap.b32 	%r732, %r713, %r713, 15;
	shf.l.wrap.b32 	%r733, %r713, %r713, 13;
	xor.b32  	%r734, %r732, %r733;
	shr.u32 	%r735, %r713, 10;
	xor.b32  	%r736, %r734, %r735;
	add.s32 	%r737, %r650, %r505;
	add.s32 	%r738, %r737, %r731;
	shf.l.wrap.b32 	%r739, %r513, %r513, 25;
	shf.l.wrap.b32 	%r740, %r513, %r513, 14;
	xor.b32  	%r741, %r739, %r740;
	shr.u32 	%r742, %r513, 3;
	xor.b32  	%r743, %r741, %r742;
	add.s32 	%r744, %r726, %r724;
	shf.l.wrap.b32 	%r745, %r744, %r744, 15;
	shf.l.wrap.b32 	%r746, %r744, %r744, 13;
	xor.b32  	%r747, %r745, %r746;
	shr.u32 	%r748, %r744, 10;
	xor.b32  	%r749, %r747, %r748;
	add.s32 	%r750, %r649, %r514;
	add.s32 	%r751, %r750, %r743;
	shf.l.wrap.b32 	%r752, %r556, %r556, 25;
	shf.l.wrap.b32 	%r753, %r556, %r556, 14;
	xor.b32  	%r754, %r752, %r753;
	shr.u32 	%r755, %r556, 3;
	xor.b32  	%r756, %r754, %r755;
	add.s32 	%r757, %r738, %r736;
	shf.l.wrap.b32 	%r758, %r757, %r757, 15;
	shf.l.wrap.b32 	%r759, %r757, %r757, 13;
	xor.b32  	%r760, %r758, %r759;
	shr.u32 	%r761, %r757, 10;
	xor.b32  	%r762, %r760, %r761;
	add.s32 	%r763, %r692, %r513;
	add.s32 	%r764, %r763, %r756;
	add.s32 	%r765, %r764, %r762;
	add.s32 	%r766, %r751, %r749;
	st.local.v4.u32 	[%rd210+112], {%r744, %r757, %r766, %r765};
	shf.l.wrap.b32 	%r767, %r573, %r573, 25;
	shf.l.wrap.b32 	%r768, %r573, %r573, 14;
	xor.b32  	%r769, %r767, %r768;
	shr.u32 	%r770, %r573, 3;
	xor.b32  	%r771, %r769, %r770;
	shf.l.wrap.b32 	%r772, %r766, %r766, 15;
	shf.l.wrap.b32 	%r773, %r766, %r766, 13;
	xor.b32  	%r774, %r772, %r773;
	shr.u32 	%r775, %r766, 10;
	xor.b32  	%r776, %r774, %r775;
	add.s32 	%r777, %r705, %r556;
	add.s32 	%r778, %r777, %r771;
	shf.l.wrap.b32 	%r779, %r582, %r582, 25;
	shf.l.wrap.b32 	%r780, %r582, %r582, 14;
	xor.b32  	%r781, %r779, %r780;
	shr.u32 	%r782, %r582, 3;
	xor.b32  	%r783, %r781, %r782;
	shf.l.wrap.b32 	%r784, %r765, %r765, 15;
	shf.l.wrap.b32 	%r785, %r765, %r765, 13;
	xor.b32  	%r786, %r784, %r785;
	shr.u32 	%r787, %r765, 10;
	xor.b32  	%r788, %r786, %r787;
	add.s32 	%r789, %r714, %r573;
	add.s32 	%r790, %r789, %r783;
	shf.l.wrap.b32 	%r791, %r581, %r581, 25;
	shf.l.wrap.b32 	%r792, %r581, %r581, 14;
	xor.b32  	%r793, %r791, %r792;
	shr.u32 	%r794, %r581, 3;
	xor.b32  	%r795, %r793, %r794;
	add.s32 	%r796, %r778, %r776;
	shf.l.wrap.b32 	%r797, %r796, %r796, 15;
	shf.l.wrap.b32 	%r798, %r796, %r796, 13;
	xor.b32  	%r799, %r797, %r798;
	shr.u32 	%r800, %r796, 10;
	xor.b32  	%r801, %r799, %r800;
	add.s32 	%r802, %r713, %r582;
	add.s32 	%r803, %r802, %r795;
	shf.l.wrap.b32 	%r804, %r624, %r624, 25;
	shf.l.wrap.b32 	%r805, %r624, %r624, 14;
	xor.b32  	%r806, %r804, %r805;
	shr.u32 	%r807, %r624, 3;
	xor.b32  	%r808, %r806, %r807;
	add.s32 	%r809, %r790, %r788;
	shf.l.wrap.b32 	%r810, %r809, %r809, 15;
	shf.l.wrap.b32 	%r811, %r809, %r809, 13;
	xor.b32  	%r812, %r810, %r811;
	shr.u32 	%r813, %r809, 10;
	xor.b32  	%r814, %r812, %r813;
	add.s32 	%r815, %r744, %r581;
	add.s32 	%r816, %r815, %r808;
	add.s32 	%r817, %r816, %r814;
	add.s32 	%r818, %r803, %r801;
	st.local.v4.u32 	[%rd210+128], {%r796, %r809, %r818, %r817};
	shf.l.wrap.b32 	%r819, %r641, %r641, 25;
	shf.l.wrap.b32 	%r820, %r641, %r641, 14;
	xor.b32  	%r821, %r819, %r820;
	shr.u32 	%r822, %r641, 3;
	xor.b32  	%r823, %r821, %r822;
	shf.l.wrap.b32 	%r824, %r818, %r818, 15;
	shf.l.wrap.b32 	%r825, %r818, %r818, 13;
	xor.b32  	%r826, %r824, %r825;
	shr.u32 	%r827, %r818, 10;
	xor.b32  	%r828, %r826, %r827;
	add.s32 	%r829, %r757, %r624;
	add.s32 	%r830, %r829, %r823;
	shf.l.wrap.b32 	%r831, %r650, %r650, 25;
	shf.l.wrap.b32 	%r832, %r650, %r650, 14;
	xor.b32  	%r833, %r831, %r832;
	shr.u32 	%r834, %r650, 3;
	xor.b32  	%r835, %r833, %r834;
	shf.l.wrap.b32 	%r836, %r817, %r817, 15;
	shf.l.wrap.b32 	%r837, %r817, %r817, 13;
	xor.b32  	%r838, %r836, %r837;
	shr.u32 	%r839, %r817, 10;
	xor.b32  	%r840, %r838, %r839;
	add.s32 	%r841, %r766, %r641;
	add.s32 	%r842, %r841, %r835;
	shf.l.wrap.b32 	%r843, %r649, %r649, 25;
	shf.l.wrap.b32 	%r844, %r649, %r649, 14;
	xor.b32  	%r845, %r843, %r844;
	shr.u32 	%r846, %r649, 3;
	xor.b32  	%r847, %r845, %r846;
	add.s32 	%r848, %r830, %r828;
	shf.l.wrap.b32 	%r849, %r848, %r848, 15;
	shf.l.wrap.b32 	%r850, %r848, %r848, 13;
	xor.b32  	%r851, %r849, %r850;
	shr.u32 	%r852, %r848, 10;
	xor.b32  	%r853, %r851, %r852;
	add.s32 	%r854, %r765, %r650;
	add.s32 	%r855, %r854, %r847;
	shf.l.wrap.b32 	%r856, %r692, %r692, 25;
	shf.l.wrap.b32 	%r857, %r692, %r692, 14;
	xor.b32  	%r858, %r856, %r857;
	shr.u32 	%r859, %r692, 3;
	xor.b32  	%r860, %r858, %r859;
	add.s32 	%r861, %r842, %r840;
	shf.l.wrap.b32 	%r862, %r861, %r861, 15;
	shf.l.wrap.b32 	%r863, %r861, %r861, 13;
	xor.b32  	%r864, %r862, %r863;
	shr.u32 	%r865, %r861, 10;
	xor.b32  	%r866, %r864, %r865;
	add.s32 	%r867, %r796, %r649;
	add.s32 	%r868, %r867, %r860;
	add.s32 	%r869, %r868, %r866;
	add.s32 	%r870, %r855, %r853;
	st.local.v4.u32 	[%rd210+144], {%r848, %r861, %r870, %r869};
	shf.l.wrap.b32 	%r871, %r705, %r705, 25;
	shf.l.wrap.b32 	%r872, %r705, %r705, 14;
	xor.b32  	%r873, %r871, %r872;
	shr.u32 	%r874, %r705, 3;
	xor.b32  	%r875, %r873, %r874;
	shf.l.wrap.b32 	%r876, %r870, %r870, 15;
	shf.l.wrap.b32 	%r877, %r870, %r870, 13;
	xor.b32  	%r878, %r876, %r877;
	shr.u32 	%r879, %r870, 10;
	xor.b32  	%r880, %r878, %r879;
	add.s32 	%r881, %r809, %r692;
	add.s32 	%r882, %r881, %r875;
	shf.l.wrap.b32 	%r883, %r714, %r714, 25;
	shf.l.wrap.b32 	%r884, %r714, %r714, 14;
	xor.b32  	%r885, %r883, %r884;
	shr.u32 	%r886, %r714, 3;
	xor.b32  	%r887, %r885, %r886;
	shf.l.wrap.b32 	%r888, %r869, %r869, 15;
	shf.l.wrap.b32 	%r889, %r869, %r869, 13;
	xor.b32  	%r890, %r888, %r889;
	shr.u32 	%r891, %r869, 10;
	xor.b32  	%r892, %r890, %r891;
	add.s32 	%r893, %r818, %r705;
	add.s32 	%r894, %r893, %r887;
	shf.l.wrap.b32 	%r895, %r713, %r713, 25;
	shf.l.wrap.b32 	%r896, %r713, %r713, 14;
	xor.b32  	%r897, %r895, %r896;
	shr.u32 	%r898, %r713, 3;
	xor.b32  	%r899, %r897, %r898;
	add.s32 	%r900, %r882, %r880;
	shf.l.wrap.b32 	%r901, %r900, %r900, 15;
	shf.l.wrap.b32 	%r902, %r900, %r900, 13;
	xor.b32  	%r903, %r901, %r902;
	shr.u32 	%r904, %r900, 10;
	xor.b32  	%r905, %r903, %r904;
	add.s32 	%r906, %r817, %r714;
	add.s32 	%r907, %r906, %r899;
	shf.l.wrap.b32 	%r908, %r744, %r744, 25;
	shf.l.wrap.b32 	%r909, %r744, %r744, 14;
	xor.b32  	%r910, %r908, %r909;
	shr.u32 	%r911, %r744, 3;
	xor.b32  	%r912, %r910, %r911;
	add.s32 	%r913, %r894, %r892;
	shf.l.wrap.b32 	%r914, %r913, %r913, 15;
	shf.l.wrap.b32 	%r915, %r913, %r913, 13;
	xor.b32  	%r916, %r914, %r915;
	shr.u32 	%r917, %r913, 10;
	xor.b32  	%r918, %r916, %r917;
	add.s32 	%r919, %r848, %r713;
	add.s32 	%r920, %r919, %r912;
	add.s32 	%r921, %r920, %r918;
	add.s32 	%r922, %r907, %r905;
	st.local.v4.u32 	[%rd210+160], {%r900, %r913, %r922, %r921};
	shf.l.wrap.b32 	%r923, %r757, %r757, 25;
	shf.l.wrap.b32 	%r924, %r757, %r757, 14;
	xor.b32  	%r925, %r923, %r924;
	shr.u32 	%r926, %r757, 3;
	xor.b32  	%r927, %r925, %r926;
	shf.l.wrap.b32 	%r928, %r922, %r922, 15;
	shf.l.wrap.b32 	%r929, %r922, %r922, 13;
	xor.b32  	%r930, %r928, %r929;
	shr.u32 	%r931, %r922, 10;
	xor.b32  	%r932, %r930, %r931;
	add.s32 	%r933, %r861, %r744;
	add.s32 	%r934, %r933, %r927;
	shf.l.wrap.b32 	%r935, %r766, %r766, 25;
	shf.l.wrap.b32 	%r936, %r766, %r766, 14;
	xor.b32  	%r937, %r935, %r936;
	shr.u32 	%r938, %r766, 3;
	xor.b32  	%r939, %r937, %r938;
	shf.l.wrap.b32 	%r940, %r921, %r921, 15;
	shf.l.wrap.b32 	%r941, %r921, %r921, 13;
	xor.b32  	%r942, %r940, %r941;
	shr.u32 	%r943, %r921, 10;
	xor.b32  	%r944, %r942, %r943;
	add.s32 	%r945, %r870, %r757;
	add.s32 	%r946, %r945, %r939;
	shf.l.wrap.b32 	%r947, %r765, %r765, 25;
	shf.l.wrap.b32 	%r948, %r765, %r765, 14;
	xor.b32  	%r949, %r947, %r948;
	shr.u32 	%r950, %r765, 3;
	xor.b32  	%r951, %r949, %r950;
	add.s32 	%r952, %r934, %r932;
	shf.l.wrap.b32 	%r953, %r952, %r952, 15;
	shf.l.wrap.b32 	%r954, %r952, %r952, 13;
	xor.b32  	%r955, %r953, %r954;
	shr.u32 	%r956, %r952, 10;
	xor.b32  	%r957, %r955, %r956;
	add.s32 	%r958, %r869, %r766;
	add.s32 	%r959, %r958, %r951;
	shf.l.wrap.b32 	%r960, %r796, %r796, 25;
	shf.l.wrap.b32 	%r961, %r796, %r796, 14;
	xor.b32  	%r962, %r960, %r961;
	shr.u32 	%r963, %r796, 3;
	xor.b32  	%r964, %r962, %r963;
	add.s32 	%r965, %r946, %r944;
	shf.l.wrap.b32 	%r966, %r965, %r965, 15;
	shf.l.wrap.b32 	%r967, %r965, %r965, 13;
	xor.b32  	%r968, %r966, %r967;
	shr.u32 	%r969, %r965, 10;
	xor.b32  	%r970, %r968, %r969;
	add.s32 	%r971, %r900, %r765;
	add.s32 	%r972, %r971, %r964;
	add.s32 	%r973, %r972, %r970;
	add.s32 	%r974, %r959, %r957;
	st.local.v4.u32 	[%rd210+176], {%r952, %r965, %r974, %r973};
	shf.l.wrap.b32 	%r975, %r809, %r809, 25;
	shf.l.wrap.b32 	%r976, %r809, %r809, 14;
	xor.b32  	%r977, %r975, %r976;
	shr.u32 	%r978, %r809, 3;
	xor.b32  	%r979, %r977, %r978;
	shf.l.wrap.b32 	%r980, %r974, %r974, 15;
	shf.l.wrap.b32 	%r981, %r974, %r974, 13;
	xor.b32  	%r982, %r980, %r981;
	shr.u32 	%r983, %r974, 10;
	xor.b32  	%r984, %r982, %r983;
	add.s32 	%r985, %r913, %r796;
	add.s32 	%r986, %r985, %r979;
	shf.l.wrap.b32 	%r987, %r818, %r818, 25;
	shf.l.wrap.b32 	%r988, %r818, %r818, 14;
	xor.b32  	%r989, %r987, %r988;
	shr.u32 	%r990, %r818, 3;
	xor.b32  	%r991, %r989, %r990;
	shf.l.wrap.b32 	%r992, %r973, %r973, 15;
	shf.l.wrap.b32 	%r993, %r973, %r973, 13;
	xor.b32  	%r994, %r992, %r993;
	shr.u32 	%r995, %r973, 10;
	xor.b32  	%r996, %r994, %r995;
	add.s32 	%r997, %r922, %r809;
	add.s32 	%r998, %r997, %r991;
	shf.l.wrap.b32 	%r999, %r817, %r817, 25;
	shf.l.wrap.b32 	%r1000, %r817, %r817, 14;
	xor.b32  	%r1001, %r999, %r1000;
	shr.u32 	%r1002, %r817, 3;
	xor.b32  	%r1003, %r1001, %r1002;
	add.s32 	%r1004, %r986, %r984;
	shf.l.wrap.b32 	%r1005, %r1004, %r1004, 15;
	shf.l.wrap.b32 	%r1006, %r1004, %r1004, 13;
	xor.b32  	%r1007, %r1005, %r1006;
	shr.u32 	%r1008, %r1004, 10;
	xor.b32  	%r1009, %r1007, %r1008;
	add.s32 	%r1010, %r921, %r818;
	add.s32 	%r1011, %r1010, %r1003;
	shf.l.wrap.b32 	%r1012, %r848, %r848, 25;
	shf.l.wrap.b32 	%r1013, %r848, %r848, 14;
	xor.b32  	%r1014, %r1012, %r1013;
	shr.u32 	%r1015, %r848, 3;
	xor.b32  	%r1016, %r1014, %r1015;
	add.s32 	%r1017, %r998, %r996;
	shf.l.wrap.b32 	%r1018, %r1017, %r1017, 15;
	shf.l.wrap.b32 	%r1019, %r1017, %r1017, 13;
	xor.b32  	%r1020, %r1018, %r1019;
	shr.u32 	%r1021, %r1017, 10;
	xor.b32  	%r1022, %r1020, %r1021;
	add.s32 	%r1023, %r952, %r817;
	add.s32 	%r1024, %r1023, %r1016;
	add.s32 	%r1025, %r1024, %r1022;
	add.s32 	%r1026, %r1011, %r1009;
	st.local.v4.u32 	[%rd210+192], {%r1004, %r1017, %r1026, %r1025};
	shf.l.wrap.b32 	%r1027, %r861, %r861, 25;
	shf.l.wrap.b32 	%r1028, %r861, %r861, 14;
	xor.b32  	%r1029, %r1027, %r1028;
	shr.u32 	%r1030, %r861, 3;
	xor.b32  	%r1031, %r1029, %r1030;
	shf.l.wrap.b32 	%r1032, %r1026, %r1026, 15;
	shf.l.wrap.b32 	%r1033, %r1026, %r1026, 13;
	xor.b32  	%r1034, %r1032, %r1033;
	shr.u32 	%r1035, %r1026, 10;
	xor.b32  	%r1036, %r1034, %r1035;
	add.s32 	%r1037, %r965, %r848;
	add.s32 	%r1038, %r1037, %r1031;
	shf.l.wrap.b32 	%r1039, %r870, %r870, 25;
	shf.l.wrap.b32 	%r1040, %r870, %r870, 14;
	xor.b32  	%r1041, %r1039, %r1040;
	shr.u32 	%r1042, %r870, 3;
	xor.b32  	%r1043, %r1041, %r1042;
	shf.l.wrap.b32 	%r1044, %r1025, %r1025, 15;
	shf.l.wrap.b32 	%r1045, %r1025, %r1025, 13;
	xor.b32  	%r1046, %r1044, %r1045;
	shr.u32 	%r1047, %r1025, 10;
	xor.b32  	%r1048, %r1046, %r1047;
	add.s32 	%r1049, %r974, %r861;
	add.s32 	%r1050, %r1049, %r1043;
	shf.l.wrap.b32 	%r1051, %r869, %r869, 25;
	shf.l.wrap.b32 	%r1052, %r869, %r869, 14;
	xor.b32  	%r1053, %r1051, %r1052;
	shr.u32 	%r1054, %r869, 3;
	xor.b32  	%r1055, %r1053, %r1054;
	add.s32 	%r1056, %r1038, %r1036;
	shf.l.wrap.b32 	%r1057, %r1056, %r1056, 15;
	shf.l.wrap.b32 	%r1058, %r1056, %r1056, 13;
	xor.b32  	%r1059, %r1057, %r1058;
	shr.u32 	%r1060, %r1056, 10;
	xor.b32  	%r1061, %r1059, %r1060;
	add.s32 	%r1062, %r973, %r870;
	add.s32 	%r1063, %r1062, %r1055;
	shf.l.wrap.b32 	%r1064, %r900, %r900, 25;
	shf.l.wrap.b32 	%r1065, %r900, %r900, 14;
	xor.b32  	%r1066, %r1064, %r1065;
	shr.u32 	%r1067, %r900, 3;
	xor.b32  	%r1068, %r1066, %r1067;
	add.s32 	%r1069, %r1050, %r1048;
	shf.l.wrap.b32 	%r1070, %r1069, %r1069, 15;
	shf.l.wrap.b32 	%r1071, %r1069, %r1069, 13;
	xor.b32  	%r1072, %r1070, %r1071;
	shr.u32 	%r1073, %r1069, 10;
	xor.b32  	%r1074, %r1072, %r1073;
	add.s32 	%r1075, %r1004, %r869;
	add.s32 	%r1076, %r1075, %r1068;
	add.s32 	%r1077, %r1076, %r1074;
	add.s32 	%r1078, %r1063, %r1061;
	st.local.v4.u32 	[%rd210+208], {%r1056, %r1069, %r1078, %r1077};
	shf.l.wrap.b32 	%r1079, %r913, %r913, 25;
	shf.l.wrap.b32 	%r1080, %r913, %r913, 14;
	xor.b32  	%r1081, %r1079, %r1080;
	shr.u32 	%r1082, %r913, 3;
	xor.b32  	%r1083, %r1081, %r1082;
	shf.l.wrap.b32 	%r1084, %r1078, %r1078, 15;
	shf.l.wrap.b32 	%r1085, %r1078, %r1078, 13;
	xor.b32  	%r1086, %r1084, %r1085;
	shr.u32 	%r1087, %r1078, 10;
	xor.b32  	%r1088, %r1086, %r1087;
	add.s32 	%r1089, %r1017, %r900;
	add.s32 	%r1090, %r1089, %r1083;
	shf.l.wrap.b32 	%r1091, %r922, %r922, 25;
	shf.l.wrap.b32 	%r1092, %r922, %r922, 14;
	xor.b32  	%r1093, %r1091, %r1092;
	shr.u32 	%r1094, %r922, 3;
	xor.b32  	%r1095, %r1093, %r1094;
	shf.l.wrap.b32 	%r1096, %r1077, %r1077, 15;
	shf.l.wrap.b32 	%r1097, %r1077, %r1077, 13;
	xor.b32  	%r1098, %r1096, %r1097;
	shr.u32 	%r1099, %r1077, 10;
	xor.b32  	%r1100, %r1098, %r1099;
	add.s32 	%r1101, %r1026, %r913;
	add.s32 	%r1102, %r1101, %r1095;
	shf.l.wrap.b32 	%r1103, %r921, %r921, 25;
	shf.l.wrap.b32 	%r1104, %r921, %r921, 14;
	xor.b32  	%r1105, %r1103, %r1104;
	shr.u32 	%r1106, %r921, 3;
	xor.b32  	%r1107, %r1105, %r1106;
	add.s32 	%r1108, %r1090, %r1088;
	shf.l.wrap.b32 	%r1109, %r1108, %r1108, 15;
	shf.l.wrap.b32 	%r1110, %r1108, %r1108, 13;
	xor.b32  	%r1111, %r1109, %r1110;
	shr.u32 	%r1112, %r1108, 10;
	xor.b32  	%r1113, %r1111, %r1112;
	add.s32 	%r1114, %r1025, %r922;
	add.s32 	%r1115, %r1114, %r1107;
	shf.l.wrap.b32 	%r1116, %r952, %r952, 25;
	shf.l.wrap.b32 	%r1117, %r952, %r952, 14;
	xor.b32  	%r1118, %r1116, %r1117;
	shr.u32 	%r1119, %r952, 3;
	xor.b32  	%r1120, %r1118, %r1119;
	add.s32 	%r1121, %r1102, %r1100;
	shf.l.wrap.b32 	%r1122, %r1121, %r1121, 15;
	shf.l.wrap.b32 	%r1123, %r1121, %r1121, 13;
	xor.b32  	%r1124, %r1122, %r1123;
	shr.u32 	%r1125, %r1121, 10;
	xor.b32  	%r1126, %r1124, %r1125;
	add.s32 	%r1127, %r1056, %r921;
	add.s32 	%r1128, %r1127, %r1120;
	add.s32 	%r1129, %r1128, %r1126;
	add.s32 	%r1130, %r1115, %r1113;
	st.local.v4.u32 	[%rd210+224], {%r1108, %r1121, %r1130, %r1129};
	ld.local.u32 	%r6, [%rd5+-12];
	ld.local.v2.u32 	{%r1131, %r1132}, [%rd5+-8];
	ld.local.v4.u32 	{%r1133, %r1134, %r1135, %r1136}, [%rd5];
	ld.local.u32 	%r13, [%rd5+16];
	mov.u32 	%r2253, -64;
	mov.u64 	%rd218, k;
	mov.u64 	%rd219, %rd2;
	mov.u32 	%r2255, %r6;
	mov.u32 	%r2256, %r1131;
	mov.u32 	%r2257, %r1132;
	mov.u32 	%r2258, %r1133;
	mov.u32 	%r2259, %r1134;
	mov.u32 	%r2260, %r1135;
	mov.u32 	%r2261, %r1136;
	mov.u32 	%r2262, %r13;
	bra.uni 	BB0_3;

BB0_4:
	add.s64 	%rd10, %rd219, 16;
	ld.local.u32 	%r2254, [%rd219+16];
	add.s64 	%rd218, %rd218, 16;
	mov.u64 	%rd219, %rd10;

BB0_3:
	shf.l.wrap.b32 	%r1137, %r2259, %r2259, 26;
	shf.l.wrap.b32 	%r1138, %r2259, %r2259, 21;
	xor.b32  	%r1139, %r1137, %r1138;
	shf.l.wrap.b32 	%r1140, %r2259, %r2259, 7;
	xor.b32  	%r1141, %r1139, %r1140;
	not.b32 	%r1142, %r2259;
	and.b32  	%r1143, %r2261, %r1142;
	and.b32  	%r1144, %r2259, %r2260;
	xor.b32  	%r1145, %r1144, %r1143;
	add.s32 	%r1146, %r1145, %r2262;
	add.s32 	%r1147, %r1146, %r1141;
	ld.const.u32 	%r1148, [%rd218];
	add.s32 	%r1149, %r1147, %r1148;
	add.s32 	%r1150, %r1149, %r2254;
	shf.l.wrap.b32 	%r1151, %r2255, %r2255, 30;
	shf.l.wrap.b32 	%r1152, %r2255, %r2255, 19;
	xor.b32  	%r1153, %r1151, %r1152;
	shf.l.wrap.b32 	%r1154, %r2255, %r2255, 10;
	xor.b32  	%r1155, %r1153, %r1154;
	xor.b32  	%r1156, %r2256, %r2257;
	and.b32  	%r1157, %r2255, %r1156;
	and.b32  	%r1158, %r2256, %r2257;
	xor.b32  	%r1159, %r1157, %r1158;
	add.s32 	%r1160, %r1155, %r1159;
	add.s32 	%r2262, %r1150, %r2258;
	add.s32 	%r2258, %r1160, %r1150;
	shf.l.wrap.b32 	%r1161, %r2262, %r2262, 26;
	shf.l.wrap.b32 	%r1162, %r2262, %r2262, 21;
	xor.b32  	%r1163, %r1161, %r1162;
	shf.l.wrap.b32 	%r1164, %r2262, %r2262, 7;
	xor.b32  	%r1165, %r1163, %r1164;
	and.b32  	%r1166, %r2262, %r2259;
	not.b32 	%r1167, %r2262;
	and.b32  	%r1168, %r2260, %r1167;
	xor.b32  	%r1169, %r1166, %r1168;
	add.s32 	%r1170, %r1169, %r2261;
	add.s32 	%r1171, %r1170, %r1165;
	ld.const.u32 	%r1172, [%rd218+4];
	add.s32 	%r1173, %r1171, %r1172;
	ld.local.u32 	%r1174, [%rd219+4];
	add.s32 	%r1175, %r1173, %r1174;
	shf.l.wrap.b32 	%r1176, %r2258, %r2258, 30;
	shf.l.wrap.b32 	%r1177, %r2258, %r2258, 19;
	xor.b32  	%r1178, %r1176, %r1177;
	shf.l.wrap.b32 	%r1179, %r2258, %r2258, 10;
	xor.b32  	%r1180, %r1178, %r1179;
	xor.b32  	%r1181, %r2255, %r2256;
	and.b32  	%r1182, %r2258, %r1181;
	and.b32  	%r1183, %r2255, %r2256;
	xor.b32  	%r1184, %r1182, %r1183;
	add.s32 	%r1185, %r1180, %r1184;
	add.s32 	%r2261, %r1175, %r2257;
	add.s32 	%r2257, %r1185, %r1175;
	shf.l.wrap.b32 	%r1186, %r2261, %r2261, 26;
	shf.l.wrap.b32 	%r1187, %r2261, %r2261, 21;
	xor.b32  	%r1188, %r1186, %r1187;
	shf.l.wrap.b32 	%r1189, %r2261, %r2261, 7;
	xor.b32  	%r1190, %r1188, %r1189;
	and.b32  	%r1191, %r2261, %r2262;
	not.b32 	%r1192, %r2261;
	and.b32  	%r1193, %r2259, %r1192;
	xor.b32  	%r1194, %r1191, %r1193;
	add.s32 	%r1195, %r1194, %r2260;
	add.s32 	%r1196, %r1195, %r1190;
	ld.const.u32 	%r1197, [%rd218+8];
	add.s32 	%r1198, %r1196, %r1197;
	ld.local.v2.u32 	{%r1199, %r1200}, [%rd219+8];
	add.s32 	%r1202, %r1198, %r1199;
	shf.l.wrap.b32 	%r1203, %r2257, %r2257, 30;
	shf.l.wrap.b32 	%r1204, %r2257, %r2257, 19;
	xor.b32  	%r1205, %r1203, %r1204;
	shf.l.wrap.b32 	%r1206, %r2257, %r2257, 10;
	xor.b32  	%r1207, %r1205, %r1206;
	xor.b32  	%r1208, %r2258, %r2255;
	and.b32  	%r1209, %r2257, %r1208;
	and.b32  	%r1210, %r2258, %r2255;
	xor.b32  	%r1211, %r1209, %r1210;
	add.s32 	%r1212, %r1207, %r1211;
	add.s32 	%r2260, %r1202, %r2256;
	add.s32 	%r2256, %r1212, %r1202;
	shf.l.wrap.b32 	%r1213, %r2260, %r2260, 26;
	shf.l.wrap.b32 	%r1214, %r2260, %r2260, 21;
	xor.b32  	%r1215, %r1213, %r1214;
	shf.l.wrap.b32 	%r1216, %r2260, %r2260, 7;
	xor.b32  	%r1217, %r1215, %r1216;
	and.b32  	%r1218, %r2260, %r2261;
	not.b32 	%r1219, %r2260;
	and.b32  	%r1220, %r2262, %r1219;
	xor.b32  	%r1221, %r1218, %r1220;
	add.s32 	%r1222, %r1221, %r2259;
	add.s32 	%r1223, %r1222, %r1217;
	ld.const.u32 	%r1224, [%rd218+12];
	add.s32 	%r1225, %r1223, %r1224;
	add.s32 	%r1227, %r1225, %r1200;
	shf.l.wrap.b32 	%r1228, %r2256, %r2256, 30;
	shf.l.wrap.b32 	%r1229, %r2256, %r2256, 19;
	xor.b32  	%r1230, %r1228, %r1229;
	shf.l.wrap.b32 	%r1231, %r2256, %r2256, 10;
	xor.b32  	%r1232, %r1230, %r1231;
	xor.b32  	%r1233, %r2257, %r2258;
	and.b32  	%r1234, %r2256, %r1233;
	and.b32  	%r1235, %r2257, %r2258;
	xor.b32  	%r1236, %r1234, %r1235;
	add.s32 	%r1237, %r1232, %r1236;
	add.s32 	%r2259, %r1227, %r2255;
	add.s32 	%r2255, %r1237, %r1227;
	add.s32 	%r2253, %r2253, 4;
	setp.eq.s32	%p2, %r2253, 0;
	@%p2 bra 	BB0_5;
	bra.uni 	BB0_4;

BB0_5:
	add.s32 	%r1239, %r6, %r2255;
	st.local.u32 	[%rd5+-12], %r1239;
	add.s32 	%r1240, %r1132, %r2257;
	add.s32 	%r1241, %r1131, %r2256;
	st.local.v2.u32 	[%rd5+-8], {%r1241, %r1240};
	add.s32 	%r1242, %r1136, %r2261;
	add.s32 	%r1243, %r1135, %r2260;
	add.s32 	%r1244, %r1134, %r2259;
	add.s32 	%r1245, %r1133, %r2258;
	st.local.v4.u32 	[%rd5], {%r1245, %r1244, %r1243, %r1242};
	add.s32 	%r1246, %r13, %r2262;
	st.local.u32 	[%rd5+16], %r1246;
	mov.u32 	%r2263, 0;
	st.local.u32 	[%rd5+-16], %r2263;

BB0_6:
	add.s32 	%r2252, %r2252, 1;
	setp.lt.u32	%p3, %r2252, 64;
	@%p3 bra 	BB0_17;

	mov.u64 	%rd207, 0;
	mov.u16 	%rs84, 0;
	st.local.v4.u8 	[%rd3+4], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+8], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+12], {%rs84, %rs84, %rs84, %rs84};
	mov.u32 	%r2265, 0;
	st.local.v4.u8 	[%rd3+64], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+68], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+72], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+76], {%rs84, %rs84, %rs84, %rs84};
	mov.u16 	%rs85, 128;
	st.local.v4.u8 	[%rd3], {%rs85, %rs84, %rs84, %rs84};
	st.local.v4.u32 	[%rd3+16], {%r2265, %r2265, %r2265, %r2265};
	st.local.v4.u32 	[%rd3+32], {%r2265, %r2265, %r2265, %r2265};
	st.local.v4.u32 	[%rd3+48], {%r2265, %r2265, %r2265, %r2265};
	st.local.v4.u32 	[%rd3+80], {%r2265, %r2265, %r2265, %r2265};
	st.local.v4.u32 	[%rd3+96], {%r2265, %r2265, %r2265, %r2265};
	st.local.v4.u32 	[%rd3+112], {%r2265, %r2265, %r2265, %r2265};
	setp.lt.u32	%p4, %r2263, 56;
	selp.b32	%r1248, 64, 120, %p4;
	sub.s32 	%r36, %r1248, %r2263;
	ld.local.u64 	%rd159, [%rd5+32];
	cvt.s64.s32	%rd160, %r36;
	add.s64 	%rd161, %rd3, %rd160;
	st.local.u8 	[%rd161+-1], %rd159;
	cvt.u16.u64	%rs86, %rd159;
	shr.u16 	%rs87, %rs86, 8;
	st.local.u8 	[%rd161+-2], %rs87;
	shr.u64 	%rd162, %rd159, 16;
	st.local.u8 	[%rd161+-3], %rd162;
	shr.u64 	%rd163, %rd159, 24;
	st.local.u8 	[%rd161+-4], %rd163;
	shr.u64 	%rd164, %rd159, 32;
	st.local.u8 	[%rd161+-5], %rd164;
	shr.u64 	%rd165, %rd159, 40;
	st.local.u8 	[%rd161+-6], %rd165;
	shr.u64 	%rd166, %rd159, 48;
	st.local.u8 	[%rd161+-7], %rd166;
	shr.u64 	%rd167, %rd159, 56;
	st.local.u8 	[%rd161+-8], %rd167;
	and.b64  	%rd169, %rd159, 4294967295;
	mul.wide.s32 	%rd170, %r36, 8;
	add.s64 	%rd171, %rd169, %rd170;
	st.local.u64 	[%rd5+40], %rd207;
	st.local.u64 	[%rd5+32], %rd171;
	setp.eq.s32	%p5, %r1248, %r2263;
	@%p5 bra 	BB0_14;

BB0_8:
	add.u64 	%rd211, %SPL, 128;
	cvt.s64.s32	%rd172, %r2265;
	add.s64 	%rd173, %rd211, %rd172;
	ld.local.u8 	%rs88, [%rd173];
	cvt.u64.u32	%rd174, %r2263;
	add.s64 	%rd175, %rd4, %rd174;
	st.local.u8 	[%rd175], %rs88;
	ld.local.u32 	%r1250, [%rd5+-16];
	add.s32 	%r2263, %r1250, 1;
	st.local.u32 	[%rd5+-16], %r2263;
	setp.ne.s32	%p6, %r2263, 64;
	@%p6 bra 	BB0_13;

	add.u64 	%rd221, %SPL, 256;
	add.s64 	%rd208, %rd221, 16;
	ld.local.v4.u32 	{%r1252, %r1253, %r1254, %r1255}, [%rd4];
	mov.b32	{%rs89, %rs90}, %r1252;
	shr.u16 	%rs91, %rs89, 8;
	shr.u16 	%rs92, %rs90, 8;
	mov.b32	{%rs93, %rs94}, %r1253;
	shr.u16 	%rs95, %rs93, 8;
	shr.u16 	%rs96, %rs94, 8;
	mov.b32	{%rs97, %rs98}, %r1254;
	shr.u16 	%rs99, %rs97, 8;
	shr.u16 	%rs100, %rs98, 8;
	mov.b32	{%rs101, %rs102}, %r1255;
	shr.u16 	%rs103, %rs101, 8;
	shr.u16 	%rs104, %rs102, 8;
	cvt.u32.u16	%r1260, %rs89;
	shl.b32 	%r1261, %r1260, 24;
	cvt.u32.u16	%r1262, %rs91;
	shl.b32 	%r1263, %r1262, 16;
	or.b32  	%r1264, %r1263, %r1261;
	and.b16  	%rs105, %rs90, 255;
	mul.wide.u16 	%r1265, %rs105, 256;
	or.b32  	%r1266, %r1264, %r1265;
	cvt.u32.u16	%r1267, %rs92;
	or.b32  	%r2267, %r1266, %r1267;
	cvt.u32.u16	%r1268, %rs93;
	shl.b32 	%r1269, %r1268, 24;
	cvt.u32.u16	%r1270, %rs95;
	shl.b32 	%r1271, %r1270, 16;
	or.b32  	%r1272, %r1271, %r1269;
	and.b16  	%rs106, %rs94, 255;
	mul.wide.u16 	%r1273, %rs106, 256;
	or.b32  	%r1274, %r1272, %r1273;
	cvt.u32.u16	%r1275, %rs96;
	cvt.u32.u16	%r1276, %rs97;
	shl.b32 	%r1277, %r1276, 24;
	cvt.u32.u16	%r1278, %rs99;
	shl.b32 	%r1279, %r1278, 16;
	or.b32  	%r1280, %r1279, %r1277;
	and.b16  	%rs107, %rs98, 255;
	mul.wide.u16 	%r1281, %rs107, 256;
	or.b32  	%r1282, %r1280, %r1281;
	cvt.u32.u16	%r1283, %rs100;
	cvt.u32.u16	%r1284, %rs101;
	shl.b32 	%r1285, %r1284, 24;
	cvt.u32.u16	%r1286, %rs103;
	shl.b32 	%r1287, %r1286, 16;
	or.b32  	%r1288, %r1287, %r1285;
	and.b16  	%rs108, %rs102, 255;
	mul.wide.u16 	%r1289, %rs108, 256;
	or.b32  	%r1290, %r1288, %r1289;
	cvt.u32.u16	%r1291, %rs104;
	or.b32  	%r1292, %r1290, %r1291;
	or.b32  	%r1293, %r1282, %r1283;
	or.b32  	%r1294, %r1274, %r1275;
	add.u64 	%rd180, %SPL, 256;
	st.local.v4.u32 	[%rd180], {%r2267, %r1294, %r1293, %r1292};
	ld.local.v4.u32 	{%r1295, %r1296, %r1297, %r1298}, [%rd5+-64];
	mov.b32	{%rs109, %rs110}, %r1295;
	shr.u16 	%rs111, %rs109, 8;
	shr.u16 	%rs112, %rs110, 8;
	mov.b32	{%rs113, %rs114}, %r1296;
	shr.u16 	%rs115, %rs113, 8;
	shr.u16 	%rs116, %rs114, 8;
	mov.b32	{%rs117, %rs118}, %r1297;
	shr.u16 	%rs119, %rs117, 8;
	shr.u16 	%rs120, %rs118, 8;
	mov.b32	{%rs121, %rs122}, %r1298;
	shr.u16 	%rs123, %rs121, 8;
	shr.u16 	%rs124, %rs122, 8;
	cvt.u32.u16	%r1303, %rs109;
	shl.b32 	%r1304, %r1303, 24;
	cvt.u32.u16	%r1305, %rs111;
	shl.b32 	%r1306, %r1305, 16;
	or.b32  	%r1307, %r1306, %r1304;
	and.b16  	%rs125, %rs110, 255;
	mul.wide.u16 	%r1308, %rs125, 256;
	or.b32  	%r1309, %r1307, %r1308;
	cvt.u32.u16	%r1310, %rs112;
	cvt.u32.u16	%r1311, %rs113;
	shl.b32 	%r1312, %r1311, 24;
	cvt.u32.u16	%r1313, %rs115;
	shl.b32 	%r1314, %r1313, 16;
	or.b32  	%r1315, %r1314, %r1312;
	and.b16  	%rs126, %rs114, 255;
	mul.wide.u16 	%r1316, %rs126, 256;
	or.b32  	%r1317, %r1315, %r1316;
	cvt.u32.u16	%r1318, %rs116;
	cvt.u32.u16	%r1319, %rs117;
	shl.b32 	%r1320, %r1319, 24;
	cvt.u32.u16	%r1321, %rs119;
	shl.b32 	%r1322, %r1321, 16;
	or.b32  	%r1323, %r1322, %r1320;
	and.b16  	%rs127, %rs118, 255;
	mul.wide.u16 	%r1324, %rs127, 256;
	or.b32  	%r1325, %r1323, %r1324;
	cvt.u32.u16	%r1326, %rs120;
	cvt.u32.u16	%r1327, %rs121;
	shl.b32 	%r1328, %r1327, 24;
	cvt.u32.u16	%r1329, %rs123;
	shl.b32 	%r1330, %r1329, 16;
	or.b32  	%r1331, %r1330, %r1328;
	and.b16  	%rs128, %rs122, 255;
	mul.wide.u16 	%r1332, %rs128, 256;
	or.b32  	%r1333, %r1331, %r1332;
	cvt.u32.u16	%r1334, %rs124;
	or.b32  	%r1335, %r1333, %r1334;
	or.b32  	%r1336, %r1325, %r1326;
	or.b32  	%r1337, %r1317, %r1318;
	or.b32  	%r1338, %r1309, %r1310;
	st.local.v4.u32 	[%rd208], {%r1338, %r1337, %r1336, %r1335};
	ld.local.v4.u32 	{%r1339, %r1340, %r1341, %r1342}, [%rd5+-48];
	mov.b32	{%rs129, %rs130}, %r1339;
	shr.u16 	%rs131, %rs129, 8;
	shr.u16 	%rs132, %rs130, 8;
	mov.b32	{%rs133, %rs134}, %r1340;
	shr.u16 	%rs135, %rs133, 8;
	shr.u16 	%rs136, %rs134, 8;
	mov.b32	{%rs137, %rs138}, %r1341;
	shr.u16 	%rs139, %rs137, 8;
	shr.u16 	%rs140, %rs138, 8;
	mov.b32	{%rs141, %rs142}, %r1342;
	shr.u16 	%rs143, %rs141, 8;
	shr.u16 	%rs144, %rs142, 8;
	cvt.u32.u16	%r1347, %rs129;
	shl.b32 	%r1348, %r1347, 24;
	cvt.u32.u16	%r1349, %rs131;
	shl.b32 	%r1350, %r1349, 16;
	or.b32  	%r1351, %r1350, %r1348;
	and.b16  	%rs145, %rs130, 255;
	mul.wide.u16 	%r1352, %rs145, 256;
	or.b32  	%r1353, %r1351, %r1352;
	cvt.u32.u16	%r1354, %rs132;
	cvt.u32.u16	%r1355, %rs133;
	shl.b32 	%r1356, %r1355, 24;
	cvt.u32.u16	%r1357, %rs135;
	shl.b32 	%r1358, %r1357, 16;
	or.b32  	%r1359, %r1358, %r1356;
	and.b16  	%rs146, %rs134, 255;
	mul.wide.u16 	%r1360, %rs146, 256;
	or.b32  	%r1361, %r1359, %r1360;
	cvt.u32.u16	%r1362, %rs136;
	cvt.u32.u16	%r1363, %rs137;
	shl.b32 	%r1364, %r1363, 24;
	cvt.u32.u16	%r1365, %rs139;
	shl.b32 	%r1366, %r1365, 16;
	or.b32  	%r1367, %r1366, %r1364;
	and.b16  	%rs147, %rs138, 255;
	mul.wide.u16 	%r1368, %rs147, 256;
	or.b32  	%r1369, %r1367, %r1368;
	cvt.u32.u16	%r1370, %rs140;
	cvt.u32.u16	%r1371, %rs141;
	shl.b32 	%r1372, %r1371, 24;
	cvt.u32.u16	%r1373, %rs143;
	shl.b32 	%r1374, %r1373, 16;
	or.b32  	%r1375, %r1374, %r1372;
	and.b16  	%rs148, %rs142, 255;
	mul.wide.u16 	%r1376, %rs148, 256;
	or.b32  	%r1377, %r1375, %r1376;
	cvt.u32.u16	%r1378, %rs144;
	or.b32  	%r1379, %r1377, %r1378;
	or.b32  	%r1380, %r1369, %r1370;
	or.b32  	%r1381, %r1361, %r1362;
	or.b32  	%r1382, %r1353, %r1354;
	st.local.v4.u32 	[%rd208+16], {%r1382, %r1381, %r1380, %r1379};
	ld.local.v4.u32 	{%r1383, %r1384, %r1385, %r1386}, [%rd5+-32];
	mov.b32	{%rs149, %rs150}, %r1383;
	shr.u16 	%rs151, %rs149, 8;
	shr.u16 	%rs152, %rs150, 8;
	mov.b32	{%rs153, %rs154}, %r1384;
	shr.u16 	%rs155, %rs153, 8;
	shr.u16 	%rs156, %rs154, 8;
	mov.b32	{%rs157, %rs158}, %r1385;
	shr.u16 	%rs159, %rs157, 8;
	shr.u16 	%rs160, %rs158, 8;
	mov.b32	{%rs161, %rs162}, %r1386;
	shr.u16 	%rs163, %rs161, 8;
	shr.u16 	%rs164, %rs162, 8;
	cvt.u32.u16	%r1391, %rs149;
	shl.b32 	%r1392, %r1391, 24;
	cvt.u32.u16	%r1393, %rs151;
	shl.b32 	%r1394, %r1393, 16;
	or.b32  	%r1395, %r1394, %r1392;
	and.b16  	%rs165, %rs150, 255;
	mul.wide.u16 	%r1396, %rs165, 256;
	or.b32  	%r1397, %r1395, %r1396;
	cvt.u32.u16	%r1398, %rs152;
	cvt.u32.u16	%r1399, %rs153;
	shl.b32 	%r1400, %r1399, 24;
	cvt.u32.u16	%r1401, %rs155;
	shl.b32 	%r1402, %r1401, 16;
	or.b32  	%r1403, %r1402, %r1400;
	and.b16  	%rs166, %rs154, 255;
	mul.wide.u16 	%r1404, %rs166, 256;
	or.b32  	%r1405, %r1403, %r1404;
	cvt.u32.u16	%r1406, %rs156;
	cvt.u32.u16	%r1407, %rs157;
	shl.b32 	%r1408, %r1407, 24;
	cvt.u32.u16	%r1409, %rs159;
	shl.b32 	%r1410, %r1409, 16;
	or.b32  	%r1411, %r1410, %r1408;
	and.b16  	%rs167, %rs158, 255;
	mul.wide.u16 	%r1412, %rs167, 256;
	or.b32  	%r1413, %r1411, %r1412;
	cvt.u32.u16	%r1414, %rs160;
	cvt.u32.u16	%r1415, %rs161;
	shl.b32 	%r1416, %r1415, 24;
	cvt.u32.u16	%r1417, %rs163;
	shl.b32 	%r1418, %r1417, 16;
	or.b32  	%r1419, %r1418, %r1416;
	and.b16  	%rs168, %rs162, 255;
	mul.wide.u16 	%r1420, %rs168, 256;
	or.b32  	%r1421, %r1419, %r1420;
	cvt.u32.u16	%r1422, %rs164;
	or.b32  	%r1423, %r1421, %r1422;
	or.b32  	%r1424, %r1413, %r1414;
	or.b32  	%r1425, %r1405, %r1406;
	or.b32  	%r1426, %r1397, %r1398;
	st.local.v4.u32 	[%rd208+32], {%r1426, %r1425, %r1424, %r1423};
	shr.u32 	%r1427, %r1294, 7;
	shl.b32 	%r1428, %r1275, 25;
	or.b32  	%r1429, %r1427, %r1428;
	shr.u32 	%r1430, %r1272, 18;
	shl.b32 	%r1431, %r1294, 14;
	or.b32  	%r1432, %r1430, %r1431;
	xor.b32  	%r1433, %r1429, %r1432;
	shr.u32 	%r1434, %r1294, 3;
	xor.b32  	%r1435, %r1433, %r1434;
	shr.u32 	%r1436, %r1411, 17;
	shl.b32 	%r1437, %r1424, 15;
	or.b32  	%r1438, %r1436, %r1437;
	shr.u32 	%r1439, %r1411, 19;
	shl.b32 	%r1440, %r1424, 13;
	or.b32  	%r1441, %r1439, %r1440;
	xor.b32  	%r1442, %r1438, %r1441;
	shr.u32 	%r1443, %r1413, 10;
	xor.b32  	%r1444, %r1442, %r1443;
	add.s32 	%r1445, %r1381, %r2267;
	add.s32 	%r1446, %r1445, %r1435;
	shr.u32 	%r1447, %r1293, 7;
	shl.b32 	%r1448, %r1283, 25;
	or.b32  	%r1449, %r1447, %r1448;
	shr.u32 	%r1450, %r1280, 18;
	shl.b32 	%r1451, %r1293, 14;
	or.b32  	%r1452, %r1450, %r1451;
	xor.b32  	%r1453, %r1449, %r1452;
	shr.u32 	%r1454, %r1293, 3;
	xor.b32  	%r1455, %r1453, %r1454;
	shr.u32 	%r1456, %r1419, 17;
	shl.b32 	%r1457, %r1423, 15;
	or.b32  	%r1458, %r1456, %r1457;
	shr.u32 	%r1459, %r1419, 19;
	shl.b32 	%r1460, %r1423, 13;
	or.b32  	%r1461, %r1459, %r1460;
	xor.b32  	%r1462, %r1458, %r1461;
	shr.u32 	%r1463, %r1421, 10;
	xor.b32  	%r1464, %r1462, %r1463;
	add.s32 	%r1465, %r1380, %r1294;
	add.s32 	%r1466, %r1465, %r1455;
	shr.u32 	%r1467, %r1292, 7;
	shl.b32 	%r1468, %r1291, 25;
	or.b32  	%r1469, %r1467, %r1468;
	shr.u32 	%r1470, %r1288, 18;
	shl.b32 	%r1471, %r1292, 14;
	or.b32  	%r1472, %r1470, %r1471;
	xor.b32  	%r1473, %r1469, %r1472;
	shr.u32 	%r1474, %r1292, 3;
	xor.b32  	%r1475, %r1473, %r1474;
	add.s32 	%r1476, %r1446, %r1444;
	shf.l.wrap.b32 	%r1477, %r1476, %r1476, 15;
	shf.l.wrap.b32 	%r1478, %r1476, %r1476, 13;
	xor.b32  	%r1479, %r1477, %r1478;
	shr.u32 	%r1480, %r1476, 10;
	xor.b32  	%r1481, %r1479, %r1480;
	add.s32 	%r1482, %r1379, %r1293;
	add.s32 	%r1483, %r1482, %r1475;
	shr.u32 	%r1484, %r1338, 7;
	shl.b32 	%r1485, %r1310, 25;
	or.b32  	%r1486, %r1484, %r1485;
	shr.u32 	%r1487, %r1307, 18;
	shl.b32 	%r1488, %r1338, 14;
	or.b32  	%r1489, %r1487, %r1488;
	xor.b32  	%r1490, %r1486, %r1489;
	shr.u32 	%r1491, %r1338, 3;
	xor.b32  	%r1492, %r1490, %r1491;
	add.s32 	%r1493, %r1466, %r1464;
	shf.l.wrap.b32 	%r1494, %r1493, %r1493, 15;
	shf.l.wrap.b32 	%r1495, %r1493, %r1493, 13;
	xor.b32  	%r1496, %r1494, %r1495;
	shr.u32 	%r1497, %r1493, 10;
	xor.b32  	%r1498, %r1496, %r1497;
	add.s32 	%r1499, %r1426, %r1292;
	add.s32 	%r1500, %r1499, %r1492;
	add.s32 	%r1501, %r1500, %r1498;
	add.s32 	%r1502, %r1483, %r1481;
	st.local.v4.u32 	[%rd208+48], {%r1476, %r1493, %r1502, %r1501};
	shr.u32 	%r1503, %r1337, 7;
	shl.b32 	%r1504, %r1318, 25;
	or.b32  	%r1505, %r1503, %r1504;
	shr.u32 	%r1506, %r1315, 18;
	shl.b32 	%r1507, %r1337, 14;
	or.b32  	%r1508, %r1506, %r1507;
	xor.b32  	%r1509, %r1505, %r1508;
	shr.u32 	%r1510, %r1337, 3;
	xor.b32  	%r1511, %r1509, %r1510;
	shf.l.wrap.b32 	%r1512, %r1502, %r1502, 15;
	shf.l.wrap.b32 	%r1513, %r1502, %r1502, 13;
	xor.b32  	%r1514, %r1512, %r1513;
	shr.u32 	%r1515, %r1502, 10;
	xor.b32  	%r1516, %r1514, %r1515;
	add.s32 	%r1517, %r1425, %r1338;
	add.s32 	%r1518, %r1517, %r1511;
	shr.u32 	%r1519, %r1336, 7;
	shl.b32 	%r1520, %r1326, 25;
	or.b32  	%r1521, %r1519, %r1520;
	shr.u32 	%r1522, %r1323, 18;
	shl.b32 	%r1523, %r1336, 14;
	or.b32  	%r1524, %r1522, %r1523;
	xor.b32  	%r1525, %r1521, %r1524;
	shr.u32 	%r1526, %r1336, 3;
	xor.b32  	%r1527, %r1525, %r1526;
	shf.l.wrap.b32 	%r1528, %r1501, %r1501, 15;
	shf.l.wrap.b32 	%r1529, %r1501, %r1501, 13;
	xor.b32  	%r1530, %r1528, %r1529;
	shr.u32 	%r1531, %r1501, 10;
	xor.b32  	%r1532, %r1530, %r1531;
	add.s32 	%r1533, %r1424, %r1337;
	add.s32 	%r1534, %r1533, %r1527;
	shr.u32 	%r1535, %r1335, 7;
	shl.b32 	%r1536, %r1334, 25;
	or.b32  	%r1537, %r1535, %r1536;
	shr.u32 	%r1538, %r1331, 18;
	shl.b32 	%r1539, %r1335, 14;
	or.b32  	%r1540, %r1538, %r1539;
	xor.b32  	%r1541, %r1537, %r1540;
	shr.u32 	%r1542, %r1335, 3;
	xor.b32  	%r1543, %r1541, %r1542;
	add.s32 	%r1544, %r1518, %r1516;
	shf.l.wrap.b32 	%r1545, %r1544, %r1544, 15;
	shf.l.wrap.b32 	%r1546, %r1544, %r1544, 13;
	xor.b32  	%r1547, %r1545, %r1546;
	shr.u32 	%r1548, %r1544, 10;
	xor.b32  	%r1549, %r1547, %r1548;
	add.s32 	%r1550, %r1423, %r1336;
	add.s32 	%r1551, %r1550, %r1543;
	shr.u32 	%r1552, %r1382, 7;
	shl.b32 	%r1553, %r1354, 25;
	or.b32  	%r1554, %r1552, %r1553;
	shr.u32 	%r1555, %r1351, 18;
	shl.b32 	%r1556, %r1382, 14;
	or.b32  	%r1557, %r1555, %r1556;
	xor.b32  	%r1558, %r1554, %r1557;
	shr.u32 	%r1559, %r1382, 3;
	xor.b32  	%r1560, %r1558, %r1559;
	add.s32 	%r1561, %r1534, %r1532;
	shf.l.wrap.b32 	%r1562, %r1561, %r1561, 15;
	shf.l.wrap.b32 	%r1563, %r1561, %r1561, 13;
	xor.b32  	%r1564, %r1562, %r1563;
	shr.u32 	%r1565, %r1561, 10;
	xor.b32  	%r1566, %r1564, %r1565;
	add.s32 	%r1567, %r1476, %r1335;
	add.s32 	%r1568, %r1567, %r1560;
	add.s32 	%r1569, %r1568, %r1566;
	add.s32 	%r1570, %r1551, %r1549;
	st.local.v4.u32 	[%rd208+64], {%r1544, %r1561, %r1570, %r1569};
	shr.u32 	%r1571, %r1381, 7;
	shl.b32 	%r1572, %r1362, 25;
	or.b32  	%r1573, %r1571, %r1572;
	shr.u32 	%r1574, %r1359, 18;
	shl.b32 	%r1575, %r1381, 14;
	or.b32  	%r1576, %r1574, %r1575;
	xor.b32  	%r1577, %r1573, %r1576;
	shr.u32 	%r1578, %r1381, 3;
	xor.b32  	%r1579, %r1577, %r1578;
	shf.l.wrap.b32 	%r1580, %r1570, %r1570, 15;
	shf.l.wrap.b32 	%r1581, %r1570, %r1570, 13;
	xor.b32  	%r1582, %r1580, %r1581;
	shr.u32 	%r1583, %r1570, 10;
	xor.b32  	%r1584, %r1582, %r1583;
	add.s32 	%r1585, %r1493, %r1382;
	add.s32 	%r1586, %r1585, %r1579;
	shr.u32 	%r1587, %r1380, 7;
	shl.b32 	%r1588, %r1370, 25;
	or.b32  	%r1589, %r1587, %r1588;
	shr.u32 	%r1590, %r1367, 18;
	shl.b32 	%r1591, %r1380, 14;
	or.b32  	%r1592, %r1590, %r1591;
	xor.b32  	%r1593, %r1589, %r1592;
	shr.u32 	%r1594, %r1380, 3;
	xor.b32  	%r1595, %r1593, %r1594;
	shf.l.wrap.b32 	%r1596, %r1569, %r1569, 15;
	shf.l.wrap.b32 	%r1597, %r1569, %r1569, 13;
	xor.b32  	%r1598, %r1596, %r1597;
	shr.u32 	%r1599, %r1569, 10;
	xor.b32  	%r1600, %r1598, %r1599;
	add.s32 	%r1601, %r1502, %r1381;
	add.s32 	%r1602, %r1601, %r1595;
	shr.u32 	%r1603, %r1379, 7;
	shl.b32 	%r1604, %r1378, 25;
	or.b32  	%r1605, %r1603, %r1604;
	shr.u32 	%r1606, %r1375, 18;
	shl.b32 	%r1607, %r1379, 14;
	or.b32  	%r1608, %r1606, %r1607;
	xor.b32  	%r1609, %r1605, %r1608;
	shr.u32 	%r1610, %r1379, 3;
	xor.b32  	%r1611, %r1609, %r1610;
	add.s32 	%r1612, %r1586, %r1584;
	shf.l.wrap.b32 	%r1613, %r1612, %r1612, 15;
	shf.l.wrap.b32 	%r1614, %r1612, %r1612, 13;
	xor.b32  	%r1615, %r1613, %r1614;
	shr.u32 	%r1616, %r1612, 10;
	xor.b32  	%r1617, %r1615, %r1616;
	add.s32 	%r1618, %r1501, %r1380;
	add.s32 	%r1619, %r1618, %r1611;
	shr.u32 	%r1620, %r1426, 7;
	shl.b32 	%r1621, %r1398, 25;
	or.b32  	%r1622, %r1620, %r1621;
	shr.u32 	%r1623, %r1395, 18;
	shl.b32 	%r1624, %r1426, 14;
	or.b32  	%r1625, %r1623, %r1624;
	xor.b32  	%r1626, %r1622, %r1625;
	shr.u32 	%r1627, %r1426, 3;
	xor.b32  	%r1628, %r1626, %r1627;
	add.s32 	%r1629, %r1602, %r1600;
	shf.l.wrap.b32 	%r1630, %r1629, %r1629, 15;
	shf.l.wrap.b32 	%r1631, %r1629, %r1629, 13;
	xor.b32  	%r1632, %r1630, %r1631;
	shr.u32 	%r1633, %r1629, 10;
	xor.b32  	%r1634, %r1632, %r1633;
	add.s32 	%r1635, %r1544, %r1379;
	add.s32 	%r1636, %r1635, %r1628;
	add.s32 	%r1637, %r1636, %r1634;
	add.s32 	%r1638, %r1619, %r1617;
	st.local.v4.u32 	[%rd208+80], {%r1612, %r1629, %r1638, %r1637};
	shr.u32 	%r1639, %r1425, 7;
	shl.b32 	%r1640, %r1406, 25;
	or.b32  	%r1641, %r1639, %r1640;
	shr.u32 	%r1642, %r1403, 18;
	shl.b32 	%r1643, %r1425, 14;
	or.b32  	%r1644, %r1642, %r1643;
	xor.b32  	%r1645, %r1641, %r1644;
	shr.u32 	%r1646, %r1425, 3;
	xor.b32  	%r1647, %r1645, %r1646;
	shf.l.wrap.b32 	%r1648, %r1638, %r1638, 15;
	shf.l.wrap.b32 	%r1649, %r1638, %r1638, 13;
	xor.b32  	%r1650, %r1648, %r1649;
	shr.u32 	%r1651, %r1638, 10;
	xor.b32  	%r1652, %r1650, %r1651;
	add.s32 	%r1653, %r1561, %r1426;
	add.s32 	%r1654, %r1653, %r1647;
	shr.u32 	%r1655, %r1424, 7;
	shl.b32 	%r1656, %r1414, 25;
	or.b32  	%r1657, %r1655, %r1656;
	shr.u32 	%r1658, %r1411, 18;
	shl.b32 	%r1659, %r1424, 14;
	or.b32  	%r1660, %r1658, %r1659;
	xor.b32  	%r1661, %r1657, %r1660;
	shr.u32 	%r1662, %r1424, 3;
	xor.b32  	%r1663, %r1661, %r1662;
	shf.l.wrap.b32 	%r1664, %r1637, %r1637, 15;
	shf.l.wrap.b32 	%r1665, %r1637, %r1637, 13;
	xor.b32  	%r1666, %r1664, %r1665;
	shr.u32 	%r1667, %r1637, 10;
	xor.b32  	%r1668, %r1666, %r1667;
	add.s32 	%r1669, %r1570, %r1425;
	add.s32 	%r1670, %r1669, %r1663;
	shr.u32 	%r1671, %r1423, 7;
	shl.b32 	%r1672, %r1422, 25;
	or.b32  	%r1673, %r1671, %r1672;
	shr.u32 	%r1674, %r1419, 18;
	shl.b32 	%r1675, %r1423, 14;
	or.b32  	%r1676, %r1674, %r1675;
	xor.b32  	%r1677, %r1673, %r1676;
	shr.u32 	%r1678, %r1423, 3;
	xor.b32  	%r1679, %r1677, %r1678;
	add.s32 	%r1680, %r1654, %r1652;
	shf.l.wrap.b32 	%r1681, %r1680, %r1680, 15;
	shf.l.wrap.b32 	%r1682, %r1680, %r1680, 13;
	xor.b32  	%r1683, %r1681, %r1682;
	shr.u32 	%r1684, %r1680, 10;
	xor.b32  	%r1685, %r1683, %r1684;
	add.s32 	%r1686, %r1569, %r1424;
	add.s32 	%r1687, %r1686, %r1679;
	shf.l.wrap.b32 	%r1688, %r1476, %r1476, 25;
	shf.l.wrap.b32 	%r1689, %r1476, %r1476, 14;
	xor.b32  	%r1690, %r1688, %r1689;
	shr.u32 	%r1691, %r1476, 3;
	xor.b32  	%r1692, %r1690, %r1691;
	add.s32 	%r1693, %r1670, %r1668;
	shf.l.wrap.b32 	%r1694, %r1693, %r1693, 15;
	shf.l.wrap.b32 	%r1695, %r1693, %r1693, 13;
	xor.b32  	%r1696, %r1694, %r1695;
	shr.u32 	%r1697, %r1693, 10;
	xor.b32  	%r1698, %r1696, %r1697;
	add.s32 	%r1699, %r1612, %r1423;
	add.s32 	%r1700, %r1699, %r1692;
	add.s32 	%r1701, %r1700, %r1698;
	add.s32 	%r1702, %r1687, %r1685;
	st.local.v4.u32 	[%rd208+96], {%r1680, %r1693, %r1702, %r1701};
	shf.l.wrap.b32 	%r1703, %r1493, %r1493, 25;
	shf.l.wrap.b32 	%r1704, %r1493, %r1493, 14;
	xor.b32  	%r1705, %r1703, %r1704;
	shr.u32 	%r1706, %r1493, 3;
	xor.b32  	%r1707, %r1705, %r1706;
	shf.l.wrap.b32 	%r1708, %r1702, %r1702, 15;
	shf.l.wrap.b32 	%r1709, %r1702, %r1702, 13;
	xor.b32  	%r1710, %r1708, %r1709;
	shr.u32 	%r1711, %r1702, 10;
	xor.b32  	%r1712, %r1710, %r1711;
	add.s32 	%r1713, %r1629, %r1476;
	add.s32 	%r1714, %r1713, %r1707;
	shf.l.wrap.b32 	%r1715, %r1502, %r1502, 25;
	shf.l.wrap.b32 	%r1716, %r1502, %r1502, 14;
	xor.b32  	%r1717, %r1715, %r1716;
	shr.u32 	%r1718, %r1502, 3;
	xor.b32  	%r1719, %r1717, %r1718;
	shf.l.wrap.b32 	%r1720, %r1701, %r1701, 15;
	shf.l.wrap.b32 	%r1721, %r1701, %r1701, 13;
	xor.b32  	%r1722, %r1720, %r1721;
	shr.u32 	%r1723, %r1701, 10;
	xor.b32  	%r1724, %r1722, %r1723;
	add.s32 	%r1725, %r1638, %r1493;
	add.s32 	%r1726, %r1725, %r1719;
	shf.l.wrap.b32 	%r1727, %r1501, %r1501, 25;
	shf.l.wrap.b32 	%r1728, %r1501, %r1501, 14;
	xor.b32  	%r1729, %r1727, %r1728;
	shr.u32 	%r1730, %r1501, 3;
	xor.b32  	%r1731, %r1729, %r1730;
	add.s32 	%r1732, %r1714, %r1712;
	shf.l.wrap.b32 	%r1733, %r1732, %r1732, 15;
	shf.l.wrap.b32 	%r1734, %r1732, %r1732, 13;
	xor.b32  	%r1735, %r1733, %r1734;
	shr.u32 	%r1736, %r1732, 10;
	xor.b32  	%r1737, %r1735, %r1736;
	add.s32 	%r1738, %r1637, %r1502;
	add.s32 	%r1739, %r1738, %r1731;
	shf.l.wrap.b32 	%r1740, %r1544, %r1544, 25;
	shf.l.wrap.b32 	%r1741, %r1544, %r1544, 14;
	xor.b32  	%r1742, %r1740, %r1741;
	shr.u32 	%r1743, %r1544, 3;
	xor.b32  	%r1744, %r1742, %r1743;
	add.s32 	%r1745, %r1726, %r1724;
	shf.l.wrap.b32 	%r1746, %r1745, %r1745, 15;
	shf.l.wrap.b32 	%r1747, %r1745, %r1745, 13;
	xor.b32  	%r1748, %r1746, %r1747;
	shr.u32 	%r1749, %r1745, 10;
	xor.b32  	%r1750, %r1748, %r1749;
	add.s32 	%r1751, %r1680, %r1501;
	add.s32 	%r1752, %r1751, %r1744;
	add.s32 	%r1753, %r1752, %r1750;
	add.s32 	%r1754, %r1739, %r1737;
	st.local.v4.u32 	[%rd208+112], {%r1732, %r1745, %r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1561, %r1561, 25;
	shf.l.wrap.b32 	%r1756, %r1561, %r1561, 14;
	xor.b32  	%r1757, %r1755, %r1756;
	shr.u32 	%r1758, %r1561, 3;
	xor.b32  	%r1759, %r1757, %r1758;
	shf.l.wrap.b32 	%r1760, %r1754, %r1754, 15;
	shf.l.wrap.b32 	%r1761, %r1754, %r1754, 13;
	xor.b32  	%r1762, %r1760, %r1761;
	shr.u32 	%r1763, %r1754, 10;
	xor.b32  	%r1764, %r1762, %r1763;
	add.s32 	%r1765, %r1693, %r1544;
	add.s32 	%r1766, %r1765, %r1759;
	shf.l.wrap.b32 	%r1767, %r1570, %r1570, 25;
	shf.l.wrap.b32 	%r1768, %r1570, %r1570, 14;
	xor.b32  	%r1769, %r1767, %r1768;
	shr.u32 	%r1770, %r1570, 3;
	xor.b32  	%r1771, %r1769, %r1770;
	shf.l.wrap.b32 	%r1772, %r1753, %r1753, 15;
	shf.l.wrap.b32 	%r1773, %r1753, %r1753, 13;
	xor.b32  	%r1774, %r1772, %r1773;
	shr.u32 	%r1775, %r1753, 10;
	xor.b32  	%r1776, %r1774, %r1775;
	add.s32 	%r1777, %r1702, %r1561;
	add.s32 	%r1778, %r1777, %r1771;
	shf.l.wrap.b32 	%r1779, %r1569, %r1569, 25;
	shf.l.wrap.b32 	%r1780, %r1569, %r1569, 14;
	xor.b32  	%r1781, %r1779, %r1780;
	shr.u32 	%r1782, %r1569, 3;
	xor.b32  	%r1783, %r1781, %r1782;
	add.s32 	%r1784, %r1766, %r1764;
	shf.l.wrap.b32 	%r1785, %r1784, %r1784, 15;
	shf.l.wrap.b32 	%r1786, %r1784, %r1784, 13;
	xor.b32  	%r1787, %r1785, %r1786;
	shr.u32 	%r1788, %r1784, 10;
	xor.b32  	%r1789, %r1787, %r1788;
	add.s32 	%r1790, %r1701, %r1570;
	add.s32 	%r1791, %r1790, %r1783;
	shf.l.wrap.b32 	%r1792, %r1612, %r1612, 25;
	shf.l.wrap.b32 	%r1793, %r1612, %r1612, 14;
	xor.b32  	%r1794, %r1792, %r1793;
	shr.u32 	%r1795, %r1612, 3;
	xor.b32  	%r1796, %r1794, %r1795;
	add.s32 	%r1797, %r1778, %r1776;
	shf.l.wrap.b32 	%r1798, %r1797, %r1797, 15;
	shf.l.wrap.b32 	%r1799, %r1797, %r1797, 13;
	xor.b32  	%r1800, %r1798, %r1799;
	shr.u32 	%r1801, %r1797, 10;
	xor.b32  	%r1802, %r1800, %r1801;
	add.s32 	%r1803, %r1732, %r1569;
	add.s32 	%r1804, %r1803, %r1796;
	add.s32 	%r1805, %r1804, %r1802;
	add.s32 	%r1806, %r1791, %r1789;
	st.local.v4.u32 	[%rd208+128], {%r1784, %r1797, %r1806, %r1805};
	shf.l.wrap.b32 	%r1807, %r1629, %r1629, 25;
	shf.l.wrap.b32 	%r1808, %r1629, %r1629, 14;
	xor.b32  	%r1809, %r1807, %r1808;
	shr.u32 	%r1810, %r1629, 3;
	xor.b32  	%r1811, %r1809, %r1810;
	shf.l.wrap.b32 	%r1812, %r1806, %r1806, 15;
	shf.l.wrap.b32 	%r1813, %r1806, %r1806, 13;
	xor.b32  	%r1814, %r1812, %r1813;
	shr.u32 	%r1815, %r1806, 10;
	xor.b32  	%r1816, %r1814, %r1815;
	add.s32 	%r1817, %r1745, %r1612;
	add.s32 	%r1818, %r1817, %r1811;
	shf.l.wrap.b32 	%r1819, %r1638, %r1638, 25;
	shf.l.wrap.b32 	%r1820, %r1638, %r1638, 14;
	xor.b32  	%r1821, %r1819, %r1820;
	shr.u32 	%r1822, %r1638, 3;
	xor.b32  	%r1823, %r1821, %r1822;
	shf.l.wrap.b32 	%r1824, %r1805, %r1805, 15;
	shf.l.wrap.b32 	%r1825, %r1805, %r1805, 13;
	xor.b32  	%r1826, %r1824, %r1825;
	shr.u32 	%r1827, %r1805, 10;
	xor.b32  	%r1828, %r1826, %r1827;
	add.s32 	%r1829, %r1754, %r1629;
	add.s32 	%r1830, %r1829, %r1823;
	shf.l.wrap.b32 	%r1831, %r1637, %r1637, 25;
	shf.l.wrap.b32 	%r1832, %r1637, %r1637, 14;
	xor.b32  	%r1833, %r1831, %r1832;
	shr.u32 	%r1834, %r1637, 3;
	xor.b32  	%r1835, %r1833, %r1834;
	add.s32 	%r1836, %r1818, %r1816;
	shf.l.wrap.b32 	%r1837, %r1836, %r1836, 15;
	shf.l.wrap.b32 	%r1838, %r1836, %r1836, 13;
	xor.b32  	%r1839, %r1837, %r1838;
	shr.u32 	%r1840, %r1836, 10;
	xor.b32  	%r1841, %r1839, %r1840;
	add.s32 	%r1842, %r1753, %r1638;
	add.s32 	%r1843, %r1842, %r1835;
	shf.l.wrap.b32 	%r1844, %r1680, %r1680, 25;
	shf.l.wrap.b32 	%r1845, %r1680, %r1680, 14;
	xor.b32  	%r1846, %r1844, %r1845;
	shr.u32 	%r1847, %r1680, 3;
	xor.b32  	%r1848, %r1846, %r1847;
	add.s32 	%r1849, %r1830, %r1828;
	shf.l.wrap.b32 	%r1850, %r1849, %r1849, 15;
	shf.l.wrap.b32 	%r1851, %r1849, %r1849, 13;
	xor.b32  	%r1852, %r1850, %r1851;
	shr.u32 	%r1853, %r1849, 10;
	xor.b32  	%r1854, %r1852, %r1853;
	add.s32 	%r1855, %r1784, %r1637;
	add.s32 	%r1856, %r1855, %r1848;
	add.s32 	%r1857, %r1856, %r1854;
	add.s32 	%r1858, %r1843, %r1841;
	st.local.v4.u32 	[%rd208+144], {%r1836, %r1849, %r1858, %r1857};
	shf.l.wrap.b32 	%r1859, %r1693, %r1693, 25;
	shf.l.wrap.b32 	%r1860, %r1693, %r1693, 14;
	xor.b32  	%r1861, %r1859, %r1860;
	shr.u32 	%r1862, %r1693, 3;
	xor.b32  	%r1863, %r1861, %r1862;
	shf.l.wrap.b32 	%r1864, %r1858, %r1858, 15;
	shf.l.wrap.b32 	%r1865, %r1858, %r1858, 13;
	xor.b32  	%r1866, %r1864, %r1865;
	shr.u32 	%r1867, %r1858, 10;
	xor.b32  	%r1868, %r1866, %r1867;
	add.s32 	%r1869, %r1797, %r1680;
	add.s32 	%r1870, %r1869, %r1863;
	shf.l.wrap.b32 	%r1871, %r1702, %r1702, 25;
	shf.l.wrap.b32 	%r1872, %r1702, %r1702, 14;
	xor.b32  	%r1873, %r1871, %r1872;
	shr.u32 	%r1874, %r1702, 3;
	xor.b32  	%r1875, %r1873, %r1874;
	shf.l.wrap.b32 	%r1876, %r1857, %r1857, 15;
	shf.l.wrap.b32 	%r1877, %r1857, %r1857, 13;
	xor.b32  	%r1878, %r1876, %r1877;
	shr.u32 	%r1879, %r1857, 10;
	xor.b32  	%r1880, %r1878, %r1879;
	add.s32 	%r1881, %r1806, %r1693;
	add.s32 	%r1882, %r1881, %r1875;
	shf.l.wrap.b32 	%r1883, %r1701, %r1701, 25;
	shf.l.wrap.b32 	%r1884, %r1701, %r1701, 14;
	xor.b32  	%r1885, %r1883, %r1884;
	shr.u32 	%r1886, %r1701, 3;
	xor.b32  	%r1887, %r1885, %r1886;
	add.s32 	%r1888, %r1870, %r1868;
	shf.l.wrap.b32 	%r1889, %r1888, %r1888, 15;
	shf.l.wrap.b32 	%r1890, %r1888, %r1888, 13;
	xor.b32  	%r1891, %r1889, %r1890;
	shr.u32 	%r1892, %r1888, 10;
	xor.b32  	%r1893, %r1891, %r1892;
	add.s32 	%r1894, %r1805, %r1702;
	add.s32 	%r1895, %r1894, %r1887;
	shf.l.wrap.b32 	%r1896, %r1732, %r1732, 25;
	shf.l.wrap.b32 	%r1897, %r1732, %r1732, 14;
	xor.b32  	%r1898, %r1896, %r1897;
	shr.u32 	%r1899, %r1732, 3;
	xor.b32  	%r1900, %r1898, %r1899;
	add.s32 	%r1901, %r1882, %r1880;
	shf.l.wrap.b32 	%r1902, %r1901, %r1901, 15;
	shf.l.wrap.b32 	%r1903, %r1901, %r1901, 13;
	xor.b32  	%r1904, %r1902, %r1903;
	shr.u32 	%r1905, %r1901, 10;
	xor.b32  	%r1906, %r1904, %r1905;
	add.s32 	%r1907, %r1836, %r1701;
	add.s32 	%r1908, %r1907, %r1900;
	add.s32 	%r1909, %r1908, %r1906;
	add.s32 	%r1910, %r1895, %r1893;
	st.local.v4.u32 	[%rd208+160], {%r1888, %r1901, %r1910, %r1909};
	shf.l.wrap.b32 	%r1911, %r1745, %r1745, 25;
	shf.l.wrap.b32 	%r1912, %r1745, %r1745, 14;
	xor.b32  	%r1913, %r1911, %r1912;
	shr.u32 	%r1914, %r1745, 3;
	xor.b32  	%r1915, %r1913, %r1914;
	shf.l.wrap.b32 	%r1916, %r1910, %r1910, 15;
	shf.l.wrap.b32 	%r1917, %r1910, %r1910, 13;
	xor.b32  	%r1918, %r1916, %r1917;
	shr.u32 	%r1919, %r1910, 10;
	xor.b32  	%r1920, %r1918, %r1919;
	add.s32 	%r1921, %r1849, %r1732;
	add.s32 	%r1922, %r1921, %r1915;
	shf.l.wrap.b32 	%r1923, %r1754, %r1754, 25;
	shf.l.wrap.b32 	%r1924, %r1754, %r1754, 14;
	xor.b32  	%r1925, %r1923, %r1924;
	shr.u32 	%r1926, %r1754, 3;
	xor.b32  	%r1927, %r1925, %r1926;
	shf.l.wrap.b32 	%r1928, %r1909, %r1909, 15;
	shf.l.wrap.b32 	%r1929, %r1909, %r1909, 13;
	xor.b32  	%r1930, %r1928, %r1929;
	shr.u32 	%r1931, %r1909, 10;
	xor.b32  	%r1932, %r1930, %r1931;
	add.s32 	%r1933, %r1858, %r1745;
	add.s32 	%r1934, %r1933, %r1927;
	shf.l.wrap.b32 	%r1935, %r1753, %r1753, 25;
	shf.l.wrap.b32 	%r1936, %r1753, %r1753, 14;
	xor.b32  	%r1937, %r1935, %r1936;
	shr.u32 	%r1938, %r1753, 3;
	xor.b32  	%r1939, %r1937, %r1938;
	add.s32 	%r1940, %r1922, %r1920;
	shf.l.wrap.b32 	%r1941, %r1940, %r1940, 15;
	shf.l.wrap.b32 	%r1942, %r1940, %r1940, 13;
	xor.b32  	%r1943, %r1941, %r1942;
	shr.u32 	%r1944, %r1940, 10;
	xor.b32  	%r1945, %r1943, %r1944;
	add.s32 	%r1946, %r1857, %r1754;
	add.s32 	%r1947, %r1946, %r1939;
	shf.l.wrap.b32 	%r1948, %r1784, %r1784, 25;
	shf.l.wrap.b32 	%r1949, %r1784, %r1784, 14;
	xor.b32  	%r1950, %r1948, %r1949;
	shr.u32 	%r1951, %r1784, 3;
	xor.b32  	%r1952, %r1950, %r1951;
	add.s32 	%r1953, %r1934, %r1932;
	shf.l.wrap.b32 	%r1954, %r1953, %r1953, 15;
	shf.l.wrap.b32 	%r1955, %r1953, %r1953, 13;
	xor.b32  	%r1956, %r1954, %r1955;
	shr.u32 	%r1957, %r1953, 10;
	xor.b32  	%r1958, %r1956, %r1957;
	add.s32 	%r1959, %r1888, %r1753;
	add.s32 	%r1960, %r1959, %r1952;
	add.s32 	%r1961, %r1960, %r1958;
	add.s32 	%r1962, %r1947, %r1945;
	st.local.v4.u32 	[%rd208+176], {%r1940, %r1953, %r1962, %r1961};
	shf.l.wrap.b32 	%r1963, %r1797, %r1797, 25;
	shf.l.wrap.b32 	%r1964, %r1797, %r1797, 14;
	xor.b32  	%r1965, %r1963, %r1964;
	shr.u32 	%r1966, %r1797, 3;
	xor.b32  	%r1967, %r1965, %r1966;
	shf.l.wrap.b32 	%r1968, %r1962, %r1962, 15;
	shf.l.wrap.b32 	%r1969, %r1962, %r1962, 13;
	xor.b32  	%r1970, %r1968, %r1969;
	shr.u32 	%r1971, %r1962, 10;
	xor.b32  	%r1972, %r1970, %r1971;
	add.s32 	%r1973, %r1901, %r1784;
	add.s32 	%r1974, %r1973, %r1967;
	shf.l.wrap.b32 	%r1975, %r1806, %r1806, 25;
	shf.l.wrap.b32 	%r1976, %r1806, %r1806, 14;
	xor.b32  	%r1977, %r1975, %r1976;
	shr.u32 	%r1978, %r1806, 3;
	xor.b32  	%r1979, %r1977, %r1978;
	shf.l.wrap.b32 	%r1980, %r1961, %r1961, 15;
	shf.l.wrap.b32 	%r1981, %r1961, %r1961, 13;
	xor.b32  	%r1982, %r1980, %r1981;
	shr.u32 	%r1983, %r1961, 10;
	xor.b32  	%r1984, %r1982, %r1983;
	add.s32 	%r1985, %r1910, %r1797;
	add.s32 	%r1986, %r1985, %r1979;
	shf.l.wrap.b32 	%r1987, %r1805, %r1805, 25;
	shf.l.wrap.b32 	%r1988, %r1805, %r1805, 14;
	xor.b32  	%r1989, %r1987, %r1988;
	shr.u32 	%r1990, %r1805, 3;
	xor.b32  	%r1991, %r1989, %r1990;
	add.s32 	%r1992, %r1974, %r1972;
	shf.l.wrap.b32 	%r1993, %r1992, %r1992, 15;
	shf.l.wrap.b32 	%r1994, %r1992, %r1992, 13;
	xor.b32  	%r1995, %r1993, %r1994;
	shr.u32 	%r1996, %r1992, 10;
	xor.b32  	%r1997, %r1995, %r1996;
	add.s32 	%r1998, %r1909, %r1806;
	add.s32 	%r1999, %r1998, %r1991;
	shf.l.wrap.b32 	%r2000, %r1836, %r1836, 25;
	shf.l.wrap.b32 	%r2001, %r1836, %r1836, 14;
	xor.b32  	%r2002, %r2000, %r2001;
	shr.u32 	%r2003, %r1836, 3;
	xor.b32  	%r2004, %r2002, %r2003;
	add.s32 	%r2005, %r1986, %r1984;
	shf.l.wrap.b32 	%r2006, %r2005, %r2005, 15;
	shf.l.wrap.b32 	%r2007, %r2005, %r2005, 13;
	xor.b32  	%r2008, %r2006, %r2007;
	shr.u32 	%r2009, %r2005, 10;
	xor.b32  	%r2010, %r2008, %r2009;
	add.s32 	%r2011, %r1940, %r1805;
	add.s32 	%r2012, %r2011, %r2004;
	add.s32 	%r2013, %r2012, %r2010;
	add.s32 	%r2014, %r1999, %r1997;
	st.local.v4.u32 	[%rd208+192], {%r1992, %r2005, %r2014, %r2013};
	shf.l.wrap.b32 	%r2015, %r1849, %r1849, 25;
	shf.l.wrap.b32 	%r2016, %r1849, %r1849, 14;
	xor.b32  	%r2017, %r2015, %r2016;
	shr.u32 	%r2018, %r1849, 3;
	xor.b32  	%r2019, %r2017, %r2018;
	shf.l.wrap.b32 	%r2020, %r2014, %r2014, 15;
	shf.l.wrap.b32 	%r2021, %r2014, %r2014, 13;
	xor.b32  	%r2022, %r2020, %r2021;
	shr.u32 	%r2023, %r2014, 10;
	xor.b32  	%r2024, %r2022, %r2023;
	add.s32 	%r2025, %r1953, %r1836;
	add.s32 	%r2026, %r2025, %r2019;
	shf.l.wrap.b32 	%r2027, %r1858, %r1858, 25;
	shf.l.wrap.b32 	%r2028, %r1858, %r1858, 14;
	xor.b32  	%r2029, %r2027, %r2028;
	shr.u32 	%r2030, %r1858, 3;
	xor.b32  	%r2031, %r2029, %r2030;
	shf.l.wrap.b32 	%r2032, %r2013, %r2013, 15;
	shf.l.wrap.b32 	%r2033, %r2013, %r2013, 13;
	xor.b32  	%r2034, %r2032, %r2033;
	shr.u32 	%r2035, %r2013, 10;
	xor.b32  	%r2036, %r2034, %r2035;
	add.s32 	%r2037, %r1962, %r1849;
	add.s32 	%r2038, %r2037, %r2031;
	shf.l.wrap.b32 	%r2039, %r1857, %r1857, 25;
	shf.l.wrap.b32 	%r2040, %r1857, %r1857, 14;
	xor.b32  	%r2041, %r2039, %r2040;
	shr.u32 	%r2042, %r1857, 3;
	xor.b32  	%r2043, %r2041, %r2042;
	add.s32 	%r2044, %r2026, %r2024;
	shf.l.wrap.b32 	%r2045, %r2044, %r2044, 15;
	shf.l.wrap.b32 	%r2046, %r2044, %r2044, 13;
	xor.b32  	%r2047, %r2045, %r2046;
	shr.u32 	%r2048, %r2044, 10;
	xor.b32  	%r2049, %r2047, %r2048;
	add.s32 	%r2050, %r1961, %r1858;
	add.s32 	%r2051, %r2050, %r2043;
	shf.l.wrap.b32 	%r2052, %r1888, %r1888, 25;
	shf.l.wrap.b32 	%r2053, %r1888, %r1888, 14;
	xor.b32  	%r2054, %r2052, %r2053;
	shr.u32 	%r2055, %r1888, 3;
	xor.b32  	%r2056, %r2054, %r2055;
	add.s32 	%r2057, %r2038, %r2036;
	shf.l.wrap.b32 	%r2058, %r2057, %r2057, 15;
	shf.l.wrap.b32 	%r2059, %r2057, %r2057, 13;
	xor.b32  	%r2060, %r2058, %r2059;
	shr.u32 	%r2061, %r2057, 10;
	xor.b32  	%r2062, %r2060, %r2061;
	add.s32 	%r2063, %r1992, %r1857;
	add.s32 	%r2064, %r2063, %r2056;
	add.s32 	%r2065, %r2064, %r2062;
	add.s32 	%r2066, %r2051, %r2049;
	st.local.v4.u32 	[%rd208+208], {%r2044, %r2057, %r2066, %r2065};
	shf.l.wrap.b32 	%r2067, %r1901, %r1901, 25;
	shf.l.wrap.b32 	%r2068, %r1901, %r1901, 14;
	xor.b32  	%r2069, %r2067, %r2068;
	shr.u32 	%r2070, %r1901, 3;
	xor.b32  	%r2071, %r2069, %r2070;
	shf.l.wrap.b32 	%r2072, %r2066, %r2066, 15;
	shf.l.wrap.b32 	%r2073, %r2066, %r2066, 13;
	xor.b32  	%r2074, %r2072, %r2073;
	shr.u32 	%r2075, %r2066, 10;
	xor.b32  	%r2076, %r2074, %r2075;
	add.s32 	%r2077, %r2005, %r1888;
	add.s32 	%r2078, %r2077, %r2071;
	shf.l.wrap.b32 	%r2079, %r1910, %r1910, 25;
	shf.l.wrap.b32 	%r2080, %r1910, %r1910, 14;
	xor.b32  	%r2081, %r2079, %r2080;
	shr.u32 	%r2082, %r1910, 3;
	xor.b32  	%r2083, %r2081, %r2082;
	shf.l.wrap.b32 	%r2084, %r2065, %r2065, 15;
	shf.l.wrap.b32 	%r2085, %r2065, %r2065, 13;
	xor.b32  	%r2086, %r2084, %r2085;
	shr.u32 	%r2087, %r2065, 10;
	xor.b32  	%r2088, %r2086, %r2087;
	add.s32 	%r2089, %r2014, %r1901;
	add.s32 	%r2090, %r2089, %r2083;
	shf.l.wrap.b32 	%r2091, %r1909, %r1909, 25;
	shf.l.wrap.b32 	%r2092, %r1909, %r1909, 14;
	xor.b32  	%r2093, %r2091, %r2092;
	shr.u32 	%r2094, %r1909, 3;
	xor.b32  	%r2095, %r2093, %r2094;
	add.s32 	%r2096, %r2078, %r2076;
	shf.l.wrap.b32 	%r2097, %r2096, %r2096, 15;
	shf.l.wrap.b32 	%r2098, %r2096, %r2096, 13;
	xor.b32  	%r2099, %r2097, %r2098;
	shr.u32 	%r2100, %r2096, 10;
	xor.b32  	%r2101, %r2099, %r2100;
	add.s32 	%r2102, %r2013, %r1910;
	add.s32 	%r2103, %r2102, %r2095;
	shf.l.wrap.b32 	%r2104, %r1940, %r1940, 25;
	shf.l.wrap.b32 	%r2105, %r1940, %r1940, 14;
	xor.b32  	%r2106, %r2104, %r2105;
	shr.u32 	%r2107, %r1940, 3;
	xor.b32  	%r2108, %r2106, %r2107;
	add.s32 	%r2109, %r2090, %r2088;
	shf.l.wrap.b32 	%r2110, %r2109, %r2109, 15;
	shf.l.wrap.b32 	%r2111, %r2109, %r2109, 13;
	xor.b32  	%r2112, %r2110, %r2111;
	shr.u32 	%r2113, %r2109, 10;
	xor.b32  	%r2114, %r2112, %r2113;
	add.s32 	%r2115, %r2044, %r1909;
	add.s32 	%r2116, %r2115, %r2108;
	add.s32 	%r2117, %r2116, %r2114;
	add.s32 	%r2118, %r2103, %r2101;
	st.local.v4.u32 	[%rd208+224], {%r2096, %r2109, %r2118, %r2117};
	ld.local.u32 	%r41, [%rd5+-12];
	ld.local.v2.u32 	{%r2119, %r2120}, [%rd5+-8];
	ld.local.v4.u32 	{%r2121, %r2122, %r2123, %r2124}, [%rd5];
	ld.local.u32 	%r48, [%rd5+16];
	mov.u32 	%r2266, -64;
	mov.u64 	%rd220, k;
	mov.u32 	%r2268, %r41;
	mov.u32 	%r2269, %r2119;
	mov.u32 	%r2270, %r2120;
	mov.u32 	%r2271, %r2121;
	mov.u32 	%r2272, %r2122;
	mov.u32 	%r2273, %r2123;
	mov.u32 	%r2274, %r2124;
	mov.u32 	%r2275, %r48;
	bra.uni 	BB0_10;

BB0_11:
	add.s64 	%rd14, %rd221, 16;
	ld.local.u32 	%r2267, [%rd221+16];
	add.s64 	%rd220, %rd220, 16;
	mov.u64 	%rd221, %rd14;

BB0_10:
	shf.l.wrap.b32 	%r2125, %r2272, %r2272, 26;
	shf.l.wrap.b32 	%r2126, %r2272, %r2272, 21;
	xor.b32  	%r2127, %r2125, %r2126;
	shf.l.wrap.b32 	%r2128, %r2272, %r2272, 7;
	xor.b32  	%r2129, %r2127, %r2128;
	not.b32 	%r2130, %r2272;
	and.b32  	%r2131, %r2274, %r2130;
	and.b32  	%r2132, %r2272, %r2273;
	xor.b32  	%r2133, %r2132, %r2131;
	add.s32 	%r2134, %r2133, %r2275;
	add.s32 	%r2135, %r2134, %r2129;
	ld.const.u32 	%r2136, [%rd220];
	add.s32 	%r2137, %r2135, %r2136;
	add.s32 	%r2138, %r2137, %r2267;
	shf.l.wrap.b32 	%r2139, %r2268, %r2268, 30;
	shf.l.wrap.b32 	%r2140, %r2268, %r2268, 19;
	xor.b32  	%r2141, %r2139, %r2140;
	shf.l.wrap.b32 	%r2142, %r2268, %r2268, 10;
	xor.b32  	%r2143, %r2141, %r2142;
	xor.b32  	%r2144, %r2269, %r2270;
	and.b32  	%r2145, %r2268, %r2144;
	and.b32  	%r2146, %r2269, %r2270;
	xor.b32  	%r2147, %r2145, %r2146;
	add.s32 	%r2148, %r2143, %r2147;
	add.s32 	%r2275, %r2138, %r2271;
	add.s32 	%r2271, %r2148, %r2138;
	shf.l.wrap.b32 	%r2149, %r2275, %r2275, 26;
	shf.l.wrap.b32 	%r2150, %r2275, %r2275, 21;
	xor.b32  	%r2151, %r2149, %r2150;
	shf.l.wrap.b32 	%r2152, %r2275, %r2275, 7;
	xor.b32  	%r2153, %r2151, %r2152;
	and.b32  	%r2154, %r2275, %r2272;
	not.b32 	%r2155, %r2275;
	and.b32  	%r2156, %r2273, %r2155;
	xor.b32  	%r2157, %r2154, %r2156;
	add.s32 	%r2158, %r2157, %r2274;
	add.s32 	%r2159, %r2158, %r2153;
	ld.const.u32 	%r2160, [%rd220+4];
	add.s32 	%r2161, %r2159, %r2160;
	ld.local.u32 	%r2162, [%rd221+4];
	add.s32 	%r2163, %r2161, %r2162;
	shf.l.wrap.b32 	%r2164, %r2271, %r2271, 30;
	shf.l.wrap.b32 	%r2165, %r2271, %r2271, 19;
	xor.b32  	%r2166, %r2164, %r2165;
	shf.l.wrap.b32 	%r2167, %r2271, %r2271, 10;
	xor.b32  	%r2168, %r2166, %r2167;
	xor.b32  	%r2169, %r2268, %r2269;
	and.b32  	%r2170, %r2271, %r2169;
	and.b32  	%r2171, %r2268, %r2269;
	xor.b32  	%r2172, %r2170, %r2171;
	add.s32 	%r2173, %r2168, %r2172;
	add.s32 	%r2274, %r2163, %r2270;
	add.s32 	%r2270, %r2173, %r2163;
	shf.l.wrap.b32 	%r2174, %r2274, %r2274, 26;
	shf.l.wrap.b32 	%r2175, %r2274, %r2274, 21;
	xor.b32  	%r2176, %r2174, %r2175;
	shf.l.wrap.b32 	%r2177, %r2274, %r2274, 7;
	xor.b32  	%r2178, %r2176, %r2177;
	and.b32  	%r2179, %r2274, %r2275;
	not.b32 	%r2180, %r2274;
	and.b32  	%r2181, %r2272, %r2180;
	xor.b32  	%r2182, %r2179, %r2181;
	add.s32 	%r2183, %r2182, %r2273;
	add.s32 	%r2184, %r2183, %r2178;
	ld.const.u32 	%r2185, [%rd220+8];
	add.s32 	%r2186, %r2184, %r2185;
	ld.local.v2.u32 	{%r2187, %r2188}, [%rd221+8];
	add.s32 	%r2190, %r2186, %r2187;
	shf.l.wrap.b32 	%r2191, %r2270, %r2270, 30;
	shf.l.wrap.b32 	%r2192, %r2270, %r2270, 19;
	xor.b32  	%r2193, %r2191, %r2192;
	shf.l.wrap.b32 	%r2194, %r2270, %r2270, 10;
	xor.b32  	%r2195, %r2193, %r2194;
	xor.b32  	%r2196, %r2271, %r2268;
	and.b32  	%r2197, %r2270, %r2196;
	and.b32  	%r2198, %r2271, %r2268;
	xor.b32  	%r2199, %r2197, %r2198;
	add.s32 	%r2200, %r2195, %r2199;
	add.s32 	%r2273, %r2190, %r2269;
	add.s32 	%r2269, %r2200, %r2190;
	shf.l.wrap.b32 	%r2201, %r2273, %r2273, 26;
	shf.l.wrap.b32 	%r2202, %r2273, %r2273, 21;
	xor.b32  	%r2203, %r2201, %r2202;
	shf.l.wrap.b32 	%r2204, %r2273, %r2273, 7;
	xor.b32  	%r2205, %r2203, %r2204;
	and.b32  	%r2206, %r2273, %r2274;
	not.b32 	%r2207, %r2273;
	and.b32  	%r2208, %r2275, %r2207;
	xor.b32  	%r2209, %r2206, %r2208;
	add.s32 	%r2210, %r2209, %r2272;
	add.s32 	%r2211, %r2210, %r2205;
	ld.const.u32 	%r2212, [%rd220+12];
	add.s32 	%r2213, %r2211, %r2212;
	add.s32 	%r2215, %r2213, %r2188;
	shf.l.wrap.b32 	%r2216, %r2269, %r2269, 30;
	shf.l.wrap.b32 	%r2217, %r2269, %r2269, 19;
	xor.b32  	%r2218, %r2216, %r2217;
	shf.l.wrap.b32 	%r2219, %r2269, %r2269, 10;
	xor.b32  	%r2220, %r2218, %r2219;
	xor.b32  	%r2221, %r2270, %r2271;
	and.b32  	%r2222, %r2269, %r2221;
	and.b32  	%r2223, %r2270, %r2271;
	xor.b32  	%r2224, %r2222, %r2223;
	add.s32 	%r2225, %r2220, %r2224;
	add.s32 	%r2272, %r2215, %r2268;
	add.s32 	%r2268, %r2225, %r2215;
	add.s32 	%r2266, %r2266, 4;
	setp.eq.s32	%p7, %r2266, 0;
	@%p7 bra 	BB0_12;
	bra.uni 	BB0_11;

BB0_12:
	add.s32 	%r2227, %r41, %r2268;
	st.local.u32 	[%rd5+-12], %r2227;
	add.s32 	%r2228, %r2120, %r2270;
	add.s32 	%r2229, %r2119, %r2269;
	st.local.v2.u32 	[%rd5+-8], {%r2229, %r2228};
	add.s32 	%r2230, %r2124, %r2274;
	add.s32 	%r2231, %r2123, %r2273;
	add.s32 	%r2232, %r2122, %r2272;
	add.s32 	%r2233, %r2121, %r2271;
	st.local.v4.u32 	[%rd5], {%r2233, %r2232, %r2231, %r2230};
	add.s32 	%r2234, %r48, %r2275;
	st.local.u32 	[%rd5+16], %r2234;
	mov.u32 	%r2263, 0;
	st.local.u32 	[%rd5+-16], %r2263;

BB0_13:
	add.s32 	%r2265, %r2265, 1;
	setp.lt.u32	%p8, %r2265, %r36;
	@%p8 bra 	BB0_8;

BB0_14:
	ld.param.u64 	%rd209, [scanHash_post_param_2];
	ld.local.u32 	%r2235, [%rd5+12];
	shr.u32 	%r2236, %r2235, 24;
	cvt.u64.u32	%rd181, %r2236;
	shr.u32 	%r2237, %r2235, 8;
	cvt.u64.u32	%rd182, %r2237;
	shl.b32 	%r2238, %r2235, 8;
	cvt.u64.u32	%rd183, %r2238;
	and.b64  	%rd184, %rd182, 65280;
	or.b64  	%rd185, %rd181, %rd184;
	shl.b32 	%r2239, %r2235, 24;
	cvt.u64.u32	%rd186, %r2239;
	and.b64  	%rd187, %rd183, 16711680;
	or.b64  	%rd188, %rd185, %rd187;
	ld.local.u32 	%r2240, [%rd5+16];
	shr.u32 	%r2241, %r2240, 24;
	cvt.u64.u32	%rd189, %r2241;
	shl.b64 	%rd190, %rd189, 32;
	or.b64  	%rd191, %rd188, %rd186;
	mul.wide.u32 	%rd192, %r2240, 16777216;
	or.b64  	%rd193, %rd191, %rd190;
	shr.u32 	%r2242, %r2240, 8;
	cvt.u64.u32	%rd194, %r2242;
	and.b64  	%rd195, %rd194, 255;
	and.b64  	%rd196, %rd192, 280375465082880;
	or.b64  	%rd197, %rd193, %rd196;
	cvt.u64.u32	%rd198, %r2240;
	shl.b64 	%rd199, %rd198, 56;
	shl.b64 	%rd200, %rd195, 48;
	or.b64  	%rd201, %rd197, %rd200;
	or.b64  	%rd202, %rd201, %rd199;
	setp.gt.u64	%p9, %rd202, %rd209;
	@%p9 bra 	BB0_16;

	mov.b32	%r2250, %envreg3;
	mov.u32 	%r2249, %ntid.x;
	mov.u32 	%r2248, %ctaid.x;
	mov.u32 	%r2247, %tid.x;
	mad.lo.s32 	%r2246, %r2248, %r2249, %r2250;
	add.s32 	%r2245, %r2246, %r2247;
	ld.param.u64 	%rd216, [scanHash_post_param_1];
	ld.global.u32 	%r2243, [%rd216+60];
	add.s32 	%r2244, %r2243, 1;
	st.global.u32 	[%rd216+60], %r2244;
	mul.wide.u32 	%rd203, %r2243, 4;
	add.s64 	%rd204, %rd216, %rd203;
	st.global.u32 	[%rd204], %r2245;

BB0_16:
	bar.sync 	0;
	ret;
}

	// .globl	hashTest
.entry hashTest(
	.param .u64 .ptr .global .align 1 hashTest_param_0,
	.param .u64 .ptr .global .align 1 hashTest_param_1
)
{
	.local .align 16 .b8 	__local_depot1[512];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<170>;
	.reg .b32 	%r<2229>;
	.reg .b64 	%rd<68>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd17, [hashTest_param_0];
	add.u64 	%rd3, %SPL, 128;
	ld.global.u8 	%rs169, [%rd17];
	ld.global.u8 	%r72, [%rd17+2];
	ld.global.u8 	%r73, [%rd17+3];
	prmt.b32 	%r74, %r73, %r72, 30212;
	ld.global.u8 	%r75, [%rd17+1];
	cvt.u32.u16	%r76, %rs169;
	prmt.b32 	%r77, %r75, %r76, 30212;
	ld.global.u8 	%r78, [%rd17+4];
	ld.global.u8 	%r79, [%rd17+5];
	prmt.b32 	%r80, %r79, %r78, 30212;
	ld.global.u8 	%r81, [%rd17+6];
	ld.global.u8 	%r82, [%rd17+7];
	prmt.b32 	%r83, %r82, %r81, 30212;
	ld.global.u8 	%r84, [%rd17+8];
	ld.global.u8 	%r85, [%rd17+9];
	prmt.b32 	%r86, %r85, %r84, 30212;
	ld.global.u8 	%r87, [%rd17+10];
	ld.global.u8 	%r88, [%rd17+11];
	prmt.b32 	%r89, %r88, %r87, 30212;
	ld.global.u8 	%r90, [%rd17+12];
	ld.global.u8 	%r91, [%rd17+13];
	prmt.b32 	%r92, %r91, %r90, 30212;
	ld.global.u8 	%r93, [%rd17+14];
	ld.global.u8 	%r94, [%rd17+15];
	prmt.b32 	%r95, %r94, %r93, 30212;
	prmt.b32 	%r96, %r95, %r92, 4180;
	prmt.b32 	%r97, %r89, %r86, 4180;
	prmt.b32 	%r98, %r83, %r80, 4180;
	prmt.b32 	%r99, %r74, %r77, 4180;
	ld.global.u8 	%r100, [%rd17+16];
	ld.global.u8 	%r101, [%rd17+17];
	prmt.b32 	%r102, %r101, %r100, 30212;
	ld.global.u8 	%r103, [%rd17+18];
	ld.global.u8 	%r104, [%rd17+19];
	prmt.b32 	%r105, %r104, %r103, 30212;
	ld.global.u8 	%r106, [%rd17+20];
	ld.global.u8 	%r107, [%rd17+21];
	prmt.b32 	%r108, %r107, %r106, 30212;
	ld.global.u8 	%r109, [%rd17+22];
	ld.global.u8 	%r110, [%rd17+23];
	prmt.b32 	%r111, %r110, %r109, 30212;
	ld.global.u8 	%r112, [%rd17+24];
	ld.global.u8 	%r113, [%rd17+25];
	prmt.b32 	%r114, %r113, %r112, 30212;
	ld.global.u8 	%r115, [%rd17+26];
	ld.global.u8 	%r116, [%rd17+27];
	prmt.b32 	%r117, %r116, %r115, 30212;
	ld.global.u8 	%r118, [%rd17+28];
	ld.global.u8 	%r119, [%rd17+29];
	prmt.b32 	%r120, %r119, %r118, 30212;
	ld.global.u8 	%r121, [%rd17+30];
	ld.global.u8 	%r122, [%rd17+31];
	prmt.b32 	%r123, %r122, %r121, 30212;
	prmt.b32 	%r124, %r123, %r120, 4180;
	prmt.b32 	%r125, %r117, %r114, 4180;
	prmt.b32 	%r126, %r111, %r108, 4180;
	prmt.b32 	%r127, %r105, %r102, 4180;
	ld.global.u8 	%r128, [%rd17+34];
	ld.global.u8 	%r129, [%rd17+35];
	ld.global.u8 	%r130, [%rd17+32];
	ld.global.u8 	%r131, [%rd17+33];
	ld.global.u8 	%r132, [%rd17+38];
	ld.global.u8 	%r133, [%rd17+39];
	ld.global.u8 	%r134, [%rd17+36];
	ld.global.u8 	%r135, [%rd17+37];
	ld.global.u8 	%r136, [%rd17+42];
	ld.global.u8 	%r137, [%rd17+43];
	ld.global.u8 	%r138, [%rd17+40];
	ld.global.u8 	%r139, [%rd17+41];
	ld.global.u8 	%r140, [%rd17+46];
	ld.global.u8 	%r141, [%rd17+47];
	ld.global.u8 	%r142, [%rd17+44];
	ld.global.u8 	%r143, [%rd17+45];
	ld.global.u8 	%r144, [%rd17+50];
	ld.global.u8 	%r145, [%rd17+51];
	ld.global.u8 	%r146, [%rd17+48];
	ld.global.u8 	%r147, [%rd17+49];
	ld.global.u8 	%r148, [%rd17+54];
	ld.global.u8 	%r149, [%rd17+55];
	ld.global.u8 	%r150, [%rd17+52];
	ld.global.u8 	%r151, [%rd17+53];
	ld.global.u8 	%r152, [%rd17+58];
	ld.global.u8 	%r153, [%rd17+59];
	ld.global.u8 	%r154, [%rd17+56];
	ld.global.u8 	%r155, [%rd17+57];
	ld.global.u8 	%r156, [%rd17+62];
	ld.global.u8 	%r157, [%rd17+63];
	ld.global.u8 	%r158, [%rd17+60];
	ld.global.u8 	%r159, [%rd17+61];
	st.local.v4.u32 	[%rd3], {%r99, %r98, %r97, %r96};
	prmt.b32 	%r160, %r131, %r130, 30212;
	prmt.b32 	%r161, %r129, %r128, 30212;
	prmt.b32 	%r162, %r135, %r134, 30212;
	prmt.b32 	%r163, %r133, %r132, 30212;
	prmt.b32 	%r164, %r139, %r138, 30212;
	prmt.b32 	%r165, %r137, %r136, 30212;
	prmt.b32 	%r166, %r143, %r142, 30212;
	prmt.b32 	%r167, %r141, %r140, 30212;
	prmt.b32 	%r168, %r167, %r166, 4180;
	prmt.b32 	%r169, %r165, %r164, 4180;
	prmt.b32 	%r170, %r163, %r162, 4180;
	prmt.b32 	%r171, %r161, %r160, 4180;
	st.local.v4.u32 	[%rd3+16], {%r127, %r126, %r125, %r124};
	prmt.b32 	%r172, %r147, %r146, 30212;
	prmt.b32 	%r173, %r145, %r144, 30212;
	prmt.b32 	%r174, %r151, %r150, 30212;
	prmt.b32 	%r175, %r149, %r148, 30212;
	prmt.b32 	%r176, %r155, %r154, 30212;
	prmt.b32 	%r177, %r153, %r152, 30212;
	prmt.b32 	%r178, %r159, %r158, 30212;
	prmt.b32 	%r179, %r157, %r156, 30212;
	prmt.b32 	%r180, %r179, %r178, 4180;
	prmt.b32 	%r181, %r177, %r176, 4180;
	prmt.b32 	%r182, %r175, %r174, 4180;
	prmt.b32 	%r183, %r173, %r172, 4180;
	st.local.v4.u32 	[%rd3+32], {%r171, %r170, %r169, %r168};
	st.local.v4.u32 	[%rd3+48], {%r183, %r182, %r181, %r180};
	add.u64 	%rd2, %SPL, 256;
	add.u64 	%rd4, %SPL, 0;
	add.s64 	%rd5, %rd4, 80;
	ld.const.u32 	%r184, [h+24];
	ld.const.u32 	%r185, [h+20];
	ld.const.u32 	%r186, [h+16];
	ld.const.u32 	%r187, [h+12];
	st.local.v4.u32 	[%rd4+80], {%r187, %r186, %r185, %r184};
	ld.const.u32 	%r188, [h+28];
	st.local.u32 	[%rd4+96], %r188;
	ld.const.u32 	%r189, [h+8];
	ld.const.u32 	%r190, [h+4];
	ld.const.u32 	%r191, [h];
	mov.u32 	%r2215, 0;
	st.local.v4.u32 	[%rd4+64], {%r2215, %r191, %r190, %r189};
	mov.u64 	%rd21, 512;
	mov.u64 	%rd22, 0;
	st.local.u64 	[%rd4+120], %rd22;
	st.local.u64 	[%rd4+112], %rd21;
	mov.u32 	%r2204, %r2215;
	bra.uni 	BB1_1;

BB1_15:
	cvt.s64.s32	%rd52, %r2204;
	add.s64 	%rd53, %rd3, %rd52;
	ld.local.u8 	%rs169, [%rd53];

BB1_1:
	cvt.u64.u32	%rd23, %r2215;
	add.s64 	%rd24, %rd4, %rd23;
	st.local.u8 	[%rd24], %rs169;
	ld.local.u32 	%r192, [%rd5+-16];
	add.s32 	%r2215, %r192, 1;
	st.local.u32 	[%rd5+-16], %r2215;
	setp.ne.s32	%p1, %r2215, 64;
	@%p1 bra 	BB1_6;

	add.s64 	%rd56, %rd2, 16;
	ld.local.v4.u32 	{%r194, %r195, %r196, %r197}, [%rd4];
	mov.b32	{%rs4, %rs5}, %r194;
	shr.u16 	%rs6, %rs4, 8;
	shr.u16 	%rs7, %rs5, 8;
	mov.b32	{%rs8, %rs9}, %r195;
	shr.u16 	%rs10, %rs8, 8;
	shr.u16 	%rs11, %rs9, 8;
	mov.b32	{%rs12, %rs13}, %r196;
	shr.u16 	%rs14, %rs12, 8;
	shr.u16 	%rs15, %rs13, 8;
	mov.b32	{%rs16, %rs17}, %r197;
	shr.u16 	%rs18, %rs16, 8;
	shr.u16 	%rs19, %rs17, 8;
	cvt.u32.u16	%r202, %rs4;
	shl.b32 	%r203, %r202, 24;
	cvt.u32.u16	%r204, %rs6;
	shl.b32 	%r205, %r204, 16;
	or.b32  	%r206, %r205, %r203;
	and.b16  	%rs20, %rs5, 255;
	mul.wide.u16 	%r207, %rs20, 256;
	or.b32  	%r208, %r206, %r207;
	cvt.u32.u16	%r209, %rs7;
	or.b32  	%r2206, %r208, %r209;
	cvt.u32.u16	%r210, %rs8;
	shl.b32 	%r211, %r210, 24;
	cvt.u32.u16	%r212, %rs10;
	shl.b32 	%r213, %r212, 16;
	or.b32  	%r214, %r213, %r211;
	and.b16  	%rs21, %rs9, 255;
	mul.wide.u16 	%r215, %rs21, 256;
	or.b32  	%r216, %r214, %r215;
	cvt.u32.u16	%r217, %rs11;
	cvt.u32.u16	%r218, %rs12;
	shl.b32 	%r219, %r218, 24;
	cvt.u32.u16	%r220, %rs14;
	shl.b32 	%r221, %r220, 16;
	or.b32  	%r222, %r221, %r219;
	and.b16  	%rs22, %rs13, 255;
	mul.wide.u16 	%r223, %rs22, 256;
	or.b32  	%r224, %r222, %r223;
	cvt.u32.u16	%r225, %rs15;
	cvt.u32.u16	%r226, %rs16;
	shl.b32 	%r227, %r226, 24;
	cvt.u32.u16	%r228, %rs18;
	shl.b32 	%r229, %r228, 16;
	or.b32  	%r230, %r229, %r227;
	and.b16  	%rs23, %rs17, 255;
	mul.wide.u16 	%r231, %rs23, 256;
	or.b32  	%r232, %r230, %r231;
	cvt.u32.u16	%r233, %rs19;
	or.b32  	%r234, %r232, %r233;
	or.b32  	%r235, %r224, %r225;
	or.b32  	%r236, %r216, %r217;
	add.u64 	%rd29, %SPL, 256;
	st.local.v4.u32 	[%rd29], {%r2206, %r236, %r235, %r234};
	ld.local.v4.u32 	{%r237, %r238, %r239, %r240}, [%rd5+-64];
	mov.b32	{%rs24, %rs25}, %r237;
	shr.u16 	%rs26, %rs24, 8;
	shr.u16 	%rs27, %rs25, 8;
	mov.b32	{%rs28, %rs29}, %r238;
	shr.u16 	%rs30, %rs28, 8;
	shr.u16 	%rs31, %rs29, 8;
	mov.b32	{%rs32, %rs33}, %r239;
	shr.u16 	%rs34, %rs32, 8;
	shr.u16 	%rs35, %rs33, 8;
	mov.b32	{%rs36, %rs37}, %r240;
	shr.u16 	%rs38, %rs36, 8;
	shr.u16 	%rs39, %rs37, 8;
	cvt.u32.u16	%r245, %rs24;
	shl.b32 	%r246, %r245, 24;
	cvt.u32.u16	%r247, %rs26;
	shl.b32 	%r248, %r247, 16;
	or.b32  	%r249, %r248, %r246;
	and.b16  	%rs40, %rs25, 255;
	mul.wide.u16 	%r250, %rs40, 256;
	or.b32  	%r251, %r249, %r250;
	cvt.u32.u16	%r252, %rs27;
	cvt.u32.u16	%r253, %rs28;
	shl.b32 	%r254, %r253, 24;
	cvt.u32.u16	%r255, %rs30;
	shl.b32 	%r256, %r255, 16;
	or.b32  	%r257, %r256, %r254;
	and.b16  	%rs41, %rs29, 255;
	mul.wide.u16 	%r258, %rs41, 256;
	or.b32  	%r259, %r257, %r258;
	cvt.u32.u16	%r260, %rs31;
	cvt.u32.u16	%r261, %rs32;
	shl.b32 	%r262, %r261, 24;
	cvt.u32.u16	%r263, %rs34;
	shl.b32 	%r264, %r263, 16;
	or.b32  	%r265, %r264, %r262;
	and.b16  	%rs42, %rs33, 255;
	mul.wide.u16 	%r266, %rs42, 256;
	or.b32  	%r267, %r265, %r266;
	cvt.u32.u16	%r268, %rs35;
	cvt.u32.u16	%r269, %rs36;
	shl.b32 	%r270, %r269, 24;
	cvt.u32.u16	%r271, %rs38;
	shl.b32 	%r272, %r271, 16;
	or.b32  	%r273, %r272, %r270;
	and.b16  	%rs43, %rs37, 255;
	mul.wide.u16 	%r274, %rs43, 256;
	or.b32  	%r275, %r273, %r274;
	cvt.u32.u16	%r276, %rs39;
	or.b32  	%r277, %r275, %r276;
	or.b32  	%r278, %r267, %r268;
	or.b32  	%r279, %r259, %r260;
	or.b32  	%r280, %r251, %r252;
	st.local.v4.u32 	[%rd56], {%r280, %r279, %r278, %r277};
	ld.local.v4.u32 	{%r281, %r282, %r283, %r284}, [%rd5+-48];
	mov.b32	{%rs44, %rs45}, %r281;
	shr.u16 	%rs46, %rs44, 8;
	shr.u16 	%rs47, %rs45, 8;
	mov.b32	{%rs48, %rs49}, %r282;
	shr.u16 	%rs50, %rs48, 8;
	shr.u16 	%rs51, %rs49, 8;
	mov.b32	{%rs52, %rs53}, %r283;
	shr.u16 	%rs54, %rs52, 8;
	shr.u16 	%rs55, %rs53, 8;
	mov.b32	{%rs56, %rs57}, %r284;
	shr.u16 	%rs58, %rs56, 8;
	shr.u16 	%rs59, %rs57, 8;
	cvt.u32.u16	%r289, %rs44;
	shl.b32 	%r290, %r289, 24;
	cvt.u32.u16	%r291, %rs46;
	shl.b32 	%r292, %r291, 16;
	or.b32  	%r293, %r292, %r290;
	and.b16  	%rs60, %rs45, 255;
	mul.wide.u16 	%r294, %rs60, 256;
	or.b32  	%r295, %r293, %r294;
	cvt.u32.u16	%r296, %rs47;
	cvt.u32.u16	%r297, %rs48;
	shl.b32 	%r298, %r297, 24;
	cvt.u32.u16	%r299, %rs50;
	shl.b32 	%r300, %r299, 16;
	or.b32  	%r301, %r300, %r298;
	and.b16  	%rs61, %rs49, 255;
	mul.wide.u16 	%r302, %rs61, 256;
	or.b32  	%r303, %r301, %r302;
	cvt.u32.u16	%r304, %rs51;
	cvt.u32.u16	%r305, %rs52;
	shl.b32 	%r306, %r305, 24;
	cvt.u32.u16	%r307, %rs54;
	shl.b32 	%r308, %r307, 16;
	or.b32  	%r309, %r308, %r306;
	and.b16  	%rs62, %rs53, 255;
	mul.wide.u16 	%r310, %rs62, 256;
	or.b32  	%r311, %r309, %r310;
	cvt.u32.u16	%r312, %rs55;
	cvt.u32.u16	%r313, %rs56;
	shl.b32 	%r314, %r313, 24;
	cvt.u32.u16	%r315, %rs58;
	shl.b32 	%r316, %r315, 16;
	or.b32  	%r317, %r316, %r314;
	and.b16  	%rs63, %rs57, 255;
	mul.wide.u16 	%r318, %rs63, 256;
	or.b32  	%r319, %r317, %r318;
	cvt.u32.u16	%r320, %rs59;
	or.b32  	%r321, %r319, %r320;
	or.b32  	%r322, %r311, %r312;
	or.b32  	%r323, %r303, %r304;
	or.b32  	%r324, %r295, %r296;
	st.local.v4.u32 	[%rd56+16], {%r324, %r323, %r322, %r321};
	ld.local.v4.u32 	{%r325, %r326, %r327, %r328}, [%rd5+-32];
	mov.b32	{%rs64, %rs65}, %r325;
	shr.u16 	%rs66, %rs64, 8;
	shr.u16 	%rs67, %rs65, 8;
	mov.b32	{%rs68, %rs69}, %r326;
	shr.u16 	%rs70, %rs68, 8;
	shr.u16 	%rs71, %rs69, 8;
	mov.b32	{%rs72, %rs73}, %r327;
	shr.u16 	%rs74, %rs72, 8;
	shr.u16 	%rs75, %rs73, 8;
	mov.b32	{%rs76, %rs77}, %r328;
	shr.u16 	%rs78, %rs76, 8;
	shr.u16 	%rs79, %rs77, 8;
	cvt.u32.u16	%r333, %rs64;
	shl.b32 	%r334, %r333, 24;
	cvt.u32.u16	%r335, %rs66;
	shl.b32 	%r336, %r335, 16;
	or.b32  	%r337, %r336, %r334;
	and.b16  	%rs80, %rs65, 255;
	mul.wide.u16 	%r338, %rs80, 256;
	or.b32  	%r339, %r337, %r338;
	cvt.u32.u16	%r340, %rs67;
	cvt.u32.u16	%r341, %rs68;
	shl.b32 	%r342, %r341, 24;
	cvt.u32.u16	%r343, %rs70;
	shl.b32 	%r344, %r343, 16;
	or.b32  	%r345, %r344, %r342;
	and.b16  	%rs81, %rs69, 255;
	mul.wide.u16 	%r346, %rs81, 256;
	or.b32  	%r347, %r345, %r346;
	cvt.u32.u16	%r348, %rs71;
	cvt.u32.u16	%r349, %rs72;
	shl.b32 	%r350, %r349, 24;
	cvt.u32.u16	%r351, %rs74;
	shl.b32 	%r352, %r351, 16;
	or.b32  	%r353, %r352, %r350;
	and.b16  	%rs82, %rs73, 255;
	mul.wide.u16 	%r354, %rs82, 256;
	or.b32  	%r355, %r353, %r354;
	cvt.u32.u16	%r356, %rs75;
	cvt.u32.u16	%r357, %rs76;
	shl.b32 	%r358, %r357, 24;
	cvt.u32.u16	%r359, %rs78;
	shl.b32 	%r360, %r359, 16;
	or.b32  	%r361, %r360, %r358;
	and.b16  	%rs83, %rs77, 255;
	mul.wide.u16 	%r362, %rs83, 256;
	or.b32  	%r363, %r361, %r362;
	cvt.u32.u16	%r364, %rs79;
	or.b32  	%r365, %r363, %r364;
	or.b32  	%r366, %r355, %r356;
	or.b32  	%r367, %r347, %r348;
	or.b32  	%r368, %r339, %r340;
	st.local.v4.u32 	[%rd56+32], {%r368, %r367, %r366, %r365};
	shr.u32 	%r369, %r236, 7;
	shl.b32 	%r370, %r217, 25;
	or.b32  	%r371, %r369, %r370;
	shr.u32 	%r372, %r214, 18;
	shl.b32 	%r373, %r236, 14;
	or.b32  	%r374, %r372, %r373;
	xor.b32  	%r375, %r371, %r374;
	shr.u32 	%r376, %r236, 3;
	xor.b32  	%r377, %r375, %r376;
	shr.u32 	%r378, %r353, 17;
	shl.b32 	%r379, %r366, 15;
	or.b32  	%r380, %r378, %r379;
	shr.u32 	%r381, %r353, 19;
	shl.b32 	%r382, %r366, 13;
	or.b32  	%r383, %r381, %r382;
	xor.b32  	%r384, %r380, %r383;
	shr.u32 	%r385, %r355, 10;
	xor.b32  	%r386, %r384, %r385;
	add.s32 	%r387, %r323, %r2206;
	add.s32 	%r388, %r387, %r377;
	shr.u32 	%r389, %r235, 7;
	shl.b32 	%r390, %r225, 25;
	or.b32  	%r391, %r389, %r390;
	shr.u32 	%r392, %r222, 18;
	shl.b32 	%r393, %r235, 14;
	or.b32  	%r394, %r392, %r393;
	xor.b32  	%r395, %r391, %r394;
	shr.u32 	%r396, %r235, 3;
	xor.b32  	%r397, %r395, %r396;
	shr.u32 	%r398, %r361, 17;
	shl.b32 	%r399, %r365, 15;
	or.b32  	%r400, %r398, %r399;
	shr.u32 	%r401, %r361, 19;
	shl.b32 	%r402, %r365, 13;
	or.b32  	%r403, %r401, %r402;
	xor.b32  	%r404, %r400, %r403;
	shr.u32 	%r405, %r363, 10;
	xor.b32  	%r406, %r404, %r405;
	add.s32 	%r407, %r322, %r236;
	add.s32 	%r408, %r407, %r397;
	shr.u32 	%r409, %r234, 7;
	shl.b32 	%r410, %r233, 25;
	or.b32  	%r411, %r409, %r410;
	shr.u32 	%r412, %r230, 18;
	shl.b32 	%r413, %r234, 14;
	or.b32  	%r414, %r412, %r413;
	xor.b32  	%r415, %r411, %r414;
	shr.u32 	%r416, %r234, 3;
	xor.b32  	%r417, %r415, %r416;
	add.s32 	%r418, %r388, %r386;
	shf.l.wrap.b32 	%r419, %r418, %r418, 15;
	shf.l.wrap.b32 	%r420, %r418, %r418, 13;
	xor.b32  	%r421, %r419, %r420;
	shr.u32 	%r422, %r418, 10;
	xor.b32  	%r423, %r421, %r422;
	add.s32 	%r424, %r321, %r235;
	add.s32 	%r425, %r424, %r417;
	shr.u32 	%r426, %r280, 7;
	shl.b32 	%r427, %r252, 25;
	or.b32  	%r428, %r426, %r427;
	shr.u32 	%r429, %r249, 18;
	shl.b32 	%r430, %r280, 14;
	or.b32  	%r431, %r429, %r430;
	xor.b32  	%r432, %r428, %r431;
	shr.u32 	%r433, %r280, 3;
	xor.b32  	%r434, %r432, %r433;
	add.s32 	%r435, %r408, %r406;
	shf.l.wrap.b32 	%r436, %r435, %r435, 15;
	shf.l.wrap.b32 	%r437, %r435, %r435, 13;
	xor.b32  	%r438, %r436, %r437;
	shr.u32 	%r439, %r435, 10;
	xor.b32  	%r440, %r438, %r439;
	add.s32 	%r441, %r368, %r234;
	add.s32 	%r442, %r441, %r434;
	add.s32 	%r443, %r442, %r440;
	add.s32 	%r444, %r425, %r423;
	st.local.v4.u32 	[%rd56+48], {%r418, %r435, %r444, %r443};
	shr.u32 	%r445, %r279, 7;
	shl.b32 	%r446, %r260, 25;
	or.b32  	%r447, %r445, %r446;
	shr.u32 	%r448, %r257, 18;
	shl.b32 	%r449, %r279, 14;
	or.b32  	%r450, %r448, %r449;
	xor.b32  	%r451, %r447, %r450;
	shr.u32 	%r452, %r279, 3;
	xor.b32  	%r453, %r451, %r452;
	shf.l.wrap.b32 	%r454, %r444, %r444, 15;
	shf.l.wrap.b32 	%r455, %r444, %r444, 13;
	xor.b32  	%r456, %r454, %r455;
	shr.u32 	%r457, %r444, 10;
	xor.b32  	%r458, %r456, %r457;
	add.s32 	%r459, %r367, %r280;
	add.s32 	%r460, %r459, %r453;
	shr.u32 	%r461, %r278, 7;
	shl.b32 	%r462, %r268, 25;
	or.b32  	%r463, %r461, %r462;
	shr.u32 	%r464, %r265, 18;
	shl.b32 	%r465, %r278, 14;
	or.b32  	%r466, %r464, %r465;
	xor.b32  	%r467, %r463, %r466;
	shr.u32 	%r468, %r278, 3;
	xor.b32  	%r469, %r467, %r468;
	shf.l.wrap.b32 	%r470, %r443, %r443, 15;
	shf.l.wrap.b32 	%r471, %r443, %r443, 13;
	xor.b32  	%r472, %r470, %r471;
	shr.u32 	%r473, %r443, 10;
	xor.b32  	%r474, %r472, %r473;
	add.s32 	%r475, %r366, %r279;
	add.s32 	%r476, %r475, %r469;
	shr.u32 	%r477, %r277, 7;
	shl.b32 	%r478, %r276, 25;
	or.b32  	%r479, %r477, %r478;
	shr.u32 	%r480, %r273, 18;
	shl.b32 	%r481, %r277, 14;
	or.b32  	%r482, %r480, %r481;
	xor.b32  	%r483, %r479, %r482;
	shr.u32 	%r484, %r277, 3;
	xor.b32  	%r485, %r483, %r484;
	add.s32 	%r486, %r460, %r458;
	shf.l.wrap.b32 	%r487, %r486, %r486, 15;
	shf.l.wrap.b32 	%r488, %r486, %r486, 13;
	xor.b32  	%r489, %r487, %r488;
	shr.u32 	%r490, %r486, 10;
	xor.b32  	%r491, %r489, %r490;
	add.s32 	%r492, %r365, %r278;
	add.s32 	%r493, %r492, %r485;
	shr.u32 	%r494, %r324, 7;
	shl.b32 	%r495, %r296, 25;
	or.b32  	%r496, %r494, %r495;
	shr.u32 	%r497, %r293, 18;
	shl.b32 	%r498, %r324, 14;
	or.b32  	%r499, %r497, %r498;
	xor.b32  	%r500, %r496, %r499;
	shr.u32 	%r501, %r324, 3;
	xor.b32  	%r502, %r500, %r501;
	add.s32 	%r503, %r476, %r474;
	shf.l.wrap.b32 	%r504, %r503, %r503, 15;
	shf.l.wrap.b32 	%r505, %r503, %r503, 13;
	xor.b32  	%r506, %r504, %r505;
	shr.u32 	%r507, %r503, 10;
	xor.b32  	%r508, %r506, %r507;
	add.s32 	%r509, %r418, %r277;
	add.s32 	%r510, %r509, %r502;
	add.s32 	%r511, %r510, %r508;
	add.s32 	%r512, %r493, %r491;
	st.local.v4.u32 	[%rd56+64], {%r486, %r503, %r512, %r511};
	shr.u32 	%r513, %r323, 7;
	shl.b32 	%r514, %r304, 25;
	or.b32  	%r515, %r513, %r514;
	shr.u32 	%r516, %r301, 18;
	shl.b32 	%r517, %r323, 14;
	or.b32  	%r518, %r516, %r517;
	xor.b32  	%r519, %r515, %r518;
	shr.u32 	%r520, %r323, 3;
	xor.b32  	%r521, %r519, %r520;
	shf.l.wrap.b32 	%r522, %r512, %r512, 15;
	shf.l.wrap.b32 	%r523, %r512, %r512, 13;
	xor.b32  	%r524, %r522, %r523;
	shr.u32 	%r525, %r512, 10;
	xor.b32  	%r526, %r524, %r525;
	add.s32 	%r527, %r435, %r324;
	add.s32 	%r528, %r527, %r521;
	shr.u32 	%r529, %r322, 7;
	shl.b32 	%r530, %r312, 25;
	or.b32  	%r531, %r529, %r530;
	shr.u32 	%r532, %r309, 18;
	shl.b32 	%r533, %r322, 14;
	or.b32  	%r534, %r532, %r533;
	xor.b32  	%r535, %r531, %r534;
	shr.u32 	%r536, %r322, 3;
	xor.b32  	%r537, %r535, %r536;
	shf.l.wrap.b32 	%r538, %r511, %r511, 15;
	shf.l.wrap.b32 	%r539, %r511, %r511, 13;
	xor.b32  	%r540, %r538, %r539;
	shr.u32 	%r541, %r511, 10;
	xor.b32  	%r542, %r540, %r541;
	add.s32 	%r543, %r444, %r323;
	add.s32 	%r544, %r543, %r537;
	shr.u32 	%r545, %r321, 7;
	shl.b32 	%r546, %r320, 25;
	or.b32  	%r547, %r545, %r546;
	shr.u32 	%r548, %r317, 18;
	shl.b32 	%r549, %r321, 14;
	or.b32  	%r550, %r548, %r549;
	xor.b32  	%r551, %r547, %r550;
	shr.u32 	%r552, %r321, 3;
	xor.b32  	%r553, %r551, %r552;
	add.s32 	%r554, %r528, %r526;
	shf.l.wrap.b32 	%r555, %r554, %r554, 15;
	shf.l.wrap.b32 	%r556, %r554, %r554, 13;
	xor.b32  	%r557, %r555, %r556;
	shr.u32 	%r558, %r554, 10;
	xor.b32  	%r559, %r557, %r558;
	add.s32 	%r560, %r443, %r322;
	add.s32 	%r561, %r560, %r553;
	shr.u32 	%r562, %r368, 7;
	shl.b32 	%r563, %r340, 25;
	or.b32  	%r564, %r562, %r563;
	shr.u32 	%r565, %r337, 18;
	shl.b32 	%r566, %r368, 14;
	or.b32  	%r567, %r565, %r566;
	xor.b32  	%r568, %r564, %r567;
	shr.u32 	%r569, %r368, 3;
	xor.b32  	%r570, %r568, %r569;
	add.s32 	%r571, %r544, %r542;
	shf.l.wrap.b32 	%r572, %r571, %r571, 15;
	shf.l.wrap.b32 	%r573, %r571, %r571, 13;
	xor.b32  	%r574, %r572, %r573;
	shr.u32 	%r575, %r571, 10;
	xor.b32  	%r576, %r574, %r575;
	add.s32 	%r577, %r486, %r321;
	add.s32 	%r578, %r577, %r570;
	add.s32 	%r579, %r578, %r576;
	add.s32 	%r580, %r561, %r559;
	st.local.v4.u32 	[%rd56+80], {%r554, %r571, %r580, %r579};
	shr.u32 	%r581, %r367, 7;
	shl.b32 	%r582, %r348, 25;
	or.b32  	%r583, %r581, %r582;
	shr.u32 	%r584, %r345, 18;
	shl.b32 	%r585, %r367, 14;
	or.b32  	%r586, %r584, %r585;
	xor.b32  	%r587, %r583, %r586;
	shr.u32 	%r588, %r367, 3;
	xor.b32  	%r589, %r587, %r588;
	shf.l.wrap.b32 	%r590, %r580, %r580, 15;
	shf.l.wrap.b32 	%r591, %r580, %r580, 13;
	xor.b32  	%r592, %r590, %r591;
	shr.u32 	%r593, %r580, 10;
	xor.b32  	%r594, %r592, %r593;
	add.s32 	%r595, %r503, %r368;
	add.s32 	%r596, %r595, %r589;
	shr.u32 	%r597, %r366, 7;
	shl.b32 	%r598, %r356, 25;
	or.b32  	%r599, %r597, %r598;
	shr.u32 	%r600, %r353, 18;
	shl.b32 	%r601, %r366, 14;
	or.b32  	%r602, %r600, %r601;
	xor.b32  	%r603, %r599, %r602;
	shr.u32 	%r604, %r366, 3;
	xor.b32  	%r605, %r603, %r604;
	shf.l.wrap.b32 	%r606, %r579, %r579, 15;
	shf.l.wrap.b32 	%r607, %r579, %r579, 13;
	xor.b32  	%r608, %r606, %r607;
	shr.u32 	%r609, %r579, 10;
	xor.b32  	%r610, %r608, %r609;
	add.s32 	%r611, %r512, %r367;
	add.s32 	%r612, %r611, %r605;
	shr.u32 	%r613, %r365, 7;
	shl.b32 	%r614, %r364, 25;
	or.b32  	%r615, %r613, %r614;
	shr.u32 	%r616, %r361, 18;
	shl.b32 	%r617, %r365, 14;
	or.b32  	%r618, %r616, %r617;
	xor.b32  	%r619, %r615, %r618;
	shr.u32 	%r620, %r365, 3;
	xor.b32  	%r621, %r619, %r620;
	add.s32 	%r622, %r596, %r594;
	shf.l.wrap.b32 	%r623, %r622, %r622, 15;
	shf.l.wrap.b32 	%r624, %r622, %r622, 13;
	xor.b32  	%r625, %r623, %r624;
	shr.u32 	%r626, %r622, 10;
	xor.b32  	%r627, %r625, %r626;
	add.s32 	%r628, %r511, %r366;
	add.s32 	%r629, %r628, %r621;
	shf.l.wrap.b32 	%r630, %r418, %r418, 25;
	shf.l.wrap.b32 	%r631, %r418, %r418, 14;
	xor.b32  	%r632, %r630, %r631;
	shr.u32 	%r633, %r418, 3;
	xor.b32  	%r634, %r632, %r633;
	add.s32 	%r635, %r612, %r610;
	shf.l.wrap.b32 	%r636, %r635, %r635, 15;
	shf.l.wrap.b32 	%r637, %r635, %r635, 13;
	xor.b32  	%r638, %r636, %r637;
	shr.u32 	%r639, %r635, 10;
	xor.b32  	%r640, %r638, %r639;
	add.s32 	%r641, %r554, %r365;
	add.s32 	%r642, %r641, %r634;
	add.s32 	%r643, %r642, %r640;
	add.s32 	%r644, %r629, %r627;
	st.local.v4.u32 	[%rd56+96], {%r622, %r635, %r644, %r643};
	shf.l.wrap.b32 	%r645, %r435, %r435, 25;
	shf.l.wrap.b32 	%r646, %r435, %r435, 14;
	xor.b32  	%r647, %r645, %r646;
	shr.u32 	%r648, %r435, 3;
	xor.b32  	%r649, %r647, %r648;
	shf.l.wrap.b32 	%r650, %r644, %r644, 15;
	shf.l.wrap.b32 	%r651, %r644, %r644, 13;
	xor.b32  	%r652, %r650, %r651;
	shr.u32 	%r653, %r644, 10;
	xor.b32  	%r654, %r652, %r653;
	add.s32 	%r655, %r571, %r418;
	add.s32 	%r656, %r655, %r649;
	shf.l.wrap.b32 	%r657, %r444, %r444, 25;
	shf.l.wrap.b32 	%r658, %r444, %r444, 14;
	xor.b32  	%r659, %r657, %r658;
	shr.u32 	%r660, %r444, 3;
	xor.b32  	%r661, %r659, %r660;
	shf.l.wrap.b32 	%r662, %r643, %r643, 15;
	shf.l.wrap.b32 	%r663, %r643, %r643, 13;
	xor.b32  	%r664, %r662, %r663;
	shr.u32 	%r665, %r643, 10;
	xor.b32  	%r666, %r664, %r665;
	add.s32 	%r667, %r580, %r435;
	add.s32 	%r668, %r667, %r661;
	shf.l.wrap.b32 	%r669, %r443, %r443, 25;
	shf.l.wrap.b32 	%r670, %r443, %r443, 14;
	xor.b32  	%r671, %r669, %r670;
	shr.u32 	%r672, %r443, 3;
	xor.b32  	%r673, %r671, %r672;
	add.s32 	%r674, %r656, %r654;
	shf.l.wrap.b32 	%r675, %r674, %r674, 15;
	shf.l.wrap.b32 	%r676, %r674, %r674, 13;
	xor.b32  	%r677, %r675, %r676;
	shr.u32 	%r678, %r674, 10;
	xor.b32  	%r679, %r677, %r678;
	add.s32 	%r680, %r579, %r444;
	add.s32 	%r681, %r680, %r673;
	shf.l.wrap.b32 	%r682, %r486, %r486, 25;
	shf.l.wrap.b32 	%r683, %r486, %r486, 14;
	xor.b32  	%r684, %r682, %r683;
	shr.u32 	%r685, %r486, 3;
	xor.b32  	%r686, %r684, %r685;
	add.s32 	%r687, %r668, %r666;
	shf.l.wrap.b32 	%r688, %r687, %r687, 15;
	shf.l.wrap.b32 	%r689, %r687, %r687, 13;
	xor.b32  	%r690, %r688, %r689;
	shr.u32 	%r691, %r687, 10;
	xor.b32  	%r692, %r690, %r691;
	add.s32 	%r693, %r622, %r443;
	add.s32 	%r694, %r693, %r686;
	add.s32 	%r695, %r694, %r692;
	add.s32 	%r696, %r681, %r679;
	st.local.v4.u32 	[%rd56+112], {%r674, %r687, %r696, %r695};
	shf.l.wrap.b32 	%r697, %r503, %r503, 25;
	shf.l.wrap.b32 	%r698, %r503, %r503, 14;
	xor.b32  	%r699, %r697, %r698;
	shr.u32 	%r700, %r503, 3;
	xor.b32  	%r701, %r699, %r700;
	shf.l.wrap.b32 	%r702, %r696, %r696, 15;
	shf.l.wrap.b32 	%r703, %r696, %r696, 13;
	xor.b32  	%r704, %r702, %r703;
	shr.u32 	%r705, %r696, 10;
	xor.b32  	%r706, %r704, %r705;
	add.s32 	%r707, %r635, %r486;
	add.s32 	%r708, %r707, %r701;
	shf.l.wrap.b32 	%r709, %r512, %r512, 25;
	shf.l.wrap.b32 	%r710, %r512, %r512, 14;
	xor.b32  	%r711, %r709, %r710;
	shr.u32 	%r712, %r512, 3;
	xor.b32  	%r713, %r711, %r712;
	shf.l.wrap.b32 	%r714, %r695, %r695, 15;
	shf.l.wrap.b32 	%r715, %r695, %r695, 13;
	xor.b32  	%r716, %r714, %r715;
	shr.u32 	%r717, %r695, 10;
	xor.b32  	%r718, %r716, %r717;
	add.s32 	%r719, %r644, %r503;
	add.s32 	%r720, %r719, %r713;
	shf.l.wrap.b32 	%r721, %r511, %r511, 25;
	shf.l.wrap.b32 	%r722, %r511, %r511, 14;
	xor.b32  	%r723, %r721, %r722;
	shr.u32 	%r724, %r511, 3;
	xor.b32  	%r725, %r723, %r724;
	add.s32 	%r726, %r708, %r706;
	shf.l.wrap.b32 	%r727, %r726, %r726, 15;
	shf.l.wrap.b32 	%r728, %r726, %r726, 13;
	xor.b32  	%r729, %r727, %r728;
	shr.u32 	%r730, %r726, 10;
	xor.b32  	%r731, %r729, %r730;
	add.s32 	%r732, %r643, %r512;
	add.s32 	%r733, %r732, %r725;
	shf.l.wrap.b32 	%r734, %r554, %r554, 25;
	shf.l.wrap.b32 	%r735, %r554, %r554, 14;
	xor.b32  	%r736, %r734, %r735;
	shr.u32 	%r737, %r554, 3;
	xor.b32  	%r738, %r736, %r737;
	add.s32 	%r739, %r720, %r718;
	shf.l.wrap.b32 	%r740, %r739, %r739, 15;
	shf.l.wrap.b32 	%r741, %r739, %r739, 13;
	xor.b32  	%r742, %r740, %r741;
	shr.u32 	%r743, %r739, 10;
	xor.b32  	%r744, %r742, %r743;
	add.s32 	%r745, %r674, %r511;
	add.s32 	%r746, %r745, %r738;
	add.s32 	%r747, %r746, %r744;
	add.s32 	%r748, %r733, %r731;
	st.local.v4.u32 	[%rd56+128], {%r726, %r739, %r748, %r747};
	shf.l.wrap.b32 	%r749, %r571, %r571, 25;
	shf.l.wrap.b32 	%r750, %r571, %r571, 14;
	xor.b32  	%r751, %r749, %r750;
	shr.u32 	%r752, %r571, 3;
	xor.b32  	%r753, %r751, %r752;
	shf.l.wrap.b32 	%r754, %r748, %r748, 15;
	shf.l.wrap.b32 	%r755, %r748, %r748, 13;
	xor.b32  	%r756, %r754, %r755;
	shr.u32 	%r757, %r748, 10;
	xor.b32  	%r758, %r756, %r757;
	add.s32 	%r759, %r687, %r554;
	add.s32 	%r760, %r759, %r753;
	shf.l.wrap.b32 	%r761, %r580, %r580, 25;
	shf.l.wrap.b32 	%r762, %r580, %r580, 14;
	xor.b32  	%r763, %r761, %r762;
	shr.u32 	%r764, %r580, 3;
	xor.b32  	%r765, %r763, %r764;
	shf.l.wrap.b32 	%r766, %r747, %r747, 15;
	shf.l.wrap.b32 	%r767, %r747, %r747, 13;
	xor.b32  	%r768, %r766, %r767;
	shr.u32 	%r769, %r747, 10;
	xor.b32  	%r770, %r768, %r769;
	add.s32 	%r771, %r696, %r571;
	add.s32 	%r772, %r771, %r765;
	shf.l.wrap.b32 	%r773, %r579, %r579, 25;
	shf.l.wrap.b32 	%r774, %r579, %r579, 14;
	xor.b32  	%r775, %r773, %r774;
	shr.u32 	%r776, %r579, 3;
	xor.b32  	%r777, %r775, %r776;
	add.s32 	%r778, %r760, %r758;
	shf.l.wrap.b32 	%r779, %r778, %r778, 15;
	shf.l.wrap.b32 	%r780, %r778, %r778, 13;
	xor.b32  	%r781, %r779, %r780;
	shr.u32 	%r782, %r778, 10;
	xor.b32  	%r783, %r781, %r782;
	add.s32 	%r784, %r695, %r580;
	add.s32 	%r785, %r784, %r777;
	shf.l.wrap.b32 	%r786, %r622, %r622, 25;
	shf.l.wrap.b32 	%r787, %r622, %r622, 14;
	xor.b32  	%r788, %r786, %r787;
	shr.u32 	%r789, %r622, 3;
	xor.b32  	%r790, %r788, %r789;
	add.s32 	%r791, %r772, %r770;
	shf.l.wrap.b32 	%r792, %r791, %r791, 15;
	shf.l.wrap.b32 	%r793, %r791, %r791, 13;
	xor.b32  	%r794, %r792, %r793;
	shr.u32 	%r795, %r791, 10;
	xor.b32  	%r796, %r794, %r795;
	add.s32 	%r797, %r726, %r579;
	add.s32 	%r798, %r797, %r790;
	add.s32 	%r799, %r798, %r796;
	add.s32 	%r800, %r785, %r783;
	st.local.v4.u32 	[%rd56+144], {%r778, %r791, %r800, %r799};
	shf.l.wrap.b32 	%r801, %r635, %r635, 25;
	shf.l.wrap.b32 	%r802, %r635, %r635, 14;
	xor.b32  	%r803, %r801, %r802;
	shr.u32 	%r804, %r635, 3;
	xor.b32  	%r805, %r803, %r804;
	shf.l.wrap.b32 	%r806, %r800, %r800, 15;
	shf.l.wrap.b32 	%r807, %r800, %r800, 13;
	xor.b32  	%r808, %r806, %r807;
	shr.u32 	%r809, %r800, 10;
	xor.b32  	%r810, %r808, %r809;
	add.s32 	%r811, %r739, %r622;
	add.s32 	%r812, %r811, %r805;
	shf.l.wrap.b32 	%r813, %r644, %r644, 25;
	shf.l.wrap.b32 	%r814, %r644, %r644, 14;
	xor.b32  	%r815, %r813, %r814;
	shr.u32 	%r816, %r644, 3;
	xor.b32  	%r817, %r815, %r816;
	shf.l.wrap.b32 	%r818, %r799, %r799, 15;
	shf.l.wrap.b32 	%r819, %r799, %r799, 13;
	xor.b32  	%r820, %r818, %r819;
	shr.u32 	%r821, %r799, 10;
	xor.b32  	%r822, %r820, %r821;
	add.s32 	%r823, %r748, %r635;
	add.s32 	%r824, %r823, %r817;
	shf.l.wrap.b32 	%r825, %r643, %r643, 25;
	shf.l.wrap.b32 	%r826, %r643, %r643, 14;
	xor.b32  	%r827, %r825, %r826;
	shr.u32 	%r828, %r643, 3;
	xor.b32  	%r829, %r827, %r828;
	add.s32 	%r830, %r812, %r810;
	shf.l.wrap.b32 	%r831, %r830, %r830, 15;
	shf.l.wrap.b32 	%r832, %r830, %r830, 13;
	xor.b32  	%r833, %r831, %r832;
	shr.u32 	%r834, %r830, 10;
	xor.b32  	%r835, %r833, %r834;
	add.s32 	%r836, %r747, %r644;
	add.s32 	%r837, %r836, %r829;
	shf.l.wrap.b32 	%r838, %r674, %r674, 25;
	shf.l.wrap.b32 	%r839, %r674, %r674, 14;
	xor.b32  	%r840, %r838, %r839;
	shr.u32 	%r841, %r674, 3;
	xor.b32  	%r842, %r840, %r841;
	add.s32 	%r843, %r824, %r822;
	shf.l.wrap.b32 	%r844, %r843, %r843, 15;
	shf.l.wrap.b32 	%r845, %r843, %r843, 13;
	xor.b32  	%r846, %r844, %r845;
	shr.u32 	%r847, %r843, 10;
	xor.b32  	%r848, %r846, %r847;
	add.s32 	%r849, %r778, %r643;
	add.s32 	%r850, %r849, %r842;
	add.s32 	%r851, %r850, %r848;
	add.s32 	%r852, %r837, %r835;
	st.local.v4.u32 	[%rd56+160], {%r830, %r843, %r852, %r851};
	shf.l.wrap.b32 	%r853, %r687, %r687, 25;
	shf.l.wrap.b32 	%r854, %r687, %r687, 14;
	xor.b32  	%r855, %r853, %r854;
	shr.u32 	%r856, %r687, 3;
	xor.b32  	%r857, %r855, %r856;
	shf.l.wrap.b32 	%r858, %r852, %r852, 15;
	shf.l.wrap.b32 	%r859, %r852, %r852, 13;
	xor.b32  	%r860, %r858, %r859;
	shr.u32 	%r861, %r852, 10;
	xor.b32  	%r862, %r860, %r861;
	add.s32 	%r863, %r791, %r674;
	add.s32 	%r864, %r863, %r857;
	shf.l.wrap.b32 	%r865, %r696, %r696, 25;
	shf.l.wrap.b32 	%r866, %r696, %r696, 14;
	xor.b32  	%r867, %r865, %r866;
	shr.u32 	%r868, %r696, 3;
	xor.b32  	%r869, %r867, %r868;
	shf.l.wrap.b32 	%r870, %r851, %r851, 15;
	shf.l.wrap.b32 	%r871, %r851, %r851, 13;
	xor.b32  	%r872, %r870, %r871;
	shr.u32 	%r873, %r851, 10;
	xor.b32  	%r874, %r872, %r873;
	add.s32 	%r875, %r800, %r687;
	add.s32 	%r876, %r875, %r869;
	shf.l.wrap.b32 	%r877, %r695, %r695, 25;
	shf.l.wrap.b32 	%r878, %r695, %r695, 14;
	xor.b32  	%r879, %r877, %r878;
	shr.u32 	%r880, %r695, 3;
	xor.b32  	%r881, %r879, %r880;
	add.s32 	%r882, %r864, %r862;
	shf.l.wrap.b32 	%r883, %r882, %r882, 15;
	shf.l.wrap.b32 	%r884, %r882, %r882, 13;
	xor.b32  	%r885, %r883, %r884;
	shr.u32 	%r886, %r882, 10;
	xor.b32  	%r887, %r885, %r886;
	add.s32 	%r888, %r799, %r696;
	add.s32 	%r889, %r888, %r881;
	shf.l.wrap.b32 	%r890, %r726, %r726, 25;
	shf.l.wrap.b32 	%r891, %r726, %r726, 14;
	xor.b32  	%r892, %r890, %r891;
	shr.u32 	%r893, %r726, 3;
	xor.b32  	%r894, %r892, %r893;
	add.s32 	%r895, %r876, %r874;
	shf.l.wrap.b32 	%r896, %r895, %r895, 15;
	shf.l.wrap.b32 	%r897, %r895, %r895, 13;
	xor.b32  	%r898, %r896, %r897;
	shr.u32 	%r899, %r895, 10;
	xor.b32  	%r900, %r898, %r899;
	add.s32 	%r901, %r830, %r695;
	add.s32 	%r902, %r901, %r894;
	add.s32 	%r903, %r902, %r900;
	add.s32 	%r904, %r889, %r887;
	st.local.v4.u32 	[%rd56+176], {%r882, %r895, %r904, %r903};
	shf.l.wrap.b32 	%r905, %r739, %r739, 25;
	shf.l.wrap.b32 	%r906, %r739, %r739, 14;
	xor.b32  	%r907, %r905, %r906;
	shr.u32 	%r908, %r739, 3;
	xor.b32  	%r909, %r907, %r908;
	shf.l.wrap.b32 	%r910, %r904, %r904, 15;
	shf.l.wrap.b32 	%r911, %r904, %r904, 13;
	xor.b32  	%r912, %r910, %r911;
	shr.u32 	%r913, %r904, 10;
	xor.b32  	%r914, %r912, %r913;
	add.s32 	%r915, %r843, %r726;
	add.s32 	%r916, %r915, %r909;
	shf.l.wrap.b32 	%r917, %r748, %r748, 25;
	shf.l.wrap.b32 	%r918, %r748, %r748, 14;
	xor.b32  	%r919, %r917, %r918;
	shr.u32 	%r920, %r748, 3;
	xor.b32  	%r921, %r919, %r920;
	shf.l.wrap.b32 	%r922, %r903, %r903, 15;
	shf.l.wrap.b32 	%r923, %r903, %r903, 13;
	xor.b32  	%r924, %r922, %r923;
	shr.u32 	%r925, %r903, 10;
	xor.b32  	%r926, %r924, %r925;
	add.s32 	%r927, %r852, %r739;
	add.s32 	%r928, %r927, %r921;
	shf.l.wrap.b32 	%r929, %r747, %r747, 25;
	shf.l.wrap.b32 	%r930, %r747, %r747, 14;
	xor.b32  	%r931, %r929, %r930;
	shr.u32 	%r932, %r747, 3;
	xor.b32  	%r933, %r931, %r932;
	add.s32 	%r934, %r916, %r914;
	shf.l.wrap.b32 	%r935, %r934, %r934, 15;
	shf.l.wrap.b32 	%r936, %r934, %r934, 13;
	xor.b32  	%r937, %r935, %r936;
	shr.u32 	%r938, %r934, 10;
	xor.b32  	%r939, %r937, %r938;
	add.s32 	%r940, %r851, %r748;
	add.s32 	%r941, %r940, %r933;
	shf.l.wrap.b32 	%r942, %r778, %r778, 25;
	shf.l.wrap.b32 	%r943, %r778, %r778, 14;
	xor.b32  	%r944, %r942, %r943;
	shr.u32 	%r945, %r778, 3;
	xor.b32  	%r946, %r944, %r945;
	add.s32 	%r947, %r928, %r926;
	shf.l.wrap.b32 	%r948, %r947, %r947, 15;
	shf.l.wrap.b32 	%r949, %r947, %r947, 13;
	xor.b32  	%r950, %r948, %r949;
	shr.u32 	%r951, %r947, 10;
	xor.b32  	%r952, %r950, %r951;
	add.s32 	%r953, %r882, %r747;
	add.s32 	%r954, %r953, %r946;
	add.s32 	%r955, %r954, %r952;
	add.s32 	%r956, %r941, %r939;
	st.local.v4.u32 	[%rd56+192], {%r934, %r947, %r956, %r955};
	shf.l.wrap.b32 	%r957, %r791, %r791, 25;
	shf.l.wrap.b32 	%r958, %r791, %r791, 14;
	xor.b32  	%r959, %r957, %r958;
	shr.u32 	%r960, %r791, 3;
	xor.b32  	%r961, %r959, %r960;
	shf.l.wrap.b32 	%r962, %r956, %r956, 15;
	shf.l.wrap.b32 	%r963, %r956, %r956, 13;
	xor.b32  	%r964, %r962, %r963;
	shr.u32 	%r965, %r956, 10;
	xor.b32  	%r966, %r964, %r965;
	add.s32 	%r967, %r895, %r778;
	add.s32 	%r968, %r967, %r961;
	shf.l.wrap.b32 	%r969, %r800, %r800, 25;
	shf.l.wrap.b32 	%r970, %r800, %r800, 14;
	xor.b32  	%r971, %r969, %r970;
	shr.u32 	%r972, %r800, 3;
	xor.b32  	%r973, %r971, %r972;
	shf.l.wrap.b32 	%r974, %r955, %r955, 15;
	shf.l.wrap.b32 	%r975, %r955, %r955, 13;
	xor.b32  	%r976, %r974, %r975;
	shr.u32 	%r977, %r955, 10;
	xor.b32  	%r978, %r976, %r977;
	add.s32 	%r979, %r904, %r791;
	add.s32 	%r980, %r979, %r973;
	shf.l.wrap.b32 	%r981, %r799, %r799, 25;
	shf.l.wrap.b32 	%r982, %r799, %r799, 14;
	xor.b32  	%r983, %r981, %r982;
	shr.u32 	%r984, %r799, 3;
	xor.b32  	%r985, %r983, %r984;
	add.s32 	%r986, %r968, %r966;
	shf.l.wrap.b32 	%r987, %r986, %r986, 15;
	shf.l.wrap.b32 	%r988, %r986, %r986, 13;
	xor.b32  	%r989, %r987, %r988;
	shr.u32 	%r990, %r986, 10;
	xor.b32  	%r991, %r989, %r990;
	add.s32 	%r992, %r903, %r800;
	add.s32 	%r993, %r992, %r985;
	shf.l.wrap.b32 	%r994, %r830, %r830, 25;
	shf.l.wrap.b32 	%r995, %r830, %r830, 14;
	xor.b32  	%r996, %r994, %r995;
	shr.u32 	%r997, %r830, 3;
	xor.b32  	%r998, %r996, %r997;
	add.s32 	%r999, %r980, %r978;
	shf.l.wrap.b32 	%r1000, %r999, %r999, 15;
	shf.l.wrap.b32 	%r1001, %r999, %r999, 13;
	xor.b32  	%r1002, %r1000, %r1001;
	shr.u32 	%r1003, %r999, 10;
	xor.b32  	%r1004, %r1002, %r1003;
	add.s32 	%r1005, %r934, %r799;
	add.s32 	%r1006, %r1005, %r998;
	add.s32 	%r1007, %r1006, %r1004;
	add.s32 	%r1008, %r993, %r991;
	st.local.v4.u32 	[%rd56+208], {%r986, %r999, %r1008, %r1007};
	shf.l.wrap.b32 	%r1009, %r843, %r843, 25;
	shf.l.wrap.b32 	%r1010, %r843, %r843, 14;
	xor.b32  	%r1011, %r1009, %r1010;
	shr.u32 	%r1012, %r843, 3;
	xor.b32  	%r1013, %r1011, %r1012;
	shf.l.wrap.b32 	%r1014, %r1008, %r1008, 15;
	shf.l.wrap.b32 	%r1015, %r1008, %r1008, 13;
	xor.b32  	%r1016, %r1014, %r1015;
	shr.u32 	%r1017, %r1008, 10;
	xor.b32  	%r1018, %r1016, %r1017;
	add.s32 	%r1019, %r947, %r830;
	add.s32 	%r1020, %r1019, %r1013;
	shf.l.wrap.b32 	%r1021, %r852, %r852, 25;
	shf.l.wrap.b32 	%r1022, %r852, %r852, 14;
	xor.b32  	%r1023, %r1021, %r1022;
	shr.u32 	%r1024, %r852, 3;
	xor.b32  	%r1025, %r1023, %r1024;
	shf.l.wrap.b32 	%r1026, %r1007, %r1007, 15;
	shf.l.wrap.b32 	%r1027, %r1007, %r1007, 13;
	xor.b32  	%r1028, %r1026, %r1027;
	shr.u32 	%r1029, %r1007, 10;
	xor.b32  	%r1030, %r1028, %r1029;
	add.s32 	%r1031, %r956, %r843;
	add.s32 	%r1032, %r1031, %r1025;
	shf.l.wrap.b32 	%r1033, %r851, %r851, 25;
	shf.l.wrap.b32 	%r1034, %r851, %r851, 14;
	xor.b32  	%r1035, %r1033, %r1034;
	shr.u32 	%r1036, %r851, 3;
	xor.b32  	%r1037, %r1035, %r1036;
	add.s32 	%r1038, %r1020, %r1018;
	shf.l.wrap.b32 	%r1039, %r1038, %r1038, 15;
	shf.l.wrap.b32 	%r1040, %r1038, %r1038, 13;
	xor.b32  	%r1041, %r1039, %r1040;
	shr.u32 	%r1042, %r1038, 10;
	xor.b32  	%r1043, %r1041, %r1042;
	add.s32 	%r1044, %r955, %r852;
	add.s32 	%r1045, %r1044, %r1037;
	shf.l.wrap.b32 	%r1046, %r882, %r882, 25;
	shf.l.wrap.b32 	%r1047, %r882, %r882, 14;
	xor.b32  	%r1048, %r1046, %r1047;
	shr.u32 	%r1049, %r882, 3;
	xor.b32  	%r1050, %r1048, %r1049;
	add.s32 	%r1051, %r1032, %r1030;
	shf.l.wrap.b32 	%r1052, %r1051, %r1051, 15;
	shf.l.wrap.b32 	%r1053, %r1051, %r1051, 13;
	xor.b32  	%r1054, %r1052, %r1053;
	shr.u32 	%r1055, %r1051, 10;
	xor.b32  	%r1056, %r1054, %r1055;
	add.s32 	%r1057, %r986, %r851;
	add.s32 	%r1058, %r1057, %r1050;
	add.s32 	%r1059, %r1058, %r1056;
	add.s32 	%r1060, %r1045, %r1043;
	st.local.v4.u32 	[%rd56+224], {%r1038, %r1051, %r1060, %r1059};
	ld.local.u32 	%r5, [%rd5+-12];
	ld.local.v2.u32 	{%r1061, %r1062}, [%rd5+-8];
	ld.local.v4.u32 	{%r1063, %r1064, %r1065, %r1066}, [%rd5];
	ld.local.u32 	%r12, [%rd5+16];
	mov.u32 	%r2205, -64;
	mov.u64 	%rd64, k;
	mov.u64 	%rd65, %rd2;
	mov.u32 	%r2207, %r5;
	mov.u32 	%r2208, %r1061;
	mov.u32 	%r2209, %r1062;
	mov.u32 	%r2210, %r1063;
	mov.u32 	%r2211, %r1064;
	mov.u32 	%r2212, %r1065;
	mov.u32 	%r2213, %r1066;
	mov.u32 	%r2214, %r12;
	bra.uni 	BB1_3;

BB1_4:
	add.s64 	%rd10, %rd65, 16;
	ld.local.u32 	%r2206, [%rd65+16];
	add.s64 	%rd64, %rd64, 16;
	mov.u64 	%rd65, %rd10;

BB1_3:
	shf.l.wrap.b32 	%r1067, %r2211, %r2211, 26;
	shf.l.wrap.b32 	%r1068, %r2211, %r2211, 21;
	xor.b32  	%r1069, %r1067, %r1068;
	shf.l.wrap.b32 	%r1070, %r2211, %r2211, 7;
	xor.b32  	%r1071, %r1069, %r1070;
	not.b32 	%r1072, %r2211;
	and.b32  	%r1073, %r2213, %r1072;
	and.b32  	%r1074, %r2211, %r2212;
	xor.b32  	%r1075, %r1074, %r1073;
	add.s32 	%r1076, %r1075, %r2214;
	add.s32 	%r1077, %r1076, %r1071;
	ld.const.u32 	%r1078, [%rd64];
	add.s32 	%r1079, %r1077, %r1078;
	add.s32 	%r1080, %r1079, %r2206;
	shf.l.wrap.b32 	%r1081, %r2207, %r2207, 30;
	shf.l.wrap.b32 	%r1082, %r2207, %r2207, 19;
	xor.b32  	%r1083, %r1081, %r1082;
	shf.l.wrap.b32 	%r1084, %r2207, %r2207, 10;
	xor.b32  	%r1085, %r1083, %r1084;
	xor.b32  	%r1086, %r2208, %r2209;
	and.b32  	%r1087, %r2207, %r1086;
	and.b32  	%r1088, %r2208, %r2209;
	xor.b32  	%r1089, %r1087, %r1088;
	add.s32 	%r1090, %r1085, %r1089;
	add.s32 	%r2214, %r1080, %r2210;
	add.s32 	%r2210, %r1090, %r1080;
	shf.l.wrap.b32 	%r1091, %r2214, %r2214, 26;
	shf.l.wrap.b32 	%r1092, %r2214, %r2214, 21;
	xor.b32  	%r1093, %r1091, %r1092;
	shf.l.wrap.b32 	%r1094, %r2214, %r2214, 7;
	xor.b32  	%r1095, %r1093, %r1094;
	and.b32  	%r1096, %r2214, %r2211;
	not.b32 	%r1097, %r2214;
	and.b32  	%r1098, %r2212, %r1097;
	xor.b32  	%r1099, %r1096, %r1098;
	add.s32 	%r1100, %r1099, %r2213;
	add.s32 	%r1101, %r1100, %r1095;
	ld.const.u32 	%r1102, [%rd64+4];
	add.s32 	%r1103, %r1101, %r1102;
	ld.local.u32 	%r1104, [%rd65+4];
	add.s32 	%r1105, %r1103, %r1104;
	shf.l.wrap.b32 	%r1106, %r2210, %r2210, 30;
	shf.l.wrap.b32 	%r1107, %r2210, %r2210, 19;
	xor.b32  	%r1108, %r1106, %r1107;
	shf.l.wrap.b32 	%r1109, %r2210, %r2210, 10;
	xor.b32  	%r1110, %r1108, %r1109;
	xor.b32  	%r1111, %r2207, %r2208;
	and.b32  	%r1112, %r2210, %r1111;
	and.b32  	%r1113, %r2207, %r2208;
	xor.b32  	%r1114, %r1112, %r1113;
	add.s32 	%r1115, %r1110, %r1114;
	add.s32 	%r2213, %r1105, %r2209;
	add.s32 	%r2209, %r1115, %r1105;
	shf.l.wrap.b32 	%r1116, %r2213, %r2213, 26;
	shf.l.wrap.b32 	%r1117, %r2213, %r2213, 21;
	xor.b32  	%r1118, %r1116, %r1117;
	shf.l.wrap.b32 	%r1119, %r2213, %r2213, 7;
	xor.b32  	%r1120, %r1118, %r1119;
	and.b32  	%r1121, %r2213, %r2214;
	not.b32 	%r1122, %r2213;
	and.b32  	%r1123, %r2211, %r1122;
	xor.b32  	%r1124, %r1121, %r1123;
	add.s32 	%r1125, %r1124, %r2212;
	add.s32 	%r1126, %r1125, %r1120;
	ld.const.u32 	%r1127, [%rd64+8];
	add.s32 	%r1128, %r1126, %r1127;
	ld.local.v2.u32 	{%r1129, %r1130}, [%rd65+8];
	add.s32 	%r1132, %r1128, %r1129;
	shf.l.wrap.b32 	%r1133, %r2209, %r2209, 30;
	shf.l.wrap.b32 	%r1134, %r2209, %r2209, 19;
	xor.b32  	%r1135, %r1133, %r1134;
	shf.l.wrap.b32 	%r1136, %r2209, %r2209, 10;
	xor.b32  	%r1137, %r1135, %r1136;
	xor.b32  	%r1138, %r2210, %r2207;
	and.b32  	%r1139, %r2209, %r1138;
	and.b32  	%r1140, %r2210, %r2207;
	xor.b32  	%r1141, %r1139, %r1140;
	add.s32 	%r1142, %r1137, %r1141;
	add.s32 	%r2212, %r1132, %r2208;
	add.s32 	%r2208, %r1142, %r1132;
	shf.l.wrap.b32 	%r1143, %r2212, %r2212, 26;
	shf.l.wrap.b32 	%r1144, %r2212, %r2212, 21;
	xor.b32  	%r1145, %r1143, %r1144;
	shf.l.wrap.b32 	%r1146, %r2212, %r2212, 7;
	xor.b32  	%r1147, %r1145, %r1146;
	and.b32  	%r1148, %r2212, %r2213;
	not.b32 	%r1149, %r2212;
	and.b32  	%r1150, %r2214, %r1149;
	xor.b32  	%r1151, %r1148, %r1150;
	add.s32 	%r1152, %r1151, %r2211;
	add.s32 	%r1153, %r1152, %r1147;
	ld.const.u32 	%r1154, [%rd64+12];
	add.s32 	%r1155, %r1153, %r1154;
	add.s32 	%r1157, %r1155, %r1130;
	shf.l.wrap.b32 	%r1158, %r2208, %r2208, 30;
	shf.l.wrap.b32 	%r1159, %r2208, %r2208, 19;
	xor.b32  	%r1160, %r1158, %r1159;
	shf.l.wrap.b32 	%r1161, %r2208, %r2208, 10;
	xor.b32  	%r1162, %r1160, %r1161;
	xor.b32  	%r1163, %r2209, %r2210;
	and.b32  	%r1164, %r2208, %r1163;
	and.b32  	%r1165, %r2209, %r2210;
	xor.b32  	%r1166, %r1164, %r1165;
	add.s32 	%r1167, %r1162, %r1166;
	add.s32 	%r2211, %r1157, %r2207;
	add.s32 	%r2207, %r1167, %r1157;
	add.s32 	%r2205, %r2205, 4;
	setp.eq.s32	%p2, %r2205, 0;
	@%p2 bra 	BB1_5;
	bra.uni 	BB1_4;

BB1_5:
	add.s32 	%r1169, %r5, %r2207;
	st.local.u32 	[%rd5+-12], %r1169;
	add.s32 	%r1170, %r1062, %r2209;
	add.s32 	%r1171, %r1061, %r2208;
	st.local.v2.u32 	[%rd5+-8], {%r1171, %r1170};
	add.s32 	%r1172, %r1066, %r2213;
	add.s32 	%r1173, %r1065, %r2212;
	add.s32 	%r1174, %r1064, %r2211;
	add.s32 	%r1175, %r1063, %r2210;
	st.local.v4.u32 	[%rd5], {%r1175, %r1174, %r1173, %r1172};
	add.s32 	%r1176, %r12, %r2214;
	st.local.u32 	[%rd5+16], %r1176;
	mov.u32 	%r2215, 0;
	st.local.u32 	[%rd5+-16], %r2215;

BB1_6:
	add.s32 	%r2204, %r2204, 1;
	setp.lt.u32	%p3, %r2204, 64;
	@%p3 bra 	BB1_15;

	mov.u64 	%rd54, 0;
	mov.u16 	%rs84, 0;
	st.local.v4.u8 	[%rd3+4], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+8], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+12], {%rs84, %rs84, %rs84, %rs84};
	mov.u32 	%r2217, 0;
	st.local.v4.u8 	[%rd3+64], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+68], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+72], {%rs84, %rs84, %rs84, %rs84};
	st.local.v4.u8 	[%rd3+76], {%rs84, %rs84, %rs84, %rs84};
	mov.u16 	%rs85, 128;
	st.local.v4.u8 	[%rd3], {%rs85, %rs84, %rs84, %rs84};
	st.local.v4.u32 	[%rd3+16], {%r2217, %r2217, %r2217, %r2217};
	st.local.v4.u32 	[%rd3+32], {%r2217, %r2217, %r2217, %r2217};
	st.local.v4.u32 	[%rd3+48], {%r2217, %r2217, %r2217, %r2217};
	st.local.v4.u32 	[%rd3+80], {%r2217, %r2217, %r2217, %r2217};
	st.local.v4.u32 	[%rd3+96], {%r2217, %r2217, %r2217, %r2217};
	st.local.v4.u32 	[%rd3+112], {%r2217, %r2217, %r2217, %r2217};
	setp.lt.u32	%p4, %r2215, 56;
	selp.b32	%r1178, 64, 120, %p4;
	sub.s32 	%r35, %r1178, %r2215;
	ld.local.u64 	%rd30, [%rd5+32];
	cvt.s64.s32	%rd31, %r35;
	add.s64 	%rd32, %rd3, %rd31;
	st.local.u8 	[%rd32+-1], %rd30;
	cvt.u16.u64	%rs86, %rd30;
	shr.u16 	%rs87, %rs86, 8;
	st.local.u8 	[%rd32+-2], %rs87;
	shr.u64 	%rd33, %rd30, 16;
	st.local.u8 	[%rd32+-3], %rd33;
	shr.u64 	%rd34, %rd30, 24;
	st.local.u8 	[%rd32+-4], %rd34;
	shr.u64 	%rd35, %rd30, 32;
	st.local.u8 	[%rd32+-5], %rd35;
	shr.u64 	%rd36, %rd30, 40;
	st.local.u8 	[%rd32+-6], %rd36;
	shr.u64 	%rd37, %rd30, 48;
	st.local.u8 	[%rd32+-7], %rd37;
	shr.u64 	%rd38, %rd30, 56;
	st.local.u8 	[%rd32+-8], %rd38;
	and.b64  	%rd40, %rd30, 4294967295;
	mul.wide.s32 	%rd41, %r35, 8;
	add.s64 	%rd42, %rd40, %rd41;
	st.local.u64 	[%rd5+40], %rd54;
	st.local.u64 	[%rd5+32], %rd42;
	setp.eq.s32	%p5, %r1178, %r2215;
	@%p5 bra 	BB1_14;

BB1_8:
	add.u64 	%rd61, %SPL, 128;
	cvt.s64.s32	%rd43, %r2217;
	add.s64 	%rd44, %rd61, %rd43;
	ld.local.u8 	%rs88, [%rd44];
	cvt.u64.u32	%rd45, %r2215;
	add.s64 	%rd46, %rd4, %rd45;
	st.local.u8 	[%rd46], %rs88;
	ld.local.u32 	%r1180, [%rd5+-16];
	add.s32 	%r2215, %r1180, 1;
	st.local.u32 	[%rd5+-16], %r2215;
	setp.ne.s32	%p6, %r2215, 64;
	@%p6 bra 	BB1_13;

	add.u64 	%rd67, %SPL, 256;
	add.s64 	%rd55, %rd67, 16;
	ld.local.v4.u32 	{%r1182, %r1183, %r1184, %r1185}, [%rd4];
	mov.b32	{%rs89, %rs90}, %r1182;
	shr.u16 	%rs91, %rs89, 8;
	shr.u16 	%rs92, %rs90, 8;
	mov.b32	{%rs93, %rs94}, %r1183;
	shr.u16 	%rs95, %rs93, 8;
	shr.u16 	%rs96, %rs94, 8;
	mov.b32	{%rs97, %rs98}, %r1184;
	shr.u16 	%rs99, %rs97, 8;
	shr.u16 	%rs100, %rs98, 8;
	mov.b32	{%rs101, %rs102}, %r1185;
	shr.u16 	%rs103, %rs101, 8;
	shr.u16 	%rs104, %rs102, 8;
	cvt.u32.u16	%r1190, %rs89;
	shl.b32 	%r1191, %r1190, 24;
	cvt.u32.u16	%r1192, %rs91;
	shl.b32 	%r1193, %r1192, 16;
	or.b32  	%r1194, %r1193, %r1191;
	and.b16  	%rs105, %rs90, 255;
	mul.wide.u16 	%r1195, %rs105, 256;
	or.b32  	%r1196, %r1194, %r1195;
	cvt.u32.u16	%r1197, %rs92;
	or.b32  	%r2219, %r1196, %r1197;
	cvt.u32.u16	%r1198, %rs93;
	shl.b32 	%r1199, %r1198, 24;
	cvt.u32.u16	%r1200, %rs95;
	shl.b32 	%r1201, %r1200, 16;
	or.b32  	%r1202, %r1201, %r1199;
	and.b16  	%rs106, %rs94, 255;
	mul.wide.u16 	%r1203, %rs106, 256;
	or.b32  	%r1204, %r1202, %r1203;
	cvt.u32.u16	%r1205, %rs96;
	cvt.u32.u16	%r1206, %rs97;
	shl.b32 	%r1207, %r1206, 24;
	cvt.u32.u16	%r1208, %rs99;
	shl.b32 	%r1209, %r1208, 16;
	or.b32  	%r1210, %r1209, %r1207;
	and.b16  	%rs107, %rs98, 255;
	mul.wide.u16 	%r1211, %rs107, 256;
	or.b32  	%r1212, %r1210, %r1211;
	cvt.u32.u16	%r1213, %rs100;
	cvt.u32.u16	%r1214, %rs101;
	shl.b32 	%r1215, %r1214, 24;
	cvt.u32.u16	%r1216, %rs103;
	shl.b32 	%r1217, %r1216, 16;
	or.b32  	%r1218, %r1217, %r1215;
	and.b16  	%rs108, %rs102, 255;
	mul.wide.u16 	%r1219, %rs108, 256;
	or.b32  	%r1220, %r1218, %r1219;
	cvt.u32.u16	%r1221, %rs104;
	or.b32  	%r1222, %r1220, %r1221;
	or.b32  	%r1223, %r1212, %r1213;
	or.b32  	%r1224, %r1204, %r1205;
	add.u64 	%rd51, %SPL, 256;
	st.local.v4.u32 	[%rd51], {%r2219, %r1224, %r1223, %r1222};
	ld.local.v4.u32 	{%r1225, %r1226, %r1227, %r1228}, [%rd5+-64];
	mov.b32	{%rs109, %rs110}, %r1225;
	shr.u16 	%rs111, %rs109, 8;
	shr.u16 	%rs112, %rs110, 8;
	mov.b32	{%rs113, %rs114}, %r1226;
	shr.u16 	%rs115, %rs113, 8;
	shr.u16 	%rs116, %rs114, 8;
	mov.b32	{%rs117, %rs118}, %r1227;
	shr.u16 	%rs119, %rs117, 8;
	shr.u16 	%rs120, %rs118, 8;
	mov.b32	{%rs121, %rs122}, %r1228;
	shr.u16 	%rs123, %rs121, 8;
	shr.u16 	%rs124, %rs122, 8;
	cvt.u32.u16	%r1233, %rs109;
	shl.b32 	%r1234, %r1233, 24;
	cvt.u32.u16	%r1235, %rs111;
	shl.b32 	%r1236, %r1235, 16;
	or.b32  	%r1237, %r1236, %r1234;
	and.b16  	%rs125, %rs110, 255;
	mul.wide.u16 	%r1238, %rs125, 256;
	or.b32  	%r1239, %r1237, %r1238;
	cvt.u32.u16	%r1240, %rs112;
	cvt.u32.u16	%r1241, %rs113;
	shl.b32 	%r1242, %r1241, 24;
	cvt.u32.u16	%r1243, %rs115;
	shl.b32 	%r1244, %r1243, 16;
	or.b32  	%r1245, %r1244, %r1242;
	and.b16  	%rs126, %rs114, 255;
	mul.wide.u16 	%r1246, %rs126, 256;
	or.b32  	%r1247, %r1245, %r1246;
	cvt.u32.u16	%r1248, %rs116;
	cvt.u32.u16	%r1249, %rs117;
	shl.b32 	%r1250, %r1249, 24;
	cvt.u32.u16	%r1251, %rs119;
	shl.b32 	%r1252, %r1251, 16;
	or.b32  	%r1253, %r1252, %r1250;
	and.b16  	%rs127, %rs118, 255;
	mul.wide.u16 	%r1254, %rs127, 256;
	or.b32  	%r1255, %r1253, %r1254;
	cvt.u32.u16	%r1256, %rs120;
	cvt.u32.u16	%r1257, %rs121;
	shl.b32 	%r1258, %r1257, 24;
	cvt.u32.u16	%r1259, %rs123;
	shl.b32 	%r1260, %r1259, 16;
	or.b32  	%r1261, %r1260, %r1258;
	and.b16  	%rs128, %rs122, 255;
	mul.wide.u16 	%r1262, %rs128, 256;
	or.b32  	%r1263, %r1261, %r1262;
	cvt.u32.u16	%r1264, %rs124;
	or.b32  	%r1265, %r1263, %r1264;
	or.b32  	%r1266, %r1255, %r1256;
	or.b32  	%r1267, %r1247, %r1248;
	or.b32  	%r1268, %r1239, %r1240;
	st.local.v4.u32 	[%rd55], {%r1268, %r1267, %r1266, %r1265};
	ld.local.v4.u32 	{%r1269, %r1270, %r1271, %r1272}, [%rd5+-48];
	mov.b32	{%rs129, %rs130}, %r1269;
	shr.u16 	%rs131, %rs129, 8;
	shr.u16 	%rs132, %rs130, 8;
	mov.b32	{%rs133, %rs134}, %r1270;
	shr.u16 	%rs135, %rs133, 8;
	shr.u16 	%rs136, %rs134, 8;
	mov.b32	{%rs137, %rs138}, %r1271;
	shr.u16 	%rs139, %rs137, 8;
	shr.u16 	%rs140, %rs138, 8;
	mov.b32	{%rs141, %rs142}, %r1272;
	shr.u16 	%rs143, %rs141, 8;
	shr.u16 	%rs144, %rs142, 8;
	cvt.u32.u16	%r1277, %rs129;
	shl.b32 	%r1278, %r1277, 24;
	cvt.u32.u16	%r1279, %rs131;
	shl.b32 	%r1280, %r1279, 16;
	or.b32  	%r1281, %r1280, %r1278;
	and.b16  	%rs145, %rs130, 255;
	mul.wide.u16 	%r1282, %rs145, 256;
	or.b32  	%r1283, %r1281, %r1282;
	cvt.u32.u16	%r1284, %rs132;
	cvt.u32.u16	%r1285, %rs133;
	shl.b32 	%r1286, %r1285, 24;
	cvt.u32.u16	%r1287, %rs135;
	shl.b32 	%r1288, %r1287, 16;
	or.b32  	%r1289, %r1288, %r1286;
	and.b16  	%rs146, %rs134, 255;
	mul.wide.u16 	%r1290, %rs146, 256;
	or.b32  	%r1291, %r1289, %r1290;
	cvt.u32.u16	%r1292, %rs136;
	cvt.u32.u16	%r1293, %rs137;
	shl.b32 	%r1294, %r1293, 24;
	cvt.u32.u16	%r1295, %rs139;
	shl.b32 	%r1296, %r1295, 16;
	or.b32  	%r1297, %r1296, %r1294;
	and.b16  	%rs147, %rs138, 255;
	mul.wide.u16 	%r1298, %rs147, 256;
	or.b32  	%r1299, %r1297, %r1298;
	cvt.u32.u16	%r1300, %rs140;
	cvt.u32.u16	%r1301, %rs141;
	shl.b32 	%r1302, %r1301, 24;
	cvt.u32.u16	%r1303, %rs143;
	shl.b32 	%r1304, %r1303, 16;
	or.b32  	%r1305, %r1304, %r1302;
	and.b16  	%rs148, %rs142, 255;
	mul.wide.u16 	%r1306, %rs148, 256;
	or.b32  	%r1307, %r1305, %r1306;
	cvt.u32.u16	%r1308, %rs144;
	or.b32  	%r1309, %r1307, %r1308;
	or.b32  	%r1310, %r1299, %r1300;
	or.b32  	%r1311, %r1291, %r1292;
	or.b32  	%r1312, %r1283, %r1284;
	st.local.v4.u32 	[%rd55+16], {%r1312, %r1311, %r1310, %r1309};
	ld.local.v4.u32 	{%r1313, %r1314, %r1315, %r1316}, [%rd5+-32];
	mov.b32	{%rs149, %rs150}, %r1313;
	shr.u16 	%rs151, %rs149, 8;
	shr.u16 	%rs152, %rs150, 8;
	mov.b32	{%rs153, %rs154}, %r1314;
	shr.u16 	%rs155, %rs153, 8;
	shr.u16 	%rs156, %rs154, 8;
	mov.b32	{%rs157, %rs158}, %r1315;
	shr.u16 	%rs159, %rs157, 8;
	shr.u16 	%rs160, %rs158, 8;
	mov.b32	{%rs161, %rs162}, %r1316;
	shr.u16 	%rs163, %rs161, 8;
	shr.u16 	%rs164, %rs162, 8;
	cvt.u32.u16	%r1321, %rs149;
	shl.b32 	%r1322, %r1321, 24;
	cvt.u32.u16	%r1323, %rs151;
	shl.b32 	%r1324, %r1323, 16;
	or.b32  	%r1325, %r1324, %r1322;
	and.b16  	%rs165, %rs150, 255;
	mul.wide.u16 	%r1326, %rs165, 256;
	or.b32  	%r1327, %r1325, %r1326;
	cvt.u32.u16	%r1328, %rs152;
	cvt.u32.u16	%r1329, %rs153;
	shl.b32 	%r1330, %r1329, 24;
	cvt.u32.u16	%r1331, %rs155;
	shl.b32 	%r1332, %r1331, 16;
	or.b32  	%r1333, %r1332, %r1330;
	and.b16  	%rs166, %rs154, 255;
	mul.wide.u16 	%r1334, %rs166, 256;
	or.b32  	%r1335, %r1333, %r1334;
	cvt.u32.u16	%r1336, %rs156;
	cvt.u32.u16	%r1337, %rs157;
	shl.b32 	%r1338, %r1337, 24;
	cvt.u32.u16	%r1339, %rs159;
	shl.b32 	%r1340, %r1339, 16;
	or.b32  	%r1341, %r1340, %r1338;
	and.b16  	%rs167, %rs158, 255;
	mul.wide.u16 	%r1342, %rs167, 256;
	or.b32  	%r1343, %r1341, %r1342;
	cvt.u32.u16	%r1344, %rs160;
	cvt.u32.u16	%r1345, %rs161;
	shl.b32 	%r1346, %r1345, 24;
	cvt.u32.u16	%r1347, %rs163;
	shl.b32 	%r1348, %r1347, 16;
	or.b32  	%r1349, %r1348, %r1346;
	and.b16  	%rs168, %rs162, 255;
	mul.wide.u16 	%r1350, %rs168, 256;
	or.b32  	%r1351, %r1349, %r1350;
	cvt.u32.u16	%r1352, %rs164;
	or.b32  	%r1353, %r1351, %r1352;
	or.b32  	%r1354, %r1343, %r1344;
	or.b32  	%r1355, %r1335, %r1336;
	or.b32  	%r1356, %r1327, %r1328;
	st.local.v4.u32 	[%rd55+32], {%r1356, %r1355, %r1354, %r1353};
	shr.u32 	%r1357, %r1224, 7;
	shl.b32 	%r1358, %r1205, 25;
	or.b32  	%r1359, %r1357, %r1358;
	shr.u32 	%r1360, %r1202, 18;
	shl.b32 	%r1361, %r1224, 14;
	or.b32  	%r1362, %r1360, %r1361;
	xor.b32  	%r1363, %r1359, %r1362;
	shr.u32 	%r1364, %r1224, 3;
	xor.b32  	%r1365, %r1363, %r1364;
	shr.u32 	%r1366, %r1341, 17;
	shl.b32 	%r1367, %r1354, 15;
	or.b32  	%r1368, %r1366, %r1367;
	shr.u32 	%r1369, %r1341, 19;
	shl.b32 	%r1370, %r1354, 13;
	or.b32  	%r1371, %r1369, %r1370;
	xor.b32  	%r1372, %r1368, %r1371;
	shr.u32 	%r1373, %r1343, 10;
	xor.b32  	%r1374, %r1372, %r1373;
	add.s32 	%r1375, %r1311, %r2219;
	add.s32 	%r1376, %r1375, %r1365;
	shr.u32 	%r1377, %r1223, 7;
	shl.b32 	%r1378, %r1213, 25;
	or.b32  	%r1379, %r1377, %r1378;
	shr.u32 	%r1380, %r1210, 18;
	shl.b32 	%r1381, %r1223, 14;
	or.b32  	%r1382, %r1380, %r1381;
	xor.b32  	%r1383, %r1379, %r1382;
	shr.u32 	%r1384, %r1223, 3;
	xor.b32  	%r1385, %r1383, %r1384;
	shr.u32 	%r1386, %r1349, 17;
	shl.b32 	%r1387, %r1353, 15;
	or.b32  	%r1388, %r1386, %r1387;
	shr.u32 	%r1389, %r1349, 19;
	shl.b32 	%r1390, %r1353, 13;
	or.b32  	%r1391, %r1389, %r1390;
	xor.b32  	%r1392, %r1388, %r1391;
	shr.u32 	%r1393, %r1351, 10;
	xor.b32  	%r1394, %r1392, %r1393;
	add.s32 	%r1395, %r1310, %r1224;
	add.s32 	%r1396, %r1395, %r1385;
	shr.u32 	%r1397, %r1222, 7;
	shl.b32 	%r1398, %r1221, 25;
	or.b32  	%r1399, %r1397, %r1398;
	shr.u32 	%r1400, %r1218, 18;
	shl.b32 	%r1401, %r1222, 14;
	or.b32  	%r1402, %r1400, %r1401;
	xor.b32  	%r1403, %r1399, %r1402;
	shr.u32 	%r1404, %r1222, 3;
	xor.b32  	%r1405, %r1403, %r1404;
	add.s32 	%r1406, %r1376, %r1374;
	shf.l.wrap.b32 	%r1407, %r1406, %r1406, 15;
	shf.l.wrap.b32 	%r1408, %r1406, %r1406, 13;
	xor.b32  	%r1409, %r1407, %r1408;
	shr.u32 	%r1410, %r1406, 10;
	xor.b32  	%r1411, %r1409, %r1410;
	add.s32 	%r1412, %r1309, %r1223;
	add.s32 	%r1413, %r1412, %r1405;
	shr.u32 	%r1414, %r1268, 7;
	shl.b32 	%r1415, %r1240, 25;
	or.b32  	%r1416, %r1414, %r1415;
	shr.u32 	%r1417, %r1237, 18;
	shl.b32 	%r1418, %r1268, 14;
	or.b32  	%r1419, %r1417, %r1418;
	xor.b32  	%r1420, %r1416, %r1419;
	shr.u32 	%r1421, %r1268, 3;
	xor.b32  	%r1422, %r1420, %r1421;
	add.s32 	%r1423, %r1396, %r1394;
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 15;
	shf.l.wrap.b32 	%r1425, %r1423, %r1423, 13;
	xor.b32  	%r1426, %r1424, %r1425;
	shr.u32 	%r1427, %r1423, 10;
	xor.b32  	%r1428, %r1426, %r1427;
	add.s32 	%r1429, %r1356, %r1222;
	add.s32 	%r1430, %r1429, %r1422;
	add.s32 	%r1431, %r1430, %r1428;
	add.s32 	%r1432, %r1413, %r1411;
	st.local.v4.u32 	[%rd55+48], {%r1406, %r1423, %r1432, %r1431};
	shr.u32 	%r1433, %r1267, 7;
	shl.b32 	%r1434, %r1248, 25;
	or.b32  	%r1435, %r1433, %r1434;
	shr.u32 	%r1436, %r1245, 18;
	shl.b32 	%r1437, %r1267, 14;
	or.b32  	%r1438, %r1436, %r1437;
	xor.b32  	%r1439, %r1435, %r1438;
	shr.u32 	%r1440, %r1267, 3;
	xor.b32  	%r1441, %r1439, %r1440;
	shf.l.wrap.b32 	%r1442, %r1432, %r1432, 15;
	shf.l.wrap.b32 	%r1443, %r1432, %r1432, 13;
	xor.b32  	%r1444, %r1442, %r1443;
	shr.u32 	%r1445, %r1432, 10;
	xor.b32  	%r1446, %r1444, %r1445;
	add.s32 	%r1447, %r1355, %r1268;
	add.s32 	%r1448, %r1447, %r1441;
	shr.u32 	%r1449, %r1266, 7;
	shl.b32 	%r1450, %r1256, 25;
	or.b32  	%r1451, %r1449, %r1450;
	shr.u32 	%r1452, %r1253, 18;
	shl.b32 	%r1453, %r1266, 14;
	or.b32  	%r1454, %r1452, %r1453;
	xor.b32  	%r1455, %r1451, %r1454;
	shr.u32 	%r1456, %r1266, 3;
	xor.b32  	%r1457, %r1455, %r1456;
	shf.l.wrap.b32 	%r1458, %r1431, %r1431, 15;
	shf.l.wrap.b32 	%r1459, %r1431, %r1431, 13;
	xor.b32  	%r1460, %r1458, %r1459;
	shr.u32 	%r1461, %r1431, 10;
	xor.b32  	%r1462, %r1460, %r1461;
	add.s32 	%r1463, %r1354, %r1267;
	add.s32 	%r1464, %r1463, %r1457;
	shr.u32 	%r1465, %r1265, 7;
	shl.b32 	%r1466, %r1264, 25;
	or.b32  	%r1467, %r1465, %r1466;
	shr.u32 	%r1468, %r1261, 18;
	shl.b32 	%r1469, %r1265, 14;
	or.b32  	%r1470, %r1468, %r1469;
	xor.b32  	%r1471, %r1467, %r1470;
	shr.u32 	%r1472, %r1265, 3;
	xor.b32  	%r1473, %r1471, %r1472;
	add.s32 	%r1474, %r1448, %r1446;
	shf.l.wrap.b32 	%r1475, %r1474, %r1474, 15;
	shf.l.wrap.b32 	%r1476, %r1474, %r1474, 13;
	xor.b32  	%r1477, %r1475, %r1476;
	shr.u32 	%r1478, %r1474, 10;
	xor.b32  	%r1479, %r1477, %r1478;
	add.s32 	%r1480, %r1353, %r1266;
	add.s32 	%r1481, %r1480, %r1473;
	shr.u32 	%r1482, %r1312, 7;
	shl.b32 	%r1483, %r1284, 25;
	or.b32  	%r1484, %r1482, %r1483;
	shr.u32 	%r1485, %r1281, 18;
	shl.b32 	%r1486, %r1312, 14;
	or.b32  	%r1487, %r1485, %r1486;
	xor.b32  	%r1488, %r1484, %r1487;
	shr.u32 	%r1489, %r1312, 3;
	xor.b32  	%r1490, %r1488, %r1489;
	add.s32 	%r1491, %r1464, %r1462;
	shf.l.wrap.b32 	%r1492, %r1491, %r1491, 15;
	shf.l.wrap.b32 	%r1493, %r1491, %r1491, 13;
	xor.b32  	%r1494, %r1492, %r1493;
	shr.u32 	%r1495, %r1491, 10;
	xor.b32  	%r1496, %r1494, %r1495;
	add.s32 	%r1497, %r1406, %r1265;
	add.s32 	%r1498, %r1497, %r1490;
	add.s32 	%r1499, %r1498, %r1496;
	add.s32 	%r1500, %r1481, %r1479;
	st.local.v4.u32 	[%rd55+64], {%r1474, %r1491, %r1500, %r1499};
	shr.u32 	%r1501, %r1311, 7;
	shl.b32 	%r1502, %r1292, 25;
	or.b32  	%r1503, %r1501, %r1502;
	shr.u32 	%r1504, %r1289, 18;
	shl.b32 	%r1505, %r1311, 14;
	or.b32  	%r1506, %r1504, %r1505;
	xor.b32  	%r1507, %r1503, %r1506;
	shr.u32 	%r1508, %r1311, 3;
	xor.b32  	%r1509, %r1507, %r1508;
	shf.l.wrap.b32 	%r1510, %r1500, %r1500, 15;
	shf.l.wrap.b32 	%r1511, %r1500, %r1500, 13;
	xor.b32  	%r1512, %r1510, %r1511;
	shr.u32 	%r1513, %r1500, 10;
	xor.b32  	%r1514, %r1512, %r1513;
	add.s32 	%r1515, %r1423, %r1312;
	add.s32 	%r1516, %r1515, %r1509;
	shr.u32 	%r1517, %r1310, 7;
	shl.b32 	%r1518, %r1300, 25;
	or.b32  	%r1519, %r1517, %r1518;
	shr.u32 	%r1520, %r1297, 18;
	shl.b32 	%r1521, %r1310, 14;
	or.b32  	%r1522, %r1520, %r1521;
	xor.b32  	%r1523, %r1519, %r1522;
	shr.u32 	%r1524, %r1310, 3;
	xor.b32  	%r1525, %r1523, %r1524;
	shf.l.wrap.b32 	%r1526, %r1499, %r1499, 15;
	shf.l.wrap.b32 	%r1527, %r1499, %r1499, 13;
	xor.b32  	%r1528, %r1526, %r1527;
	shr.u32 	%r1529, %r1499, 10;
	xor.b32  	%r1530, %r1528, %r1529;
	add.s32 	%r1531, %r1432, %r1311;
	add.s32 	%r1532, %r1531, %r1525;
	shr.u32 	%r1533, %r1309, 7;
	shl.b32 	%r1534, %r1308, 25;
	or.b32  	%r1535, %r1533, %r1534;
	shr.u32 	%r1536, %r1305, 18;
	shl.b32 	%r1537, %r1309, 14;
	or.b32  	%r1538, %r1536, %r1537;
	xor.b32  	%r1539, %r1535, %r1538;
	shr.u32 	%r1540, %r1309, 3;
	xor.b32  	%r1541, %r1539, %r1540;
	add.s32 	%r1542, %r1516, %r1514;
	shf.l.wrap.b32 	%r1543, %r1542, %r1542, 15;
	shf.l.wrap.b32 	%r1544, %r1542, %r1542, 13;
	xor.b32  	%r1545, %r1543, %r1544;
	shr.u32 	%r1546, %r1542, 10;
	xor.b32  	%r1547, %r1545, %r1546;
	add.s32 	%r1548, %r1431, %r1310;
	add.s32 	%r1549, %r1548, %r1541;
	shr.u32 	%r1550, %r1356, 7;
	shl.b32 	%r1551, %r1328, 25;
	or.b32  	%r1552, %r1550, %r1551;
	shr.u32 	%r1553, %r1325, 18;
	shl.b32 	%r1554, %r1356, 14;
	or.b32  	%r1555, %r1553, %r1554;
	xor.b32  	%r1556, %r1552, %r1555;
	shr.u32 	%r1557, %r1356, 3;
	xor.b32  	%r1558, %r1556, %r1557;
	add.s32 	%r1559, %r1532, %r1530;
	shf.l.wrap.b32 	%r1560, %r1559, %r1559, 15;
	shf.l.wrap.b32 	%r1561, %r1559, %r1559, 13;
	xor.b32  	%r1562, %r1560, %r1561;
	shr.u32 	%r1563, %r1559, 10;
	xor.b32  	%r1564, %r1562, %r1563;
	add.s32 	%r1565, %r1474, %r1309;
	add.s32 	%r1566, %r1565, %r1558;
	add.s32 	%r1567, %r1566, %r1564;
	add.s32 	%r1568, %r1549, %r1547;
	st.local.v4.u32 	[%rd55+80], {%r1542, %r1559, %r1568, %r1567};
	shr.u32 	%r1569, %r1355, 7;
	shl.b32 	%r1570, %r1336, 25;
	or.b32  	%r1571, %r1569, %r1570;
	shr.u32 	%r1572, %r1333, 18;
	shl.b32 	%r1573, %r1355, 14;
	or.b32  	%r1574, %r1572, %r1573;
	xor.b32  	%r1575, %r1571, %r1574;
	shr.u32 	%r1576, %r1355, 3;
	xor.b32  	%r1577, %r1575, %r1576;
	shf.l.wrap.b32 	%r1578, %r1568, %r1568, 15;
	shf.l.wrap.b32 	%r1579, %r1568, %r1568, 13;
	xor.b32  	%r1580, %r1578, %r1579;
	shr.u32 	%r1581, %r1568, 10;
	xor.b32  	%r1582, %r1580, %r1581;
	add.s32 	%r1583, %r1491, %r1356;
	add.s32 	%r1584, %r1583, %r1577;
	shr.u32 	%r1585, %r1354, 7;
	shl.b32 	%r1586, %r1344, 25;
	or.b32  	%r1587, %r1585, %r1586;
	shr.u32 	%r1588, %r1341, 18;
	shl.b32 	%r1589, %r1354, 14;
	or.b32  	%r1590, %r1588, %r1589;
	xor.b32  	%r1591, %r1587, %r1590;
	shr.u32 	%r1592, %r1354, 3;
	xor.b32  	%r1593, %r1591, %r1592;
	shf.l.wrap.b32 	%r1594, %r1567, %r1567, 15;
	shf.l.wrap.b32 	%r1595, %r1567, %r1567, 13;
	xor.b32  	%r1596, %r1594, %r1595;
	shr.u32 	%r1597, %r1567, 10;
	xor.b32  	%r1598, %r1596, %r1597;
	add.s32 	%r1599, %r1500, %r1355;
	add.s32 	%r1600, %r1599, %r1593;
	shr.u32 	%r1601, %r1353, 7;
	shl.b32 	%r1602, %r1352, 25;
	or.b32  	%r1603, %r1601, %r1602;
	shr.u32 	%r1604, %r1349, 18;
	shl.b32 	%r1605, %r1353, 14;
	or.b32  	%r1606, %r1604, %r1605;
	xor.b32  	%r1607, %r1603, %r1606;
	shr.u32 	%r1608, %r1353, 3;
	xor.b32  	%r1609, %r1607, %r1608;
	add.s32 	%r1610, %r1584, %r1582;
	shf.l.wrap.b32 	%r1611, %r1610, %r1610, 15;
	shf.l.wrap.b32 	%r1612, %r1610, %r1610, 13;
	xor.b32  	%r1613, %r1611, %r1612;
	shr.u32 	%r1614, %r1610, 10;
	xor.b32  	%r1615, %r1613, %r1614;
	add.s32 	%r1616, %r1499, %r1354;
	add.s32 	%r1617, %r1616, %r1609;
	shf.l.wrap.b32 	%r1618, %r1406, %r1406, 25;
	shf.l.wrap.b32 	%r1619, %r1406, %r1406, 14;
	xor.b32  	%r1620, %r1618, %r1619;
	shr.u32 	%r1621, %r1406, 3;
	xor.b32  	%r1622, %r1620, %r1621;
	add.s32 	%r1623, %r1600, %r1598;
	shf.l.wrap.b32 	%r1624, %r1623, %r1623, 15;
	shf.l.wrap.b32 	%r1625, %r1623, %r1623, 13;
	xor.b32  	%r1626, %r1624, %r1625;
	shr.u32 	%r1627, %r1623, 10;
	xor.b32  	%r1628, %r1626, %r1627;
	add.s32 	%r1629, %r1542, %r1353;
	add.s32 	%r1630, %r1629, %r1622;
	add.s32 	%r1631, %r1630, %r1628;
	add.s32 	%r1632, %r1617, %r1615;
	st.local.v4.u32 	[%rd55+96], {%r1610, %r1623, %r1632, %r1631};
	shf.l.wrap.b32 	%r1633, %r1423, %r1423, 25;
	shf.l.wrap.b32 	%r1634, %r1423, %r1423, 14;
	xor.b32  	%r1635, %r1633, %r1634;
	shr.u32 	%r1636, %r1423, 3;
	xor.b32  	%r1637, %r1635, %r1636;
	shf.l.wrap.b32 	%r1638, %r1632, %r1632, 15;
	shf.l.wrap.b32 	%r1639, %r1632, %r1632, 13;
	xor.b32  	%r1640, %r1638, %r1639;
	shr.u32 	%r1641, %r1632, 10;
	xor.b32  	%r1642, %r1640, %r1641;
	add.s32 	%r1643, %r1559, %r1406;
	add.s32 	%r1644, %r1643, %r1637;
	shf.l.wrap.b32 	%r1645, %r1432, %r1432, 25;
	shf.l.wrap.b32 	%r1646, %r1432, %r1432, 14;
	xor.b32  	%r1647, %r1645, %r1646;
	shr.u32 	%r1648, %r1432, 3;
	xor.b32  	%r1649, %r1647, %r1648;
	shf.l.wrap.b32 	%r1650, %r1631, %r1631, 15;
	shf.l.wrap.b32 	%r1651, %r1631, %r1631, 13;
	xor.b32  	%r1652, %r1650, %r1651;
	shr.u32 	%r1653, %r1631, 10;
	xor.b32  	%r1654, %r1652, %r1653;
	add.s32 	%r1655, %r1568, %r1423;
	add.s32 	%r1656, %r1655, %r1649;
	shf.l.wrap.b32 	%r1657, %r1431, %r1431, 25;
	shf.l.wrap.b32 	%r1658, %r1431, %r1431, 14;
	xor.b32  	%r1659, %r1657, %r1658;
	shr.u32 	%r1660, %r1431, 3;
	xor.b32  	%r1661, %r1659, %r1660;
	add.s32 	%r1662, %r1644, %r1642;
	shf.l.wrap.b32 	%r1663, %r1662, %r1662, 15;
	shf.l.wrap.b32 	%r1664, %r1662, %r1662, 13;
	xor.b32  	%r1665, %r1663, %r1664;
	shr.u32 	%r1666, %r1662, 10;
	xor.b32  	%r1667, %r1665, %r1666;
	add.s32 	%r1668, %r1567, %r1432;
	add.s32 	%r1669, %r1668, %r1661;
	shf.l.wrap.b32 	%r1670, %r1474, %r1474, 25;
	shf.l.wrap.b32 	%r1671, %r1474, %r1474, 14;
	xor.b32  	%r1672, %r1670, %r1671;
	shr.u32 	%r1673, %r1474, 3;
	xor.b32  	%r1674, %r1672, %r1673;
	add.s32 	%r1675, %r1656, %r1654;
	shf.l.wrap.b32 	%r1676, %r1675, %r1675, 15;
	shf.l.wrap.b32 	%r1677, %r1675, %r1675, 13;
	xor.b32  	%r1678, %r1676, %r1677;
	shr.u32 	%r1679, %r1675, 10;
	xor.b32  	%r1680, %r1678, %r1679;
	add.s32 	%r1681, %r1610, %r1431;
	add.s32 	%r1682, %r1681, %r1674;
	add.s32 	%r1683, %r1682, %r1680;
	add.s32 	%r1684, %r1669, %r1667;
	st.local.v4.u32 	[%rd55+112], {%r1662, %r1675, %r1684, %r1683};
	shf.l.wrap.b32 	%r1685, %r1491, %r1491, 25;
	shf.l.wrap.b32 	%r1686, %r1491, %r1491, 14;
	xor.b32  	%r1687, %r1685, %r1686;
	shr.u32 	%r1688, %r1491, 3;
	xor.b32  	%r1689, %r1687, %r1688;
	shf.l.wrap.b32 	%r1690, %r1684, %r1684, 15;
	shf.l.wrap.b32 	%r1691, %r1684, %r1684, 13;
	xor.b32  	%r1692, %r1690, %r1691;
	shr.u32 	%r1693, %r1684, 10;
	xor.b32  	%r1694, %r1692, %r1693;
	add.s32 	%r1695, %r1623, %r1474;
	add.s32 	%r1696, %r1695, %r1689;
	shf.l.wrap.b32 	%r1697, %r1500, %r1500, 25;
	shf.l.wrap.b32 	%r1698, %r1500, %r1500, 14;
	xor.b32  	%r1699, %r1697, %r1698;
	shr.u32 	%r1700, %r1500, 3;
	xor.b32  	%r1701, %r1699, %r1700;
	shf.l.wrap.b32 	%r1702, %r1683, %r1683, 15;
	shf.l.wrap.b32 	%r1703, %r1683, %r1683, 13;
	xor.b32  	%r1704, %r1702, %r1703;
	shr.u32 	%r1705, %r1683, 10;
	xor.b32  	%r1706, %r1704, %r1705;
	add.s32 	%r1707, %r1632, %r1491;
	add.s32 	%r1708, %r1707, %r1701;
	shf.l.wrap.b32 	%r1709, %r1499, %r1499, 25;
	shf.l.wrap.b32 	%r1710, %r1499, %r1499, 14;
	xor.b32  	%r1711, %r1709, %r1710;
	shr.u32 	%r1712, %r1499, 3;
	xor.b32  	%r1713, %r1711, %r1712;
	add.s32 	%r1714, %r1696, %r1694;
	shf.l.wrap.b32 	%r1715, %r1714, %r1714, 15;
	shf.l.wrap.b32 	%r1716, %r1714, %r1714, 13;
	xor.b32  	%r1717, %r1715, %r1716;
	shr.u32 	%r1718, %r1714, 10;
	xor.b32  	%r1719, %r1717, %r1718;
	add.s32 	%r1720, %r1631, %r1500;
	add.s32 	%r1721, %r1720, %r1713;
	shf.l.wrap.b32 	%r1722, %r1542, %r1542, 25;
	shf.l.wrap.b32 	%r1723, %r1542, %r1542, 14;
	xor.b32  	%r1724, %r1722, %r1723;
	shr.u32 	%r1725, %r1542, 3;
	xor.b32  	%r1726, %r1724, %r1725;
	add.s32 	%r1727, %r1708, %r1706;
	shf.l.wrap.b32 	%r1728, %r1727, %r1727, 15;
	shf.l.wrap.b32 	%r1729, %r1727, %r1727, 13;
	xor.b32  	%r1730, %r1728, %r1729;
	shr.u32 	%r1731, %r1727, 10;
	xor.b32  	%r1732, %r1730, %r1731;
	add.s32 	%r1733, %r1662, %r1499;
	add.s32 	%r1734, %r1733, %r1726;
	add.s32 	%r1735, %r1734, %r1732;
	add.s32 	%r1736, %r1721, %r1719;
	st.local.v4.u32 	[%rd55+128], {%r1714, %r1727, %r1736, %r1735};
	shf.l.wrap.b32 	%r1737, %r1559, %r1559, 25;
	shf.l.wrap.b32 	%r1738, %r1559, %r1559, 14;
	xor.b32  	%r1739, %r1737, %r1738;
	shr.u32 	%r1740, %r1559, 3;
	xor.b32  	%r1741, %r1739, %r1740;
	shf.l.wrap.b32 	%r1742, %r1736, %r1736, 15;
	shf.l.wrap.b32 	%r1743, %r1736, %r1736, 13;
	xor.b32  	%r1744, %r1742, %r1743;
	shr.u32 	%r1745, %r1736, 10;
	xor.b32  	%r1746, %r1744, %r1745;
	add.s32 	%r1747, %r1675, %r1542;
	add.s32 	%r1748, %r1747, %r1741;
	shf.l.wrap.b32 	%r1749, %r1568, %r1568, 25;
	shf.l.wrap.b32 	%r1750, %r1568, %r1568, 14;
	xor.b32  	%r1751, %r1749, %r1750;
	shr.u32 	%r1752, %r1568, 3;
	xor.b32  	%r1753, %r1751, %r1752;
	shf.l.wrap.b32 	%r1754, %r1735, %r1735, 15;
	shf.l.wrap.b32 	%r1755, %r1735, %r1735, 13;
	xor.b32  	%r1756, %r1754, %r1755;
	shr.u32 	%r1757, %r1735, 10;
	xor.b32  	%r1758, %r1756, %r1757;
	add.s32 	%r1759, %r1684, %r1559;
	add.s32 	%r1760, %r1759, %r1753;
	shf.l.wrap.b32 	%r1761, %r1567, %r1567, 25;
	shf.l.wrap.b32 	%r1762, %r1567, %r1567, 14;
	xor.b32  	%r1763, %r1761, %r1762;
	shr.u32 	%r1764, %r1567, 3;
	xor.b32  	%r1765, %r1763, %r1764;
	add.s32 	%r1766, %r1748, %r1746;
	shf.l.wrap.b32 	%r1767, %r1766, %r1766, 15;
	shf.l.wrap.b32 	%r1768, %r1766, %r1766, 13;
	xor.b32  	%r1769, %r1767, %r1768;
	shr.u32 	%r1770, %r1766, 10;
	xor.b32  	%r1771, %r1769, %r1770;
	add.s32 	%r1772, %r1683, %r1568;
	add.s32 	%r1773, %r1772, %r1765;
	shf.l.wrap.b32 	%r1774, %r1610, %r1610, 25;
	shf.l.wrap.b32 	%r1775, %r1610, %r1610, 14;
	xor.b32  	%r1776, %r1774, %r1775;
	shr.u32 	%r1777, %r1610, 3;
	xor.b32  	%r1778, %r1776, %r1777;
	add.s32 	%r1779, %r1760, %r1758;
	shf.l.wrap.b32 	%r1780, %r1779, %r1779, 15;
	shf.l.wrap.b32 	%r1781, %r1779, %r1779, 13;
	xor.b32  	%r1782, %r1780, %r1781;
	shr.u32 	%r1783, %r1779, 10;
	xor.b32  	%r1784, %r1782, %r1783;
	add.s32 	%r1785, %r1714, %r1567;
	add.s32 	%r1786, %r1785, %r1778;
	add.s32 	%r1787, %r1786, %r1784;
	add.s32 	%r1788, %r1773, %r1771;
	st.local.v4.u32 	[%rd55+144], {%r1766, %r1779, %r1788, %r1787};
	shf.l.wrap.b32 	%r1789, %r1623, %r1623, 25;
	shf.l.wrap.b32 	%r1790, %r1623, %r1623, 14;
	xor.b32  	%r1791, %r1789, %r1790;
	shr.u32 	%r1792, %r1623, 3;
	xor.b32  	%r1793, %r1791, %r1792;
	shf.l.wrap.b32 	%r1794, %r1788, %r1788, 15;
	shf.l.wrap.b32 	%r1795, %r1788, %r1788, 13;
	xor.b32  	%r1796, %r1794, %r1795;
	shr.u32 	%r1797, %r1788, 10;
	xor.b32  	%r1798, %r1796, %r1797;
	add.s32 	%r1799, %r1727, %r1610;
	add.s32 	%r1800, %r1799, %r1793;
	shf.l.wrap.b32 	%r1801, %r1632, %r1632, 25;
	shf.l.wrap.b32 	%r1802, %r1632, %r1632, 14;
	xor.b32  	%r1803, %r1801, %r1802;
	shr.u32 	%r1804, %r1632, 3;
	xor.b32  	%r1805, %r1803, %r1804;
	shf.l.wrap.b32 	%r1806, %r1787, %r1787, 15;
	shf.l.wrap.b32 	%r1807, %r1787, %r1787, 13;
	xor.b32  	%r1808, %r1806, %r1807;
	shr.u32 	%r1809, %r1787, 10;
	xor.b32  	%r1810, %r1808, %r1809;
	add.s32 	%r1811, %r1736, %r1623;
	add.s32 	%r1812, %r1811, %r1805;
	shf.l.wrap.b32 	%r1813, %r1631, %r1631, 25;
	shf.l.wrap.b32 	%r1814, %r1631, %r1631, 14;
	xor.b32  	%r1815, %r1813, %r1814;
	shr.u32 	%r1816, %r1631, 3;
	xor.b32  	%r1817, %r1815, %r1816;
	add.s32 	%r1818, %r1800, %r1798;
	shf.l.wrap.b32 	%r1819, %r1818, %r1818, 15;
	shf.l.wrap.b32 	%r1820, %r1818, %r1818, 13;
	xor.b32  	%r1821, %r1819, %r1820;
	shr.u32 	%r1822, %r1818, 10;
	xor.b32  	%r1823, %r1821, %r1822;
	add.s32 	%r1824, %r1735, %r1632;
	add.s32 	%r1825, %r1824, %r1817;
	shf.l.wrap.b32 	%r1826, %r1662, %r1662, 25;
	shf.l.wrap.b32 	%r1827, %r1662, %r1662, 14;
	xor.b32  	%r1828, %r1826, %r1827;
	shr.u32 	%r1829, %r1662, 3;
	xor.b32  	%r1830, %r1828, %r1829;
	add.s32 	%r1831, %r1812, %r1810;
	shf.l.wrap.b32 	%r1832, %r1831, %r1831, 15;
	shf.l.wrap.b32 	%r1833, %r1831, %r1831, 13;
	xor.b32  	%r1834, %r1832, %r1833;
	shr.u32 	%r1835, %r1831, 10;
	xor.b32  	%r1836, %r1834, %r1835;
	add.s32 	%r1837, %r1766, %r1631;
	add.s32 	%r1838, %r1837, %r1830;
	add.s32 	%r1839, %r1838, %r1836;
	add.s32 	%r1840, %r1825, %r1823;
	st.local.v4.u32 	[%rd55+160], {%r1818, %r1831, %r1840, %r1839};
	shf.l.wrap.b32 	%r1841, %r1675, %r1675, 25;
	shf.l.wrap.b32 	%r1842, %r1675, %r1675, 14;
	xor.b32  	%r1843, %r1841, %r1842;
	shr.u32 	%r1844, %r1675, 3;
	xor.b32  	%r1845, %r1843, %r1844;
	shf.l.wrap.b32 	%r1846, %r1840, %r1840, 15;
	shf.l.wrap.b32 	%r1847, %r1840, %r1840, 13;
	xor.b32  	%r1848, %r1846, %r1847;
	shr.u32 	%r1849, %r1840, 10;
	xor.b32  	%r1850, %r1848, %r1849;
	add.s32 	%r1851, %r1779, %r1662;
	add.s32 	%r1852, %r1851, %r1845;
	shf.l.wrap.b32 	%r1853, %r1684, %r1684, 25;
	shf.l.wrap.b32 	%r1854, %r1684, %r1684, 14;
	xor.b32  	%r1855, %r1853, %r1854;
	shr.u32 	%r1856, %r1684, 3;
	xor.b32  	%r1857, %r1855, %r1856;
	shf.l.wrap.b32 	%r1858, %r1839, %r1839, 15;
	shf.l.wrap.b32 	%r1859, %r1839, %r1839, 13;
	xor.b32  	%r1860, %r1858, %r1859;
	shr.u32 	%r1861, %r1839, 10;
	xor.b32  	%r1862, %r1860, %r1861;
	add.s32 	%r1863, %r1788, %r1675;
	add.s32 	%r1864, %r1863, %r1857;
	shf.l.wrap.b32 	%r1865, %r1683, %r1683, 25;
	shf.l.wrap.b32 	%r1866, %r1683, %r1683, 14;
	xor.b32  	%r1867, %r1865, %r1866;
	shr.u32 	%r1868, %r1683, 3;
	xor.b32  	%r1869, %r1867, %r1868;
	add.s32 	%r1870, %r1852, %r1850;
	shf.l.wrap.b32 	%r1871, %r1870, %r1870, 15;
	shf.l.wrap.b32 	%r1872, %r1870, %r1870, 13;
	xor.b32  	%r1873, %r1871, %r1872;
	shr.u32 	%r1874, %r1870, 10;
	xor.b32  	%r1875, %r1873, %r1874;
	add.s32 	%r1876, %r1787, %r1684;
	add.s32 	%r1877, %r1876, %r1869;
	shf.l.wrap.b32 	%r1878, %r1714, %r1714, 25;
	shf.l.wrap.b32 	%r1879, %r1714, %r1714, 14;
	xor.b32  	%r1880, %r1878, %r1879;
	shr.u32 	%r1881, %r1714, 3;
	xor.b32  	%r1882, %r1880, %r1881;
	add.s32 	%r1883, %r1864, %r1862;
	shf.l.wrap.b32 	%r1884, %r1883, %r1883, 15;
	shf.l.wrap.b32 	%r1885, %r1883, %r1883, 13;
	xor.b32  	%r1886, %r1884, %r1885;
	shr.u32 	%r1887, %r1883, 10;
	xor.b32  	%r1888, %r1886, %r1887;
	add.s32 	%r1889, %r1818, %r1683;
	add.s32 	%r1890, %r1889, %r1882;
	add.s32 	%r1891, %r1890, %r1888;
	add.s32 	%r1892, %r1877, %r1875;
	st.local.v4.u32 	[%rd55+176], {%r1870, %r1883, %r1892, %r1891};
	shf.l.wrap.b32 	%r1893, %r1727, %r1727, 25;
	shf.l.wrap.b32 	%r1894, %r1727, %r1727, 14;
	xor.b32  	%r1895, %r1893, %r1894;
	shr.u32 	%r1896, %r1727, 3;
	xor.b32  	%r1897, %r1895, %r1896;
	shf.l.wrap.b32 	%r1898, %r1892, %r1892, 15;
	shf.l.wrap.b32 	%r1899, %r1892, %r1892, 13;
	xor.b32  	%r1900, %r1898, %r1899;
	shr.u32 	%r1901, %r1892, 10;
	xor.b32  	%r1902, %r1900, %r1901;
	add.s32 	%r1903, %r1831, %r1714;
	add.s32 	%r1904, %r1903, %r1897;
	shf.l.wrap.b32 	%r1905, %r1736, %r1736, 25;
	shf.l.wrap.b32 	%r1906, %r1736, %r1736, 14;
	xor.b32  	%r1907, %r1905, %r1906;
	shr.u32 	%r1908, %r1736, 3;
	xor.b32  	%r1909, %r1907, %r1908;
	shf.l.wrap.b32 	%r1910, %r1891, %r1891, 15;
	shf.l.wrap.b32 	%r1911, %r1891, %r1891, 13;
	xor.b32  	%r1912, %r1910, %r1911;
	shr.u32 	%r1913, %r1891, 10;
	xor.b32  	%r1914, %r1912, %r1913;
	add.s32 	%r1915, %r1840, %r1727;
	add.s32 	%r1916, %r1915, %r1909;
	shf.l.wrap.b32 	%r1917, %r1735, %r1735, 25;
	shf.l.wrap.b32 	%r1918, %r1735, %r1735, 14;
	xor.b32  	%r1919, %r1917, %r1918;
	shr.u32 	%r1920, %r1735, 3;
	xor.b32  	%r1921, %r1919, %r1920;
	add.s32 	%r1922, %r1904, %r1902;
	shf.l.wrap.b32 	%r1923, %r1922, %r1922, 15;
	shf.l.wrap.b32 	%r1924, %r1922, %r1922, 13;
	xor.b32  	%r1925, %r1923, %r1924;
	shr.u32 	%r1926, %r1922, 10;
	xor.b32  	%r1927, %r1925, %r1926;
	add.s32 	%r1928, %r1839, %r1736;
	add.s32 	%r1929, %r1928, %r1921;
	shf.l.wrap.b32 	%r1930, %r1766, %r1766, 25;
	shf.l.wrap.b32 	%r1931, %r1766, %r1766, 14;
	xor.b32  	%r1932, %r1930, %r1931;
	shr.u32 	%r1933, %r1766, 3;
	xor.b32  	%r1934, %r1932, %r1933;
	add.s32 	%r1935, %r1916, %r1914;
	shf.l.wrap.b32 	%r1936, %r1935, %r1935, 15;
	shf.l.wrap.b32 	%r1937, %r1935, %r1935, 13;
	xor.b32  	%r1938, %r1936, %r1937;
	shr.u32 	%r1939, %r1935, 10;
	xor.b32  	%r1940, %r1938, %r1939;
	add.s32 	%r1941, %r1870, %r1735;
	add.s32 	%r1942, %r1941, %r1934;
	add.s32 	%r1943, %r1942, %r1940;
	add.s32 	%r1944, %r1929, %r1927;
	st.local.v4.u32 	[%rd55+192], {%r1922, %r1935, %r1944, %r1943};
	shf.l.wrap.b32 	%r1945, %r1779, %r1779, 25;
	shf.l.wrap.b32 	%r1946, %r1779, %r1779, 14;
	xor.b32  	%r1947, %r1945, %r1946;
	shr.u32 	%r1948, %r1779, 3;
	xor.b32  	%r1949, %r1947, %r1948;
	shf.l.wrap.b32 	%r1950, %r1944, %r1944, 15;
	shf.l.wrap.b32 	%r1951, %r1944, %r1944, 13;
	xor.b32  	%r1952, %r1950, %r1951;
	shr.u32 	%r1953, %r1944, 10;
	xor.b32  	%r1954, %r1952, %r1953;
	add.s32 	%r1955, %r1883, %r1766;
	add.s32 	%r1956, %r1955, %r1949;
	shf.l.wrap.b32 	%r1957, %r1788, %r1788, 25;
	shf.l.wrap.b32 	%r1958, %r1788, %r1788, 14;
	xor.b32  	%r1959, %r1957, %r1958;
	shr.u32 	%r1960, %r1788, 3;
	xor.b32  	%r1961, %r1959, %r1960;
	shf.l.wrap.b32 	%r1962, %r1943, %r1943, 15;
	shf.l.wrap.b32 	%r1963, %r1943, %r1943, 13;
	xor.b32  	%r1964, %r1962, %r1963;
	shr.u32 	%r1965, %r1943, 10;
	xor.b32  	%r1966, %r1964, %r1965;
	add.s32 	%r1967, %r1892, %r1779;
	add.s32 	%r1968, %r1967, %r1961;
	shf.l.wrap.b32 	%r1969, %r1787, %r1787, 25;
	shf.l.wrap.b32 	%r1970, %r1787, %r1787, 14;
	xor.b32  	%r1971, %r1969, %r1970;
	shr.u32 	%r1972, %r1787, 3;
	xor.b32  	%r1973, %r1971, %r1972;
	add.s32 	%r1974, %r1956, %r1954;
	shf.l.wrap.b32 	%r1975, %r1974, %r1974, 15;
	shf.l.wrap.b32 	%r1976, %r1974, %r1974, 13;
	xor.b32  	%r1977, %r1975, %r1976;
	shr.u32 	%r1978, %r1974, 10;
	xor.b32  	%r1979, %r1977, %r1978;
	add.s32 	%r1980, %r1891, %r1788;
	add.s32 	%r1981, %r1980, %r1973;
	shf.l.wrap.b32 	%r1982, %r1818, %r1818, 25;
	shf.l.wrap.b32 	%r1983, %r1818, %r1818, 14;
	xor.b32  	%r1984, %r1982, %r1983;
	shr.u32 	%r1985, %r1818, 3;
	xor.b32  	%r1986, %r1984, %r1985;
	add.s32 	%r1987, %r1968, %r1966;
	shf.l.wrap.b32 	%r1988, %r1987, %r1987, 15;
	shf.l.wrap.b32 	%r1989, %r1987, %r1987, 13;
	xor.b32  	%r1990, %r1988, %r1989;
	shr.u32 	%r1991, %r1987, 10;
	xor.b32  	%r1992, %r1990, %r1991;
	add.s32 	%r1993, %r1922, %r1787;
	add.s32 	%r1994, %r1993, %r1986;
	add.s32 	%r1995, %r1994, %r1992;
	add.s32 	%r1996, %r1981, %r1979;
	st.local.v4.u32 	[%rd55+208], {%r1974, %r1987, %r1996, %r1995};
	shf.l.wrap.b32 	%r1997, %r1831, %r1831, 25;
	shf.l.wrap.b32 	%r1998, %r1831, %r1831, 14;
	xor.b32  	%r1999, %r1997, %r1998;
	shr.u32 	%r2000, %r1831, 3;
	xor.b32  	%r2001, %r1999, %r2000;
	shf.l.wrap.b32 	%r2002, %r1996, %r1996, 15;
	shf.l.wrap.b32 	%r2003, %r1996, %r1996, 13;
	xor.b32  	%r2004, %r2002, %r2003;
	shr.u32 	%r2005, %r1996, 10;
	xor.b32  	%r2006, %r2004, %r2005;
	add.s32 	%r2007, %r1935, %r1818;
	add.s32 	%r2008, %r2007, %r2001;
	shf.l.wrap.b32 	%r2009, %r1840, %r1840, 25;
	shf.l.wrap.b32 	%r2010, %r1840, %r1840, 14;
	xor.b32  	%r2011, %r2009, %r2010;
	shr.u32 	%r2012, %r1840, 3;
	xor.b32  	%r2013, %r2011, %r2012;
	shf.l.wrap.b32 	%r2014, %r1995, %r1995, 15;
	shf.l.wrap.b32 	%r2015, %r1995, %r1995, 13;
	xor.b32  	%r2016, %r2014, %r2015;
	shr.u32 	%r2017, %r1995, 10;
	xor.b32  	%r2018, %r2016, %r2017;
	add.s32 	%r2019, %r1944, %r1831;
	add.s32 	%r2020, %r2019, %r2013;
	shf.l.wrap.b32 	%r2021, %r1839, %r1839, 25;
	shf.l.wrap.b32 	%r2022, %r1839, %r1839, 14;
	xor.b32  	%r2023, %r2021, %r2022;
	shr.u32 	%r2024, %r1839, 3;
	xor.b32  	%r2025, %r2023, %r2024;
	add.s32 	%r2026, %r2008, %r2006;
	shf.l.wrap.b32 	%r2027, %r2026, %r2026, 15;
	shf.l.wrap.b32 	%r2028, %r2026, %r2026, 13;
	xor.b32  	%r2029, %r2027, %r2028;
	shr.u32 	%r2030, %r2026, 10;
	xor.b32  	%r2031, %r2029, %r2030;
	add.s32 	%r2032, %r1943, %r1840;
	add.s32 	%r2033, %r2032, %r2025;
	shf.l.wrap.b32 	%r2034, %r1870, %r1870, 25;
	shf.l.wrap.b32 	%r2035, %r1870, %r1870, 14;
	xor.b32  	%r2036, %r2034, %r2035;
	shr.u32 	%r2037, %r1870, 3;
	xor.b32  	%r2038, %r2036, %r2037;
	add.s32 	%r2039, %r2020, %r2018;
	shf.l.wrap.b32 	%r2040, %r2039, %r2039, 15;
	shf.l.wrap.b32 	%r2041, %r2039, %r2039, 13;
	xor.b32  	%r2042, %r2040, %r2041;
	shr.u32 	%r2043, %r2039, 10;
	xor.b32  	%r2044, %r2042, %r2043;
	add.s32 	%r2045, %r1974, %r1839;
	add.s32 	%r2046, %r2045, %r2038;
	add.s32 	%r2047, %r2046, %r2044;
	add.s32 	%r2048, %r2033, %r2031;
	st.local.v4.u32 	[%rd55+224], {%r2026, %r2039, %r2048, %r2047};
	ld.local.u32 	%r40, [%rd5+-12];
	ld.local.v2.u32 	{%r2049, %r2050}, [%rd5+-8];
	ld.local.v4.u32 	{%r2051, %r2052, %r2053, %r2054}, [%rd5];
	ld.local.u32 	%r47, [%rd5+16];
	mov.u32 	%r2218, -64;
	mov.u64 	%rd66, k;
	mov.u32 	%r2220, %r40;
	mov.u32 	%r2221, %r2049;
	mov.u32 	%r2222, %r2050;
	mov.u32 	%r2223, %r2051;
	mov.u32 	%r2224, %r2052;
	mov.u32 	%r2225, %r2053;
	mov.u32 	%r2226, %r2054;
	mov.u32 	%r2227, %r47;
	bra.uni 	BB1_10;

BB1_11:
	add.s64 	%rd14, %rd67, 16;
	ld.local.u32 	%r2219, [%rd67+16];
	add.s64 	%rd66, %rd66, 16;
	mov.u64 	%rd67, %rd14;

BB1_10:
	shf.l.wrap.b32 	%r2055, %r2224, %r2224, 26;
	shf.l.wrap.b32 	%r2056, %r2224, %r2224, 21;
	xor.b32  	%r2057, %r2055, %r2056;
	shf.l.wrap.b32 	%r2058, %r2224, %r2224, 7;
	xor.b32  	%r2059, %r2057, %r2058;
	not.b32 	%r2060, %r2224;
	and.b32  	%r2061, %r2226, %r2060;
	and.b32  	%r2062, %r2224, %r2225;
	xor.b32  	%r2063, %r2062, %r2061;
	add.s32 	%r2064, %r2063, %r2227;
	add.s32 	%r2065, %r2064, %r2059;
	ld.const.u32 	%r2066, [%rd66];
	add.s32 	%r2067, %r2065, %r2066;
	add.s32 	%r2068, %r2067, %r2219;
	shf.l.wrap.b32 	%r2069, %r2220, %r2220, 30;
	shf.l.wrap.b32 	%r2070, %r2220, %r2220, 19;
	xor.b32  	%r2071, %r2069, %r2070;
	shf.l.wrap.b32 	%r2072, %r2220, %r2220, 10;
	xor.b32  	%r2073, %r2071, %r2072;
	xor.b32  	%r2074, %r2221, %r2222;
	and.b32  	%r2075, %r2220, %r2074;
	and.b32  	%r2076, %r2221, %r2222;
	xor.b32  	%r2077, %r2075, %r2076;
	add.s32 	%r2078, %r2073, %r2077;
	add.s32 	%r2227, %r2068, %r2223;
	add.s32 	%r2223, %r2078, %r2068;
	shf.l.wrap.b32 	%r2079, %r2227, %r2227, 26;
	shf.l.wrap.b32 	%r2080, %r2227, %r2227, 21;
	xor.b32  	%r2081, %r2079, %r2080;
	shf.l.wrap.b32 	%r2082, %r2227, %r2227, 7;
	xor.b32  	%r2083, %r2081, %r2082;
	and.b32  	%r2084, %r2227, %r2224;
	not.b32 	%r2085, %r2227;
	and.b32  	%r2086, %r2225, %r2085;
	xor.b32  	%r2087, %r2084, %r2086;
	add.s32 	%r2088, %r2087, %r2226;
	add.s32 	%r2089, %r2088, %r2083;
	ld.const.u32 	%r2090, [%rd66+4];
	add.s32 	%r2091, %r2089, %r2090;
	ld.local.u32 	%r2092, [%rd67+4];
	add.s32 	%r2093, %r2091, %r2092;
	shf.l.wrap.b32 	%r2094, %r2223, %r2223, 30;
	shf.l.wrap.b32 	%r2095, %r2223, %r2223, 19;
	xor.b32  	%r2096, %r2094, %r2095;
	shf.l.wrap.b32 	%r2097, %r2223, %r2223, 10;
	xor.b32  	%r2098, %r2096, %r2097;
	xor.b32  	%r2099, %r2220, %r2221;
	and.b32  	%r2100, %r2223, %r2099;
	and.b32  	%r2101, %r2220, %r2221;
	xor.b32  	%r2102, %r2100, %r2101;
	add.s32 	%r2103, %r2098, %r2102;
	add.s32 	%r2226, %r2093, %r2222;
	add.s32 	%r2222, %r2103, %r2093;
	shf.l.wrap.b32 	%r2104, %r2226, %r2226, 26;
	shf.l.wrap.b32 	%r2105, %r2226, %r2226, 21;
	xor.b32  	%r2106, %r2104, %r2105;
	shf.l.wrap.b32 	%r2107, %r2226, %r2226, 7;
	xor.b32  	%r2108, %r2106, %r2107;
	and.b32  	%r2109, %r2226, %r2227;
	not.b32 	%r2110, %r2226;
	and.b32  	%r2111, %r2224, %r2110;
	xor.b32  	%r2112, %r2109, %r2111;
	add.s32 	%r2113, %r2112, %r2225;
	add.s32 	%r2114, %r2113, %r2108;
	ld.const.u32 	%r2115, [%rd66+8];
	add.s32 	%r2116, %r2114, %r2115;
	ld.local.v2.u32 	{%r2117, %r2118}, [%rd67+8];
	add.s32 	%r2120, %r2116, %r2117;
	shf.l.wrap.b32 	%r2121, %r2222, %r2222, 30;
	shf.l.wrap.b32 	%r2122, %r2222, %r2222, 19;
	xor.b32  	%r2123, %r2121, %r2122;
	shf.l.wrap.b32 	%r2124, %r2222, %r2222, 10;
	xor.b32  	%r2125, %r2123, %r2124;
	xor.b32  	%r2126, %r2223, %r2220;
	and.b32  	%r2127, %r2222, %r2126;
	and.b32  	%r2128, %r2223, %r2220;
	xor.b32  	%r2129, %r2127, %r2128;
	add.s32 	%r2130, %r2125, %r2129;
	add.s32 	%r2225, %r2120, %r2221;
	add.s32 	%r2221, %r2130, %r2120;
	shf.l.wrap.b32 	%r2131, %r2225, %r2225, 26;
	shf.l.wrap.b32 	%r2132, %r2225, %r2225, 21;
	xor.b32  	%r2133, %r2131, %r2132;
	shf.l.wrap.b32 	%r2134, %r2225, %r2225, 7;
	xor.b32  	%r2135, %r2133, %r2134;
	and.b32  	%r2136, %r2225, %r2226;
	not.b32 	%r2137, %r2225;
	and.b32  	%r2138, %r2227, %r2137;
	xor.b32  	%r2139, %r2136, %r2138;
	add.s32 	%r2140, %r2139, %r2224;
	add.s32 	%r2141, %r2140, %r2135;
	ld.const.u32 	%r2142, [%rd66+12];
	add.s32 	%r2143, %r2141, %r2142;
	add.s32 	%r2145, %r2143, %r2118;
	shf.l.wrap.b32 	%r2146, %r2221, %r2221, 30;
	shf.l.wrap.b32 	%r2147, %r2221, %r2221, 19;
	xor.b32  	%r2148, %r2146, %r2147;
	shf.l.wrap.b32 	%r2149, %r2221, %r2221, 10;
	xor.b32  	%r2150, %r2148, %r2149;
	xor.b32  	%r2151, %r2222, %r2223;
	and.b32  	%r2152, %r2221, %r2151;
	and.b32  	%r2153, %r2222, %r2223;
	xor.b32  	%r2154, %r2152, %r2153;
	add.s32 	%r2155, %r2150, %r2154;
	add.s32 	%r2224, %r2145, %r2220;
	add.s32 	%r2220, %r2155, %r2145;
	add.s32 	%r2218, %r2218, 4;
	setp.eq.s32	%p7, %r2218, 0;
	@%p7 bra 	BB1_12;
	bra.uni 	BB1_11;

BB1_12:
	add.s32 	%r2157, %r40, %r2220;
	st.local.u32 	[%rd5+-12], %r2157;
	add.s32 	%r2158, %r2050, %r2222;
	add.s32 	%r2159, %r2049, %r2221;
	st.local.v2.u32 	[%rd5+-8], {%r2159, %r2158};
	add.s32 	%r2160, %r2054, %r2226;
	add.s32 	%r2161, %r2053, %r2225;
	add.s32 	%r2162, %r2052, %r2224;
	add.s32 	%r2163, %r2051, %r2223;
	st.local.v4.u32 	[%rd5], {%r2163, %r2162, %r2161, %r2160};
	add.s32 	%r2164, %r47, %r2227;
	st.local.u32 	[%rd5+16], %r2164;
	mov.u32 	%r2215, 0;
	st.local.u32 	[%rd5+-16], %r2215;

BB1_13:
	add.s32 	%r2217, %r2217, 1;
	setp.lt.u32	%p8, %r2217, %r35;
	@%p8 bra 	BB1_8;

BB1_14:
	ld.param.u64 	%rd63, [hashTest_param_1];
	ld.local.u32 	%r2165, [%rd5+-12];
	shr.u32 	%r2166, %r2165, 24;
	shr.u32 	%r2167, %r2165, 16;
	shr.u32 	%r2168, %r2165, 8;
	ld.local.v2.u32 	{%r2169, %r2170}, [%rd5+-8];
	shr.u32 	%r2173, %r2169, 24;
	shr.u32 	%r2174, %r2169, 16;
	shr.u32 	%r2175, %r2169, 8;
	shr.u32 	%r2176, %r2170, 24;
	shr.u32 	%r2177, %r2170, 16;
	shr.u32 	%r2178, %r2170, 8;
	ld.local.v4.u32 	{%r2179, %r2180, %r2181, %r2182}, [%rd5];
	shr.u32 	%r2187, %r2179, 24;
	shr.u32 	%r2188, %r2179, 16;
	shr.u32 	%r2189, %r2179, 8;
	shr.u32 	%r2190, %r2180, 24;
	shr.u32 	%r2191, %r2180, 16;
	shr.u32 	%r2192, %r2180, 8;
	shr.u32 	%r2193, %r2181, 24;
	shr.u32 	%r2194, %r2181, 16;
	shr.u32 	%r2195, %r2181, 8;
	shr.u32 	%r2196, %r2182, 24;
	shr.u32 	%r2197, %r2182, 16;
	shr.u32 	%r2198, %r2182, 8;
	ld.local.u32 	%r2199, [%rd5+16];
	shr.u32 	%r2200, %r2199, 24;
	shr.u32 	%r2201, %r2199, 16;
	shr.u32 	%r2202, %r2199, 8;
	st.global.u8 	[%rd63], %r2166;
	st.global.u8 	[%rd63+1], %r2167;
	st.global.u8 	[%rd63+2], %r2168;
	st.global.u8 	[%rd63+3], %r2165;
	st.global.u8 	[%rd63+4], %r2173;
	st.global.u8 	[%rd63+5], %r2174;
	st.global.u8 	[%rd63+6], %r2175;
	st.global.u8 	[%rd63+7], %r2169;
	st.global.u8 	[%rd63+8], %r2176;
	st.global.u8 	[%rd63+9], %r2177;
	st.global.u8 	[%rd63+10], %r2178;
	st.global.u8 	[%rd63+11], %r2170;
	st.global.u8 	[%rd63+12], %r2187;
	st.global.u8 	[%rd63+13], %r2188;
	st.global.u8 	[%rd63+14], %r2189;
	st.global.u8 	[%rd63+15], %r2179;
	st.global.u8 	[%rd63+16], %r2190;
	st.global.u8 	[%rd63+17], %r2191;
	st.global.u8 	[%rd63+18], %r2192;
	st.global.u8 	[%rd63+19], %r2180;
	st.global.u8 	[%rd63+20], %r2193;
	st.global.u8 	[%rd63+21], %r2194;
	st.global.u8 	[%rd63+22], %r2195;
	st.global.u8 	[%rd63+23], %r2181;
	st.global.u8 	[%rd63+24], %r2196;
	st.global.u8 	[%rd63+25], %r2197;
	st.global.u8 	[%rd63+26], %r2198;
	st.global.u8 	[%rd63+27], %r2182;
	st.global.u8 	[%rd63+28], %r2200;
	st.global.u8 	[%rd63+29], %r2201;
	st.global.u8 	[%rd63+30], %r2202;
	st.global.u8 	[%rd63+31], %r2199;
	ret;
}

	// .globl	scanHash
.entry scanHash(
	.param .u64 .ptr .global .align 1 scanHash_param_0,
	.param .u64 .ptr .global .align 4 scanHash_param_1,
	.param .u64 scanHash_param_2,
	.param .u32 scanHash_param_3
)
{
	.local .align 16 .b8 	__local_depot2[576];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<234>;
	.reg .b32 	%r<6694>;
	.reg .b64 	%rd<4252>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u64 	%rd36, [scanHash_param_0];
	ld.param.u32 	%r71, [scanHash_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r72, %ctaid.x;
	mov.u32 	%r73, %ntid.x;
	ld.global.u8 	%rs4, [%rd36];
	ld.global.u8 	%rs5, [%rd36+1];
	ld.global.u8 	%rs6, [%rd36+3];
	ld.global.u8 	%rs7, [%rd36+2];
	ld.global.u8 	%rs8, [%rd36+7];
	ld.global.u8 	%rs9, [%rd36+6];
	ld.global.u8 	%rs10, [%rd36+5];
	ld.global.u8 	%rs11, [%rd36+4];
	ld.global.u8 	%rs12, [%rd36+11];
	ld.global.u8 	%rs13, [%rd36+10];
	ld.global.u8 	%rs14, [%rd36+9];
	ld.global.u8 	%rs15, [%rd36+8];
	ld.global.u8 	%rs16, [%rd36+15];
	ld.global.u8 	%rs17, [%rd36+14];
	ld.global.u8 	%rs18, [%rd36+13];
	ld.global.u8 	%rs19, [%rd36+12];
	ld.global.u8 	%rs20, [%rd36+16];
	ld.global.u8 	%rs21, [%rd36+17];
	ld.global.u8 	%rs22, [%rd36+19];
	ld.global.u8 	%rs23, [%rd36+18];
	ld.global.u8 	%rs24, [%rd36+23];
	ld.global.u8 	%rs25, [%rd36+22];
	ld.global.u8 	%rs26, [%rd36+21];
	ld.global.u8 	%rs27, [%rd36+20];
	ld.global.u8 	%rs28, [%rd36+27];
	ld.global.u8 	%rs29, [%rd36+26];
	ld.global.u8 	%rs30, [%rd36+25];
	ld.global.u8 	%rs31, [%rd36+24];
	ld.global.u8 	%rs32, [%rd36+31];
	ld.global.u8 	%rs33, [%rd36+30];
	ld.global.u8 	%rs34, [%rd36+29];
	ld.global.u8 	%rs35, [%rd36+28];
	ld.global.u8 	%rs36, [%rd36+32];
	ld.global.u8 	%rs37, [%rd36+33];
	ld.global.u8 	%rs38, [%rd36+35];
	ld.global.u8 	%rs39, [%rd36+34];
	ld.global.u8 	%rs40, [%rd36+39];
	ld.global.u8 	%rs41, [%rd36+38];
	ld.global.u8 	%rs42, [%rd36+37];
	ld.global.u8 	%rs43, [%rd36+36];
	ld.global.u8 	%rs44, [%rd36+43];
	ld.global.u8 	%rs45, [%rd36+42];
	ld.global.u8 	%rs46, [%rd36+41];
	ld.global.u8 	%rs47, [%rd36+40];
	ld.global.u8 	%rs48, [%rd36+47];
	ld.global.u8 	%rs49, [%rd36+46];
	ld.global.u8 	%rs50, [%rd36+45];
	ld.global.u8 	%rs51, [%rd36+44];
	ld.global.u8 	%rs52, [%rd36+48];
	ld.global.u8 	%rs53, [%rd36+49];
	ld.global.u8 	%rs54, [%rd36+51];
	ld.global.u8 	%rs55, [%rd36+50];
	ld.global.u8 	%rs56, [%rd36+55];
	ld.global.u8 	%rs57, [%rd36+54];
	ld.global.u8 	%rs58, [%rd36+53];
	ld.global.u8 	%rs59, [%rd36+52];
	ld.global.u8 	%rs60, [%rd36+59];
	ld.global.u8 	%rs61, [%rd36+58];
	ld.global.u8 	%rs62, [%rd36+57];
	ld.global.u8 	%rs63, [%rd36+56];
	ld.global.u8 	%rs64, [%rd36+63];
	ld.global.u8 	%rs65, [%rd36+62];
	ld.global.u8 	%rs66, [%rd36+61];
	ld.global.u8 	%rs67, [%rd36+60];
	add.u64 	%rd4, %SPL, 128;
	st.local.v2.u8 	[%rd4], {%rs4, %rs5};
	st.local.v2.u8 	[%rd4+2], {%rs7, %rs6};
	st.local.v4.u8 	[%rd4+4], {%rs11, %rs10, %rs9, %rs8};
	st.local.v4.u8 	[%rd4+8], {%rs15, %rs14, %rs13, %rs12};
	st.local.v4.u8 	[%rd4+12], {%rs19, %rs18, %rs17, %rs16};
	st.local.v2.u8 	[%rd4+18], {%rs23, %rs22};
	st.local.v4.u8 	[%rd4+20], {%rs27, %rs26, %rs25, %rs24};
	st.local.v4.u8 	[%rd4+24], {%rs31, %rs30, %rs29, %rs28};
	st.local.v4.u8 	[%rd4+28], {%rs35, %rs34, %rs33, %rs32};
	st.local.v2.u8 	[%rd4+34], {%rs39, %rs38};
	st.local.v4.u8 	[%rd4+36], {%rs43, %rs42, %rs41, %rs40};
	st.local.v4.u8 	[%rd4+40], {%rs47, %rs46, %rs45, %rs44};
	st.local.v4.u8 	[%rd4+44], {%rs51, %rs50, %rs49, %rs48};
	st.local.v2.u8 	[%rd4+50], {%rs55, %rs54};
	st.local.v4.u8 	[%rd4+52], {%rs59, %rs58, %rs57, %rs56};
	st.local.v4.u8 	[%rd4+56], {%rs63, %rs62, %rs61, %rs60};
	st.local.v4.u8 	[%rd4+60], {%rs67, %rs66, %rs65, %rs64};
	st.local.v2.u8 	[%rd4+16], {%rs20, %rs21};
	st.local.v2.u8 	[%rd4+32], {%rs36, %rs37};
	st.local.v2.u8 	[%rd4+48], {%rs52, %rs53};
	add.u64 	%rd2, %SPL, 192;
	add.u64 	%rd3, %SPL, 448;
	ld.local.v2.u32 	{%r74, %r75}, [%rd4+56];
	mov.b32	%r78, %envreg3;
	add.s32 	%r79, %r78, %r71;
	mad.lo.s32 	%r80, %r72, %r73, %r79;
	mov.u32 	%r81, %tid.x;
	add.s32 	%r1, %r80, %r81;
	xor.b32  	%r82, %r75, %r74;
	st.local.v2.u32 	[%rd4+56], {%r82, %r1};
	ld.local.u64 	%rd5, [%rd4+32];
	ld.local.u64 	%rd6, [%rd4+40];
	ld.local.u64 	%rd7, [%rd4+48];
	ld.local.u64 	%rd8, [%rd4+56];
	ld.local.u64 	%rd41, [%rd4];
	ld.local.u64 	%rd42, [%rd4+8];
	add.s64 	%rd43, %rd42, -1714305546867594773;
	add.s64 	%rd44, %rd41, %rd43;
	ld.local.u64 	%rd45, [%rd4+16];
	ld.local.u64 	%rd46, [%rd4+24];
	add.s64 	%rd47, %rd46, 3037510430686418139;
	add.s64 	%rd48, %rd45, %rd47;
	add.s64 	%rd49, %rd44, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r83,%dummy}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r84}, %rd43;
	}
	shf.r.wrap.b32 	%r85, %r84, %r83, 18;
	shf.r.wrap.b32 	%r86, %r83, %r84, 18;
	mov.b64 	%rd50, {%r86, %r85};
	xor.b64  	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd48, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd47;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd47;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 28;
	shf.r.wrap.b32 	%r90, %r87, %r88, 28;
	mov.b64 	%rd53, {%r90, %r89};
	xor.b64  	%rd54, %rd53, %rd52;
	mov.u64 	%rd55, -1755217697375493519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r91}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd55;
	}
	shf.l.wrap.b32 	%r93, %r92, %r91, 19;
	shf.l.wrap.b32 	%r94, %r91, %r92, 19;
	mov.b64 	%rd56, {%r94, %r93};
	xor.b64  	%rd57, %rd56, -3194678123562936076;
	mov.u64 	%rd58, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd58;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 27;
	shf.r.wrap.b32 	%r98, %r95, %r96, 27;
	mov.b64 	%rd59, {%r98, %r97};
	xor.b64  	%rd60, %rd59, -982500425990615656;
	add.s64 	%rd61, %rd51, %rd52;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r99,%dummy}, %rd51;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd51;
	}
	shf.r.wrap.b32 	%r101, %r100, %r99, 31;
	shf.r.wrap.b32 	%r102, %r99, %r100, 31;
	mov.b64 	%rd62, {%r102, %r101};
	xor.b64  	%rd63, %rd62, %rd61;
	add.s64 	%rd9, %rd60, -3194678123562936076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r103}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r104,%dummy}, %rd60;
	}
	shf.l.wrap.b32 	%r105, %r104, %r103, 27;
	shf.l.wrap.b32 	%r106, %r103, %r104, 27;
	mov.b64 	%rd64, {%r106, %r105};
	xor.b64  	%rd10, %rd64, %rd9;
	add.s64 	%rd11, %rd57, -982500425990615656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r107}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd57;
	}
	shf.l.wrap.b32 	%r109, %r108, %r107, 14;
	shf.l.wrap.b32 	%r110, %r107, %r108, 14;
	mov.b64 	%rd65, {%r110, %r109};
	xor.b64  	%rd12, %rd65, %rd11;
	add.s64 	%rd66, %rd54, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd54;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 22;
	shf.r.wrap.b32 	%r114, %r111, %r112, 22;
	mov.b64 	%rd67, {%r114, %r113};
	xor.b64  	%rd68, %rd67, %rd66;
	add.s64 	%rd69, %rd9, %rd63;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r115}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd63;
	}
	shf.l.wrap.b32 	%r117, %r116, %r115, 17;
	shf.l.wrap.b32 	%r118, %r115, %r116, 17;
	mov.b64 	%rd70, {%r118, %r117};
	xor.b64  	%rd71, %rd70, %rd69;
	add.s64 	%rd72, %rd68, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd68;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd68;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 15;
	shf.r.wrap.b32 	%r122, %r119, %r120, 15;
	mov.b64 	%rd73, {%r122, %r121};
	xor.b64  	%rd74, %rd73, %rd72;
	add.s64 	%rd75, %rd12, %rd66;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd12;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd12;
	}
	shf.r.wrap.b32 	%r125, %r124, %r123, 28;
	shf.r.wrap.b32 	%r126, %r123, %r124, 28;
	mov.b64 	%rd13, {%r126, %r125};
	xor.b64  	%rd76, %rd13, %rd75;
	add.s64 	%rd77, %rd10, %rd61;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd10;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 25;
	shf.r.wrap.b32 	%r130, %r127, %r128, 25;
	mov.b64 	%rd14, {%r130, %r129};
	xor.b64  	%rd78, %rd14, %rd77;
	add.s64 	%rd79, %rd72, %rd71;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd71;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r132}, %rd71;
	}
	shf.r.wrap.b32 	%r133, %r132, %r131, 20;
	shf.r.wrap.b32 	%r134, %r131, %r132, 20;
	mov.b64 	%rd80, {%r134, %r133};
	xor.b64  	%rd81, %rd80, %rd79;
	add.s64 	%rd82, %rd78, %rd75;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r135}, %rd78;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r136,%dummy}, %rd78;
	}
	shf.l.wrap.b32 	%r137, %r136, %r135, 9;
	shf.l.wrap.b32 	%r138, %r135, %r136, 9;
	mov.b64 	%rd83, {%r138, %r137};
	xor.b64  	%rd84, %rd83, %rd82;
	add.s64 	%rd85, %rd76, %rd77;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd76;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd76;
	}
	shf.r.wrap.b32 	%r141, %r140, %r139, 10;
	shf.r.wrap.b32 	%r142, %r139, %r140, 10;
	mov.b64 	%rd86, {%r142, %r141};
	xor.b64  	%rd87, %rd86, %rd85;
	add.s64 	%rd88, %rd74, %rd69;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd74;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd74;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 8;
	shf.r.wrap.b32 	%r146, %r143, %r144, 8;
	mov.b64 	%rd89, {%r146, %r145};
	xor.b64  	%rd90, %rd89, %rd88;
	add.s64 	%rd91, %rd81, 6174048478977683055;
	add.s64 	%rd92, %rd82, %rd91;
	add.s64 	%rd93, %rd90, -1439460426187442557;
	add.s64 	%rd94, %rd85, %rd93;
	add.s64 	%rd95, %rd87, -5516985438935789179;
	add.s64 	%rd96, %rd88, %rd95;
	add.s64 	%rd97, %rd84, -5288003331091182037;
	add.s64 	%rd98, %rd92, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd91;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd91;
	}
	shf.r.wrap.b32 	%r149, %r148, %r147, 25;
	shf.r.wrap.b32 	%r150, %r147, %r148, 25;
	mov.b64 	%rd99, {%r150, %r149};
	xor.b64  	%rd100, %rd99, %rd98;
	add.s64 	%rd101, %rd94, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r151}, %rd93;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r152,%dummy}, %rd93;
	}
	shf.l.wrap.b32 	%r153, %r152, %r151, 30;
	shf.l.wrap.b32 	%r154, %r151, %r152, 30;
	mov.b64 	%rd102, {%r154, %r153};
	xor.b64  	%rd103, %rd102, %rd101;
	add.s64 	%rd104, %rd96, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd95;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd95;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 30;
	shf.r.wrap.b32 	%r158, %r155, %r156, 30;
	mov.b64 	%rd105, {%r158, %r157};
	xor.b64  	%rd106, %rd105, %rd104;
	add.s64 	%rd107, %rd79, %rd97;
	add.s64 	%rd108, %rd107, 3381563508338326579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r159}, %rd97;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd97;
	}
	shf.l.wrap.b32 	%r161, %r160, %r159, 24;
	shf.l.wrap.b32 	%r162, %r159, %r160, 24;
	mov.b64 	%rd109, {%r162, %r161};
	xor.b64  	%rd110, %rd109, %rd108;
	add.s64 	%rd111, %rd100, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r164,%dummy}, %rd100;
	}
	shf.l.wrap.b32 	%r165, %r164, %r163, 13;
	shf.l.wrap.b32 	%r166, %r163, %r164, 13;
	mov.b64 	%rd112, {%r166, %r165};
	xor.b64  	%rd113, %rd112, %rd111;
	add.s64 	%rd114, %rd110, %rd104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd110;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 14;
	shf.r.wrap.b32 	%r170, %r167, %r168, 14;
	mov.b64 	%rd115, {%r170, %r169};
	xor.b64  	%rd116, %rd115, %rd114;
	add.s64 	%rd117, %rd106, %rd108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd106;
	}
	shf.l.wrap.b32 	%r173, %r172, %r171, 10;
	shf.l.wrap.b32 	%r174, %r171, %r172, 10;
	mov.b64 	%rd118, {%r174, %r173};
	xor.b64  	%rd119, %rd118, %rd117;
	add.s64 	%rd120, %rd103, %rd98;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r175}, %rd103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd103;
	}
	shf.l.wrap.b32 	%r177, %r176, %r175, 17;
	shf.l.wrap.b32 	%r178, %r175, %r176, 17;
	mov.b64 	%rd121, {%r178, %r177};
	xor.b64  	%rd122, %rd121, %rd120;
	add.s64 	%rd123, %rd114, %rd113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd113;
	}
	shf.l.wrap.b32 	%r181, %r180, %r179, 25;
	shf.l.wrap.b32 	%r182, %r179, %r180, 25;
	mov.b64 	%rd124, {%r182, %r181};
	xor.b64  	%rd125, %rd124, %rd123;
	add.s64 	%rd126, %rd122, %rd117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r183}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd122;
	}
	shf.l.wrap.b32 	%r185, %r184, %r183, 29;
	shf.l.wrap.b32 	%r186, %r183, %r184, 29;
	mov.b64 	%rd127, {%r186, %r185};
	xor.b64  	%rd128, %rd127, %rd126;
	add.s64 	%rd129, %rd119, %rd120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd119;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 25;
	shf.r.wrap.b32 	%r190, %r187, %r188, 25;
	mov.b64 	%rd130, {%r190, %r189};
	xor.b64  	%rd131, %rd130, %rd129;
	add.s64 	%rd132, %rd116, %rd111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd116;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 21;
	shf.r.wrap.b32 	%r194, %r191, %r192, 21;
	mov.b64 	%rd133, {%r194, %r193};
	xor.b64  	%rd134, %rd133, %rd132;
	add.s64 	%rd135, %rd126, %rd125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r196,%dummy}, %rd125;
	}
	shf.l.wrap.b32 	%r197, %r196, %r195, 8;
	shf.l.wrap.b32 	%r198, %r195, %r196, 8;
	mov.b64 	%rd136, {%r198, %r197};
	xor.b64  	%rd137, %rd136, %rd135;
	add.s64 	%rd138, %rd134, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd134;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 29;
	shf.r.wrap.b32 	%r202, %r199, %r200, 29;
	mov.b64 	%rd139, {%r202, %r201};
	xor.b64  	%rd140, %rd139, %rd138;
	add.s64 	%rd141, %rd131, %rd132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r204}, %rd131;
	}
	shf.r.wrap.b32 	%r205, %r204, %r203, 8;
	shf.r.wrap.b32 	%r206, %r203, %r204, 8;
	mov.b64 	%rd142, {%r206, %r205};
	xor.b64  	%rd143, %rd142, %rd141;
	add.s64 	%rd144, %rd128, %rd123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r207}, %rd128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd128;
	}
	shf.l.wrap.b32 	%r209, %r208, %r207, 22;
	shf.l.wrap.b32 	%r210, %r207, %r208, 22;
	mov.b64 	%rd145, {%r210, %r209};
	xor.b64  	%rd146, %rd145, %rd144;
	add.s64 	%rd147, %rd137, 3037510430686418139;
	add.s64 	%rd148, %rd138, %rd147;
	add.s64 	%rd149, %rd146, -1755217697375493551;
	add.s64 	%rd150, %rd141, %rd149;
	add.s64 	%rd151, %rd143, 3381563508338326579;
	add.s64 	%rd152, %rd144, %rd151;
	add.s64 	%rd153, %rd140, -3688372635733115371;
	add.s64 	%rd154, %rd135, %rd153;
	add.s64 	%rd155, %rd148, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd147;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 18;
	shf.r.wrap.b32 	%r214, %r211, %r212, 18;
	mov.b64 	%rd156, {%r214, %r213};
	xor.b64  	%rd157, %rd156, %rd155;
	add.s64 	%rd158, %rd150, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd149;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 28;
	shf.r.wrap.b32 	%r218, %r215, %r216, 28;
	mov.b64 	%rd159, {%r218, %r217};
	xor.b64  	%rd160, %rd159, %rd158;
	add.s64 	%rd161, %rd152, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r219}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r220,%dummy}, %rd151;
	}
	shf.l.wrap.b32 	%r221, %r220, %r219, 19;
	shf.l.wrap.b32 	%r222, %r219, %r220, 19;
	mov.b64 	%rd162, {%r222, %r221};
	xor.b64  	%rd163, %rd162, %rd161;
	add.s64 	%rd164, %rd154, -5288003331091182006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd153;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 27;
	shf.r.wrap.b32 	%r226, %r223, %r224, 27;
	mov.b64 	%rd165, {%r226, %r225};
	xor.b64  	%rd166, %rd165, %rd164;
	add.s64 	%rd167, %rd157, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r227,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd157;
	}
	shf.r.wrap.b32 	%r229, %r228, %r227, 31;
	shf.r.wrap.b32 	%r230, %r227, %r228, 31;
	mov.b64 	%rd168, {%r230, %r229};
	xor.b64  	%rd169, %rd168, %rd167;
	add.s64 	%rd170, %rd166, %rd161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r231}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd166;
	}
	shf.l.wrap.b32 	%r233, %r232, %r231, 27;
	shf.l.wrap.b32 	%r234, %r231, %r232, 27;
	mov.b64 	%rd171, {%r234, %r233};
	xor.b64  	%rd172, %rd171, %rd170;
	add.s64 	%rd173, %rd163, %rd164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r235}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r236,%dummy}, %rd163;
	}
	shf.l.wrap.b32 	%r237, %r236, %r235, 14;
	shf.l.wrap.b32 	%r238, %r235, %r236, 14;
	mov.b64 	%rd174, {%r238, %r237};
	xor.b64  	%rd175, %rd174, %rd173;
	add.s64 	%rd176, %rd160, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd160;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 22;
	shf.r.wrap.b32 	%r242, %r239, %r240, 22;
	mov.b64 	%rd177, {%r242, %r241};
	xor.b64  	%rd178, %rd177, %rd176;
	add.s64 	%rd179, %rd170, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r244,%dummy}, %rd169;
	}
	shf.l.wrap.b32 	%r245, %r244, %r243, 17;
	shf.l.wrap.b32 	%r246, %r243, %r244, 17;
	mov.b64 	%rd180, {%r246, %r245};
	xor.b64  	%rd181, %rd180, %rd179;
	add.s64 	%rd182, %rd178, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd178;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 15;
	shf.r.wrap.b32 	%r250, %r247, %r248, 15;
	mov.b64 	%rd183, {%r250, %r249};
	xor.b64  	%rd184, %rd183, %rd182;
	add.s64 	%rd185, %rd175, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd175;
	}
	shf.r.wrap.b32 	%r253, %r252, %r251, 28;
	shf.r.wrap.b32 	%r254, %r251, %r252, 28;
	mov.b64 	%rd186, {%r254, %r253};
	xor.b64  	%rd187, %rd186, %rd185;
	add.s64 	%rd188, %rd172, %rd167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd172;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 25;
	shf.r.wrap.b32 	%r258, %r255, %r256, 25;
	mov.b64 	%rd189, {%r258, %r257};
	xor.b64  	%rd190, %rd189, %rd188;
	add.s64 	%rd191, %rd182, %rd181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r260}, %rd181;
	}
	shf.r.wrap.b32 	%r261, %r260, %r259, 20;
	shf.r.wrap.b32 	%r262, %r259, %r260, 20;
	mov.b64 	%rd192, {%r262, %r261};
	xor.b64  	%rd193, %rd192, %rd191;
	add.s64 	%rd194, %rd190, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r263}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd190;
	}
	shf.l.wrap.b32 	%r265, %r264, %r263, 9;
	shf.l.wrap.b32 	%r266, %r263, %r264, 9;
	mov.b64 	%rd195, {%r266, %r265};
	xor.b64  	%rd196, %rd195, %rd194;
	add.s64 	%rd197, %rd187, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd187;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 10;
	shf.r.wrap.b32 	%r270, %r267, %r268, 10;
	mov.b64 	%rd198, {%r270, %r269};
	xor.b64  	%rd199, %rd198, %rd197;
	add.s64 	%rd200, %rd184, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd184;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 8;
	shf.r.wrap.b32 	%r274, %r271, %r272, 8;
	mov.b64 	%rd201, {%r274, %r273};
	xor.b64  	%rd202, %rd201, %rd200;
	add.s64 	%rd203, %rd193, -1439460426187442557;
	add.s64 	%rd204, %rd194, %rd203;
	add.s64 	%rd205, %rd202, -4364063934328942203;
	add.s64 	%rd206, %rd197, %rd205;
	add.s64 	%rd207, %rd199, -5288003331091182006;
	add.s64 	%rd208, %rd200, %rd207;
	add.s64 	%rd209, %rd196, -1714305546867594770;
	add.s64 	%rd210, %rd204, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd203;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 25;
	shf.r.wrap.b32 	%r278, %r275, %r276, 25;
	mov.b64 	%rd211, {%r278, %r277};
	xor.b64  	%rd212, %rd211, %rd210;
	add.s64 	%rd213, %rd206, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r279}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd205;
	}
	shf.l.wrap.b32 	%r281, %r280, %r279, 30;
	shf.l.wrap.b32 	%r282, %r279, %r280, 30;
	mov.b64 	%rd214, {%r282, %r281};
	xor.b64  	%rd215, %rd214, %rd213;
	add.s64 	%rd216, %rd208, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r284}, %rd207;
	}
	shf.r.wrap.b32 	%r285, %r284, %r283, 30;
	shf.r.wrap.b32 	%r286, %r283, %r284, 30;
	mov.b64 	%rd217, {%r286, %r285};
	xor.b64  	%rd218, %rd217, %rd216;
	add.s64 	%rd219, %rd191, %rd209;
	add.s64 	%rd220, %rd219, -4841294140339962349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r287}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd209;
	}
	shf.l.wrap.b32 	%r289, %r288, %r287, 24;
	shf.l.wrap.b32 	%r290, %r287, %r288, 24;
	mov.b64 	%rd221, {%r290, %r289};
	xor.b64  	%rd222, %rd221, %rd220;
	add.s64 	%rd223, %rd212, %rd213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r291}, %rd212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd212;
	}
	shf.l.wrap.b32 	%r293, %r292, %r291, 13;
	shf.l.wrap.b32 	%r294, %r291, %r292, 13;
	mov.b64 	%rd224, {%r294, %r293};
	xor.b64  	%rd225, %rd224, %rd223;
	add.s64 	%rd226, %rd222, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd222;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 14;
	shf.r.wrap.b32 	%r298, %r295, %r296, 14;
	mov.b64 	%rd227, {%r298, %r297};
	xor.b64  	%rd228, %rd227, %rd226;
	add.s64 	%rd229, %rd218, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd218;
	}
	shf.l.wrap.b32 	%r301, %r300, %r299, 10;
	shf.l.wrap.b32 	%r302, %r299, %r300, 10;
	mov.b64 	%rd230, {%r302, %r301};
	xor.b64  	%rd231, %rd230, %rd229;
	add.s64 	%rd232, %rd215, %rd210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r303}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd215;
	}
	shf.l.wrap.b32 	%r305, %r304, %r303, 17;
	shf.l.wrap.b32 	%r306, %r303, %r304, 17;
	mov.b64 	%rd233, {%r306, %r305};
	xor.b64  	%rd234, %rd233, %rd232;
	add.s64 	%rd235, %rd226, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r308,%dummy}, %rd225;
	}
	shf.l.wrap.b32 	%r309, %r308, %r307, 25;
	shf.l.wrap.b32 	%r310, %r307, %r308, 25;
	mov.b64 	%rd236, {%r310, %r309};
	xor.b64  	%rd237, %rd236, %rd235;
	add.s64 	%rd238, %rd234, %rd229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r311}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd234;
	}
	shf.l.wrap.b32 	%r313, %r312, %r311, 29;
	shf.l.wrap.b32 	%r314, %r311, %r312, 29;
	mov.b64 	%rd239, {%r314, %r313};
	xor.b64  	%rd240, %rd239, %rd238;
	add.s64 	%rd241, %rd231, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r315,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd231;
	}
	shf.r.wrap.b32 	%r317, %r316, %r315, 25;
	shf.r.wrap.b32 	%r318, %r315, %r316, 25;
	mov.b64 	%rd242, {%r318, %r317};
	xor.b64  	%rd243, %rd242, %rd241;
	add.s64 	%rd244, %rd228, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd228;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 21;
	shf.r.wrap.b32 	%r322, %r319, %r320, 21;
	mov.b64 	%rd245, {%r322, %r321};
	xor.b64  	%rd246, %rd245, %rd244;
	add.s64 	%rd247, %rd238, %rd237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd237;
	}
	shf.l.wrap.b32 	%r325, %r324, %r323, 8;
	shf.l.wrap.b32 	%r326, %r323, %r324, 8;
	mov.b64 	%rd248, {%r326, %r325};
	xor.b64  	%rd249, %rd248, %rd247;
	add.s64 	%rd250, %rd246, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r327,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd246;
	}
	shf.r.wrap.b32 	%r329, %r328, %r327, 29;
	shf.r.wrap.b32 	%r330, %r327, %r328, 29;
	mov.b64 	%rd251, {%r330, %r329};
	xor.b64  	%rd252, %rd251, %rd250;
	add.s64 	%rd253, %rd243, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd243;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 8;
	shf.r.wrap.b32 	%r334, %r331, %r332, 8;
	mov.b64 	%rd254, {%r334, %r333};
	xor.b64  	%rd255, %rd254, %rd253;
	add.s64 	%rd256, %rd240, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r335}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd240;
	}
	shf.l.wrap.b32 	%r337, %r336, %r335, 22;
	shf.l.wrap.b32 	%r338, %r335, %r336, 22;
	mov.b64 	%rd257, {%r338, %r337};
	xor.b64  	%rd258, %rd257, %rd256;
	add.s64 	%rd259, %rd249, -1755217697375493551;
	add.s64 	%rd260, %rd250, %rd259;
	add.s64 	%rd261, %rd258, 4534485012945173523;
	add.s64 	%rd262, %rd253, %rd261;
	add.s64 	%rd263, %rd255, -4841294140339962349;
	add.s64 	%rd264, %rd256, %rd263;
	add.s64 	%rd265, %rd252, 6174048478977683059;
	add.s64 	%rd266, %rd247, %rd265;
	add.s64 	%rd267, %rd260, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd259;
	}
	shf.r.wrap.b32 	%r341, %r340, %r339, 18;
	shf.r.wrap.b32 	%r342, %r339, %r340, 18;
	mov.b64 	%rd268, {%r342, %r341};
	xor.b64  	%rd269, %rd268, %rd267;
	add.s64 	%rd270, %rd262, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd261;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 28;
	shf.r.wrap.b32 	%r346, %r343, %r344, 28;
	mov.b64 	%rd271, {%r346, %r345};
	xor.b64  	%rd272, %rd271, %rd270;
	add.s64 	%rd273, %rd264, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r347}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd263;
	}
	shf.l.wrap.b32 	%r349, %r348, %r347, 19;
	shf.l.wrap.b32 	%r350, %r347, %r348, 19;
	mov.b64 	%rd274, {%r350, %r349};
	xor.b64  	%rd275, %rd274, %rd273;
	add.s64 	%rd276, %rd266, -2867227051474441717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd265;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 27;
	shf.r.wrap.b32 	%r354, %r351, %r352, 27;
	mov.b64 	%rd277, {%r354, %r353};
	xor.b64  	%rd278, %rd277, %rd276;
	add.s64 	%rd279, %rd269, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd269;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 31;
	shf.r.wrap.b32 	%r358, %r355, %r356, 31;
	mov.b64 	%rd280, {%r358, %r357};
	xor.b64  	%rd281, %rd280, %rd279;
	add.s64 	%rd282, %rd278, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r359}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd278;
	}
	shf.l.wrap.b32 	%r361, %r360, %r359, 27;
	shf.l.wrap.b32 	%r362, %r359, %r360, 27;
	mov.b64 	%rd283, {%r362, %r361};
	xor.b64  	%rd284, %rd283, %rd282;
	add.s64 	%rd285, %rd275, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd275;
	}
	shf.l.wrap.b32 	%r365, %r364, %r363, 14;
	shf.l.wrap.b32 	%r366, %r363, %r364, 14;
	mov.b64 	%rd286, {%r366, %r365};
	xor.b64  	%rd287, %rd286, %rd285;
	add.s64 	%rd288, %rd272, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd272;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 22;
	shf.r.wrap.b32 	%r370, %r367, %r368, 22;
	mov.b64 	%rd289, {%r370, %r369};
	xor.b64  	%rd290, %rd289, %rd288;
	add.s64 	%rd291, %rd282, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd281;
	}
	shf.l.wrap.b32 	%r373, %r372, %r371, 17;
	shf.l.wrap.b32 	%r374, %r371, %r372, 17;
	mov.b64 	%rd292, {%r374, %r373};
	xor.b64  	%rd293, %rd292, %rd291;
	add.s64 	%rd294, %rd290, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd290;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 15;
	shf.r.wrap.b32 	%r378, %r375, %r376, 15;
	mov.b64 	%rd295, {%r378, %r377};
	xor.b64  	%rd296, %rd295, %rd294;
	add.s64 	%rd297, %rd287, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd287;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd298, {%r382, %r381};
	xor.b64  	%rd299, %rd298, %rd297;
	add.s64 	%rd300, %rd284, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd284;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 25;
	shf.r.wrap.b32 	%r386, %r383, %r384, 25;
	mov.b64 	%rd301, {%r386, %r385};
	xor.b64  	%rd302, %rd301, %rd300;
	add.s64 	%rd303, %rd294, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd293;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 20;
	shf.r.wrap.b32 	%r390, %r387, %r388, 20;
	mov.b64 	%rd304, {%r390, %r389};
	xor.b64  	%rd305, %rd304, %rd303;
	add.s64 	%rd306, %rd302, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd302;
	}
	shf.l.wrap.b32 	%r393, %r392, %r391, 9;
	shf.l.wrap.b32 	%r394, %r391, %r392, 9;
	mov.b64 	%rd307, {%r394, %r393};
	xor.b64  	%rd308, %rd307, %rd306;
	add.s64 	%rd309, %rd299, %rd300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd299;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 10;
	shf.r.wrap.b32 	%r398, %r395, %r396, 10;
	mov.b64 	%rd310, {%r398, %r397};
	xor.b64  	%rd311, %rd310, %rd309;
	add.s64 	%rd312, %rd296, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd296;
	}
	shf.r.wrap.b32 	%r401, %r400, %r399, 8;
	shf.r.wrap.b32 	%r402, %r399, %r400, 8;
	mov.b64 	%rd313, {%r402, %r401};
	xor.b64  	%rd314, %rd313, %rd312;
	add.s64 	%rd315, %rd305, -4364063934328942203;
	add.s64 	%rd316, %rd306, %rd315;
	add.s64 	%rd317, %rd314, -5288003331091182038;
	add.s64 	%rd318, %rd309, %rd317;
	add.s64 	%rd319, %rd311, -2867227051474441717;
	add.s64 	%rd320, %rd312, %rd319;
	add.s64 	%rd321, %rd308, 3037510430686418144;
	add.s64 	%rd322, %rd316, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd315;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 25;
	shf.r.wrap.b32 	%r406, %r403, %r404, 25;
	mov.b64 	%rd323, {%r406, %r405};
	xor.b64  	%rd324, %rd323, %rd322;
	add.s64 	%rd325, %rd318, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r407}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd317;
	}
	shf.l.wrap.b32 	%r409, %r408, %r407, 30;
	shf.l.wrap.b32 	%r410, %r407, %r408, 30;
	mov.b64 	%rd326, {%r410, %r409};
	xor.b64  	%rd327, %rd326, %rd325;
	add.s64 	%rd328, %rd320, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd319;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 30;
	shf.r.wrap.b32 	%r414, %r411, %r412, 30;
	mov.b64 	%rd329, {%r414, %r413};
	xor.b64  	%rd330, %rd329, %rd328;
	add.s64 	%rd331, %rd303, %rd321;
	add.s64 	%rd332, %rd331, 6174048478977683087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd321;
	}
	shf.l.wrap.b32 	%r417, %r416, %r415, 24;
	shf.l.wrap.b32 	%r418, %r415, %r416, 24;
	mov.b64 	%rd333, {%r418, %r417};
	xor.b64  	%rd334, %rd333, %rd332;
	add.s64 	%rd335, %rd324, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd324;
	}
	shf.l.wrap.b32 	%r421, %r420, %r419, 13;
	shf.l.wrap.b32 	%r422, %r419, %r420, 13;
	mov.b64 	%rd336, {%r422, %r421};
	xor.b64  	%rd337, %rd336, %rd335;
	add.s64 	%rd338, %rd334, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r423,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd334;
	}
	shf.r.wrap.b32 	%r425, %r424, %r423, 14;
	shf.r.wrap.b32 	%r426, %r423, %r424, 14;
	mov.b64 	%rd339, {%r426, %r425};
	xor.b64  	%rd340, %rd339, %rd338;
	add.s64 	%rd341, %rd330, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd330;
	}
	shf.l.wrap.b32 	%r429, %r428, %r427, 10;
	shf.l.wrap.b32 	%r430, %r427, %r428, 10;
	mov.b64 	%rd342, {%r430, %r429};
	xor.b64  	%rd343, %rd342, %rd341;
	add.s64 	%rd344, %rd327, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r431}, %rd327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd327;
	}
	shf.l.wrap.b32 	%r433, %r432, %r431, 17;
	shf.l.wrap.b32 	%r434, %r431, %r432, 17;
	mov.b64 	%rd345, {%r434, %r433};
	xor.b64  	%rd346, %rd345, %rd344;
	add.s64 	%rd347, %rd338, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd337;
	}
	shf.l.wrap.b32 	%r437, %r436, %r435, 25;
	shf.l.wrap.b32 	%r438, %r435, %r436, 25;
	mov.b64 	%rd348, {%r438, %r437};
	xor.b64  	%rd349, %rd348, %rd347;
	add.s64 	%rd350, %rd346, %rd341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd346;
	}
	shf.l.wrap.b32 	%r441, %r440, %r439, 29;
	shf.l.wrap.b32 	%r442, %r439, %r440, 29;
	mov.b64 	%rd351, {%r442, %r441};
	xor.b64  	%rd352, %rd351, %rd350;
	add.s64 	%rd353, %rd343, %rd344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd343;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 25;
	shf.r.wrap.b32 	%r446, %r443, %r444, 25;
	mov.b64 	%rd354, {%r446, %r445};
	xor.b64  	%rd355, %rd354, %rd353;
	add.s64 	%rd356, %rd340, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd340;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 21;
	shf.r.wrap.b32 	%r450, %r447, %r448, 21;
	mov.b64 	%rd357, {%r450, %r449};
	xor.b64  	%rd358, %rd357, %rd356;
	add.s64 	%rd359, %rd350, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd349;
	}
	shf.l.wrap.b32 	%r453, %r452, %r451, 8;
	shf.l.wrap.b32 	%r454, %r451, %r452, 8;
	mov.b64 	%rd360, {%r454, %r453};
	xor.b64  	%rd361, %rd360, %rd359;
	add.s64 	%rd362, %rd358, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd358;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 29;
	shf.r.wrap.b32 	%r458, %r455, %r456, 29;
	mov.b64 	%rd363, {%r458, %r457};
	xor.b64  	%rd364, %rd363, %rd362;
	add.s64 	%rd365, %rd355, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd355;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 8;
	shf.r.wrap.b32 	%r462, %r459, %r460, 8;
	mov.b64 	%rd366, {%r462, %r461};
	xor.b64  	%rd367, %rd366, %rd365;
	add.s64 	%rd368, %rd352, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r463}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd352;
	}
	shf.l.wrap.b32 	%r465, %r464, %r463, 22;
	shf.l.wrap.b32 	%r466, %r463, %r464, 22;
	mov.b64 	%rd369, {%r466, %r465};
	xor.b64  	%rd370, %rd369, %rd368;
	add.s64 	%rd371, %rd361, 4534485012945173523;
	add.s64 	%rd372, %rd362, %rd371;
	add.s64 	%rd373, %rd370, -3688372635733115373;
	add.s64 	%rd374, %rd365, %rd373;
	add.s64 	%rd375, %rd367, 6174048478977683087;
	add.s64 	%rd376, %rd368, %rd375;
	add.s64 	%rd377, %rd364, -1439460426187442551;
	add.s64 	%rd378, %rd359, %rd377;
	add.s64 	%rd379, %rd372, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd371;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 18;
	shf.r.wrap.b32 	%r470, %r467, %r468, 18;
	mov.b64 	%rd380, {%r470, %r469};
	xor.b64  	%rd381, %rd380, %rd379;
	add.s64 	%rd382, %rd374, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd373;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 28;
	shf.r.wrap.b32 	%r474, %r471, %r472, 28;
	mov.b64 	%rd383, {%r474, %r473};
	xor.b64  	%rd384, %rd383, %rd382;
	add.s64 	%rd385, %rd376, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r475}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd375;
	}
	shf.l.wrap.b32 	%r477, %r476, %r475, 19;
	shf.l.wrap.b32 	%r478, %r475, %r476, 19;
	mov.b64 	%rd386, {%r478, %r477};
	xor.b64  	%rd387, %rd386, %rd385;
	add.s64 	%rd388, %rd378, 1884588926079571163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd377;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 27;
	shf.r.wrap.b32 	%r482, %r479, %r480, 27;
	mov.b64 	%rd389, {%r482, %r481};
	xor.b64  	%rd390, %rd389, %rd388;
	add.s64 	%rd391, %rd381, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd381;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 31;
	shf.r.wrap.b32 	%r486, %r483, %r484, 31;
	mov.b64 	%rd392, {%r486, %r485};
	xor.b64  	%rd393, %rd392, %rd391;
	add.s64 	%rd394, %rd390, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd390;
	}
	shf.l.wrap.b32 	%r489, %r488, %r487, 27;
	shf.l.wrap.b32 	%r490, %r487, %r488, 27;
	mov.b64 	%rd395, {%r490, %r489};
	xor.b64  	%rd396, %rd395, %rd394;
	add.s64 	%rd397, %rd387, %rd388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r491}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd387;
	}
	shf.l.wrap.b32 	%r493, %r492, %r491, 14;
	shf.l.wrap.b32 	%r494, %r491, %r492, 14;
	mov.b64 	%rd398, {%r494, %r493};
	xor.b64  	%rd399, %rd398, %rd397;
	add.s64 	%rd400, %rd384, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd384;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 22;
	shf.r.wrap.b32 	%r498, %r495, %r496, 22;
	mov.b64 	%rd401, {%r498, %r497};
	xor.b64  	%rd402, %rd401, %rd400;
	add.s64 	%rd403, %rd394, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd393;
	}
	shf.l.wrap.b32 	%r501, %r500, %r499, 17;
	shf.l.wrap.b32 	%r502, %r499, %r500, 17;
	mov.b64 	%rd404, {%r502, %r501};
	xor.b64  	%rd405, %rd404, %rd403;
	add.s64 	%rd406, %rd402, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd402;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 15;
	shf.r.wrap.b32 	%r506, %r503, %r504, 15;
	mov.b64 	%rd407, {%r506, %r505};
	xor.b64  	%rd408, %rd407, %rd406;
	add.s64 	%rd409, %rd399, %rd400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd399;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 28;
	shf.r.wrap.b32 	%r510, %r507, %r508, 28;
	mov.b64 	%rd410, {%r510, %r509};
	xor.b64  	%rd411, %rd410, %rd409;
	add.s64 	%rd412, %rd396, %rd391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd396;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 25;
	shf.r.wrap.b32 	%r514, %r511, %r512, 25;
	mov.b64 	%rd413, {%r514, %r513};
	xor.b64  	%rd414, %rd413, %rd412;
	add.s64 	%rd415, %rd406, %rd405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd405;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 20;
	shf.r.wrap.b32 	%r518, %r515, %r516, 20;
	mov.b64 	%rd416, {%r518, %r517};
	xor.b64  	%rd417, %rd416, %rd415;
	add.s64 	%rd418, %rd414, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r519}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd414;
	}
	shf.l.wrap.b32 	%r521, %r520, %r519, 9;
	shf.l.wrap.b32 	%r522, %r519, %r520, 9;
	mov.b64 	%rd419, {%r522, %r521};
	xor.b64  	%rd420, %rd419, %rd418;
	add.s64 	%rd421, %rd411, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd411;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 10;
	shf.r.wrap.b32 	%r526, %r523, %r524, 10;
	mov.b64 	%rd422, {%r526, %r525};
	xor.b64  	%rd423, %rd422, %rd421;
	add.s64 	%rd424, %rd408, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd408;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 8;
	shf.r.wrap.b32 	%r530, %r527, %r528, 8;
	mov.b64 	%rd425, {%r530, %r529};
	xor.b64  	%rd426, %rd425, %rd424;
	add.s64 	%rd427, %rd417, -5288003331091182038;
	add.s64 	%rd428, %rd418, %rd427;
	add.s64 	%rd429, %rd426, -1714305546867594773;
	add.s64 	%rd430, %rd421, %rd429;
	add.s64 	%rd431, %rd423, 1884588926079571163;
	add.s64 	%rd432, %rd424, %rd431;
	add.s64 	%rd433, %rd420, -1755217697375493544;
	add.s64 	%rd434, %rd428, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd427;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 25;
	shf.r.wrap.b32 	%r534, %r531, %r532, 25;
	mov.b64 	%rd435, {%r534, %r533};
	xor.b64  	%rd436, %rd435, %rd434;
	add.s64 	%rd437, %rd430, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd429;
	}
	shf.l.wrap.b32 	%r537, %r536, %r535, 30;
	shf.l.wrap.b32 	%r538, %r535, %r536, 30;
	mov.b64 	%rd438, {%r538, %r537};
	xor.b64  	%rd439, %rd438, %rd437;
	add.s64 	%rd440, %rd432, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd431;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 30;
	shf.r.wrap.b32 	%r542, %r539, %r540, 30;
	mov.b64 	%rd441, {%r542, %r541};
	xor.b64  	%rd442, %rd441, %rd440;
	add.s64 	%rd443, %rd415, %rd433;
	add.s64 	%rd444, %rd443, -2592381930794289501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r543}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd433;
	}
	shf.l.wrap.b32 	%r545, %r544, %r543, 24;
	shf.l.wrap.b32 	%r546, %r543, %r544, 24;
	mov.b64 	%rd445, {%r546, %r545};
	xor.b64  	%rd446, %rd445, %rd444;
	add.s64 	%rd447, %rd436, %rd437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd436;
	}
	shf.l.wrap.b32 	%r549, %r548, %r547, 13;
	shf.l.wrap.b32 	%r550, %r547, %r548, 13;
	mov.b64 	%rd448, {%r550, %r549};
	xor.b64  	%rd449, %rd448, %rd447;
	add.s64 	%rd450, %rd446, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd446;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 14;
	shf.r.wrap.b32 	%r554, %r551, %r552, 14;
	mov.b64 	%rd451, {%r554, %r553};
	xor.b64  	%rd452, %rd451, %rd450;
	add.s64 	%rd453, %rd442, %rd444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd442;
	}
	shf.l.wrap.b32 	%r557, %r556, %r555, 10;
	shf.l.wrap.b32 	%r558, %r555, %r556, 10;
	mov.b64 	%rd454, {%r558, %r557};
	xor.b64  	%rd455, %rd454, %rd453;
	add.s64 	%rd456, %rd439, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r559}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd439;
	}
	shf.l.wrap.b32 	%r561, %r560, %r559, 17;
	shf.l.wrap.b32 	%r562, %r559, %r560, 17;
	mov.b64 	%rd457, {%r562, %r561};
	xor.b64  	%rd458, %rd457, %rd456;
	add.s64 	%rd459, %rd450, %rd449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd449;
	}
	shf.l.wrap.b32 	%r565, %r564, %r563, 25;
	shf.l.wrap.b32 	%r566, %r563, %r564, 25;
	mov.b64 	%rd460, {%r566, %r565};
	xor.b64  	%rd461, %rd460, %rd459;
	add.s64 	%rd462, %rd458, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r567}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd458;
	}
	shf.l.wrap.b32 	%r569, %r568, %r567, 29;
	shf.l.wrap.b32 	%r570, %r567, %r568, 29;
	mov.b64 	%rd463, {%r570, %r569};
	xor.b64  	%rd464, %rd463, %rd462;
	add.s64 	%rd465, %rd455, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd455;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 25;
	shf.r.wrap.b32 	%r574, %r571, %r572, 25;
	mov.b64 	%rd466, {%r574, %r573};
	xor.b64  	%rd467, %rd466, %rd465;
	add.s64 	%rd468, %rd452, %rd447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd452;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 21;
	shf.r.wrap.b32 	%r578, %r575, %r576, 21;
	mov.b64 	%rd469, {%r578, %r577};
	xor.b64  	%rd470, %rd469, %rd468;
	add.s64 	%rd471, %rd462, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd461;
	}
	shf.l.wrap.b32 	%r581, %r580, %r579, 8;
	shf.l.wrap.b32 	%r582, %r579, %r580, 8;
	mov.b64 	%rd472, {%r582, %r581};
	xor.b64  	%rd473, %rd472, %rd471;
	add.s64 	%rd474, %rd470, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd470;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 29;
	shf.r.wrap.b32 	%r586, %r583, %r584, 29;
	mov.b64 	%rd475, {%r586, %r585};
	xor.b64  	%rd476, %rd475, %rd474;
	add.s64 	%rd477, %rd467, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd467;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 8;
	shf.r.wrap.b32 	%r590, %r587, %r588, 8;
	mov.b64 	%rd478, {%r590, %r589};
	xor.b64  	%rd479, %rd478, %rd477;
	add.s64 	%rd480, %rd464, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd464;
	}
	shf.l.wrap.b32 	%r593, %r592, %r591, 22;
	shf.l.wrap.b32 	%r594, %r591, %r592, 22;
	mov.b64 	%rd481, {%r594, %r593};
	xor.b64  	%rd482, %rd481, %rd480;
	add.s64 	%rd483, %rd473, -3688372635733115373;
	add.s64 	%rd484, %rd474, %rd483;
	add.s64 	%rd485, %rd482, 6174048478977683055;
	add.s64 	%rd486, %rd477, %rd485;
	add.s64 	%rd487, %rd479, -2592381930794289501;
	add.s64 	%rd488, %rd480, %rd487;
	add.s64 	%rd489, %rd476, -4364063934328942195;
	add.s64 	%rd490, %rd471, %rd489;
	add.s64 	%rd491, %rd484, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd483;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 18;
	shf.r.wrap.b32 	%r598, %r595, %r596, 18;
	mov.b64 	%rd492, {%r598, %r597};
	xor.b64  	%rd493, %rd492, %rd491;
	add.s64 	%rd494, %rd486, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd485;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 28;
	shf.r.wrap.b32 	%r602, %r599, %r600, 28;
	mov.b64 	%rd495, {%r602, %r601};
	xor.b64  	%rd496, %rd495, %rd494;
	add.s64 	%rd497, %rd488, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r603}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd487;
	}
	shf.l.wrap.b32 	%r605, %r604, %r603, 19;
	shf.l.wrap.b32 	%r606, %r603, %r604, 19;
	mov.b64 	%rd498, {%r606, %r605};
	xor.b64  	%rd499, %rd498, %rd497;
	add.s64 	%rd500, %rd490, -1755217697375493519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd489;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 27;
	shf.r.wrap.b32 	%r610, %r607, %r608, 27;
	mov.b64 	%rd501, {%r610, %r609};
	xor.b64  	%rd502, %rd501, %rd500;
	add.s64 	%rd503, %rd493, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd493;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 31;
	shf.r.wrap.b32 	%r614, %r611, %r612, 31;
	mov.b64 	%rd504, {%r614, %r613};
	xor.b64  	%rd505, %rd504, %rd503;
	add.s64 	%rd506, %rd502, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd502;
	}
	shf.l.wrap.b32 	%r617, %r616, %r615, 27;
	shf.l.wrap.b32 	%r618, %r615, %r616, 27;
	mov.b64 	%rd507, {%r618, %r617};
	xor.b64  	%rd508, %rd507, %rd506;
	add.s64 	%rd509, %rd499, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd499;
	}
	shf.l.wrap.b32 	%r621, %r620, %r619, 14;
	shf.l.wrap.b32 	%r622, %r619, %r620, 14;
	mov.b64 	%rd510, {%r622, %r621};
	xor.b64  	%rd511, %rd510, %rd509;
	add.s64 	%rd512, %rd496, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd496;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 22;
	shf.r.wrap.b32 	%r626, %r623, %r624, 22;
	mov.b64 	%rd513, {%r626, %r625};
	xor.b64  	%rd514, %rd513, %rd512;
	add.s64 	%rd515, %rd506, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd505;
	}
	shf.l.wrap.b32 	%r629, %r628, %r627, 17;
	shf.l.wrap.b32 	%r630, %r627, %r628, 17;
	mov.b64 	%rd516, {%r630, %r629};
	xor.b64  	%rd517, %rd516, %rd515;
	add.s64 	%rd518, %rd514, %rd509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd514;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 15;
	shf.r.wrap.b32 	%r634, %r631, %r632, 15;
	mov.b64 	%rd519, {%r634, %r633};
	xor.b64  	%rd520, %rd519, %rd518;
	add.s64 	%rd521, %rd511, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd511;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 28;
	shf.r.wrap.b32 	%r638, %r635, %r636, 28;
	mov.b64 	%rd522, {%r638, %r637};
	xor.b64  	%rd523, %rd522, %rd521;
	add.s64 	%rd524, %rd508, %rd503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd508;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 25;
	shf.r.wrap.b32 	%r642, %r639, %r640, 25;
	mov.b64 	%rd525, {%r642, %r641};
	xor.b64  	%rd526, %rd525, %rd524;
	add.s64 	%rd527, %rd518, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd517;
	}
	shf.r.wrap.b32 	%r645, %r644, %r643, 20;
	shf.r.wrap.b32 	%r646, %r643, %r644, 20;
	mov.b64 	%rd528, {%r646, %r645};
	xor.b64  	%rd529, %rd528, %rd527;
	add.s64 	%rd530, %rd526, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd526;
	}
	shf.l.wrap.b32 	%r649, %r648, %r647, 9;
	shf.l.wrap.b32 	%r650, %r647, %r648, 9;
	mov.b64 	%rd531, {%r650, %r649};
	xor.b64  	%rd532, %rd531, %rd530;
	add.s64 	%rd533, %rd523, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r651,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd523;
	}
	shf.r.wrap.b32 	%r653, %r652, %r651, 10;
	shf.r.wrap.b32 	%r654, %r651, %r652, 10;
	mov.b64 	%rd534, {%r654, %r653};
	xor.b64  	%rd535, %rd534, %rd533;
	add.s64 	%rd536, %rd520, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd520;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 8;
	shf.r.wrap.b32 	%r658, %r655, %r656, 8;
	mov.b64 	%rd537, {%r658, %r657};
	xor.b64  	%rd538, %rd537, %rd536;
	add.s64 	%rd539, %rd529, -1714305546867594773;
	add.s64 	%rd540, %rd530, %rd539;
	add.s64 	%rd541, %rd538, 3037510430686418139;
	add.s64 	%rd542, %rd533, %rd541;
	add.s64 	%rd543, %rd535, -1755217697375493519;
	add.s64 	%rd544, %rd536, %rd543;
	add.s64 	%rd545, %rd532, 4534485012945173532;
	add.s64 	%rd546, %rd540, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd539;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 25;
	shf.r.wrap.b32 	%r662, %r659, %r660, 25;
	mov.b64 	%rd547, {%r662, %r661};
	xor.b64  	%rd548, %rd547, %rd546;
	add.s64 	%rd549, %rd542, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd541;
	}
	shf.l.wrap.b32 	%r665, %r664, %r663, 30;
	shf.l.wrap.b32 	%r666, %r663, %r664, 30;
	mov.b64 	%rd550, {%r666, %r665};
	xor.b64  	%rd551, %rd550, %rd549;
	add.s64 	%rd552, %rd544, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd543;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 30;
	shf.r.wrap.b32 	%r670, %r667, %r668, 30;
	mov.b64 	%rd553, {%r670, %r669};
	xor.b64  	%rd554, %rd553, %rd552;
	add.s64 	%rd555, %rd527, %rd545;
	add.s64 	%rd556, %rd555, -5516985438935789179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd545;
	}
	shf.l.wrap.b32 	%r673, %r672, %r671, 24;
	shf.l.wrap.b32 	%r674, %r671, %r672, 24;
	mov.b64 	%rd557, {%r674, %r673};
	xor.b64  	%rd558, %rd557, %rd556;
	add.s64 	%rd559, %rd548, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd548;
	}
	shf.l.wrap.b32 	%r677, %r676, %r675, 13;
	shf.l.wrap.b32 	%r678, %r675, %r676, 13;
	mov.b64 	%rd560, {%r678, %r677};
	xor.b64  	%rd561, %rd560, %rd559;
	add.s64 	%rd562, %rd558, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd558;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 14;
	shf.r.wrap.b32 	%r682, %r679, %r680, 14;
	mov.b64 	%rd563, {%r682, %r681};
	xor.b64  	%rd564, %rd563, %rd562;
	add.s64 	%rd565, %rd554, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd554;
	}
	shf.l.wrap.b32 	%r685, %r684, %r683, 10;
	shf.l.wrap.b32 	%r686, %r683, %r684, 10;
	mov.b64 	%rd566, {%r686, %r685};
	xor.b64  	%rd567, %rd566, %rd565;
	add.s64 	%rd568, %rd551, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r687}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd551;
	}
	shf.l.wrap.b32 	%r689, %r688, %r687, 17;
	shf.l.wrap.b32 	%r690, %r687, %r688, 17;
	mov.b64 	%rd569, {%r690, %r689};
	xor.b64  	%rd570, %rd569, %rd568;
	add.s64 	%rd571, %rd562, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r692,%dummy}, %rd561;
	}
	shf.l.wrap.b32 	%r693, %r692, %r691, 25;
	shf.l.wrap.b32 	%r694, %r691, %r692, 25;
	mov.b64 	%rd572, {%r694, %r693};
	xor.b64  	%rd573, %rd572, %rd571;
	add.s64 	%rd574, %rd570, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd570;
	}
	shf.l.wrap.b32 	%r697, %r696, %r695, 29;
	shf.l.wrap.b32 	%r698, %r695, %r696, 29;
	mov.b64 	%rd575, {%r698, %r697};
	xor.b64  	%rd576, %rd575, %rd574;
	add.s64 	%rd577, %rd567, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd567;
	}
	shf.r.wrap.b32 	%r701, %r700, %r699, 25;
	shf.r.wrap.b32 	%r702, %r699, %r700, 25;
	mov.b64 	%rd578, {%r702, %r701};
	xor.b64  	%rd579, %rd578, %rd577;
	add.s64 	%rd580, %rd564, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd564;
	}
	shf.r.wrap.b32 	%r705, %r704, %r703, 21;
	shf.r.wrap.b32 	%r706, %r703, %r704, 21;
	mov.b64 	%rd581, {%r706, %r705};
	xor.b64  	%rd582, %rd581, %rd580;
	add.s64 	%rd583, %rd574, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd573;
	}
	shf.l.wrap.b32 	%r709, %r708, %r707, 8;
	shf.l.wrap.b32 	%r710, %r707, %r708, 8;
	mov.b64 	%rd584, {%r710, %r709};
	xor.b64  	%rd585, %rd584, %rd583;
	add.s64 	%rd586, %rd582, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd582;
	}
	shf.r.wrap.b32 	%r713, %r712, %r711, 29;
	shf.r.wrap.b32 	%r714, %r711, %r712, 29;
	mov.b64 	%rd587, {%r714, %r713};
	xor.b64  	%rd588, %rd587, %rd586;
	add.s64 	%rd589, %rd579, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd579;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 8;
	shf.r.wrap.b32 	%r718, %r715, %r716, 8;
	mov.b64 	%rd590, {%r718, %r717};
	xor.b64  	%rd591, %rd590, %rd589;
	add.s64 	%rd592, %rd576, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd576;
	}
	shf.l.wrap.b32 	%r721, %r720, %r719, 22;
	shf.l.wrap.b32 	%r722, %r719, %r720, 22;
	mov.b64 	%rd593, {%r722, %r721};
	xor.b64  	%rd594, %rd593, %rd592;
	add.s64 	%rd595, %rd585, 6174048478977683055;
	add.s64 	%rd596, %rd586, %rd595;
	add.s64 	%rd597, %rd594, -1439460426187442557;
	add.s64 	%rd598, %rd589, %rd597;
	add.s64 	%rd599, %rd591, -5516985438935789179;
	add.s64 	%rd600, %rd592, %rd599;
	add.s64 	%rd601, %rd588, -5288003331091182028;
	add.s64 	%rd602, %rd583, %rd601;
	add.s64 	%rd603, %rd596, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd595;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 18;
	shf.r.wrap.b32 	%r726, %r723, %r724, 18;
	mov.b64 	%rd604, {%r726, %r725};
	xor.b64  	%rd605, %rd604, %rd603;
	add.s64 	%rd606, %rd598, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd597;
	}
	shf.r.wrap.b32 	%r729, %r728, %r727, 28;
	shf.r.wrap.b32 	%r730, %r727, %r728, 28;
	mov.b64 	%rd607, {%r730, %r729};
	xor.b64  	%rd608, %rd607, %rd606;
	add.s64 	%rd609, %rd600, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd599;
	}
	shf.l.wrap.b32 	%r733, %r732, %r731, 19;
	shf.l.wrap.b32 	%r734, %r731, %r732, 19;
	mov.b64 	%rd610, {%r734, %r733};
	xor.b64  	%rd611, %rd610, %rd609;
	add.s64 	%rd612, %rd602, 3381563508338326579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd601;
	}
	shf.r.wrap.b32 	%r737, %r736, %r735, 27;
	shf.r.wrap.b32 	%r738, %r735, %r736, 27;
	mov.b64 	%rd613, {%r738, %r737};
	xor.b64  	%rd614, %rd613, %rd612;
	add.s64 	%rd615, %rd605, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd605;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 31;
	shf.r.wrap.b32 	%r742, %r739, %r740, 31;
	mov.b64 	%rd616, {%r742, %r741};
	xor.b64  	%rd617, %rd616, %rd615;
	add.s64 	%rd618, %rd614, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd614;
	}
	shf.l.wrap.b32 	%r745, %r744, %r743, 27;
	shf.l.wrap.b32 	%r746, %r743, %r744, 27;
	mov.b64 	%rd619, {%r746, %r745};
	xor.b64  	%rd620, %rd619, %rd618;
	add.s64 	%rd621, %rd611, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r747}, %rd611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd611;
	}
	shf.l.wrap.b32 	%r749, %r748, %r747, 14;
	shf.l.wrap.b32 	%r750, %r747, %r748, 14;
	mov.b64 	%rd622, {%r750, %r749};
	xor.b64  	%rd623, %rd622, %rd621;
	add.s64 	%rd624, %rd608, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd608;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 22;
	shf.r.wrap.b32 	%r754, %r751, %r752, 22;
	mov.b64 	%rd625, {%r754, %r753};
	xor.b64  	%rd626, %rd625, %rd624;
	add.s64 	%rd627, %rd618, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd617;
	}
	shf.l.wrap.b32 	%r757, %r756, %r755, 17;
	shf.l.wrap.b32 	%r758, %r755, %r756, 17;
	mov.b64 	%rd628, {%r758, %r757};
	xor.b64  	%rd629, %rd628, %rd627;
	add.s64 	%rd630, %rd626, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd626;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 15;
	shf.r.wrap.b32 	%r762, %r759, %r760, 15;
	mov.b64 	%rd631, {%r762, %r761};
	xor.b64  	%rd632, %rd631, %rd630;
	add.s64 	%rd633, %rd623, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r763,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r764}, %rd623;
	}
	shf.r.wrap.b32 	%r765, %r764, %r763, 28;
	shf.r.wrap.b32 	%r766, %r763, %r764, 28;
	mov.b64 	%rd634, {%r766, %r765};
	xor.b64  	%rd635, %rd634, %rd633;
	add.s64 	%rd636, %rd620, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd620;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 25;
	shf.r.wrap.b32 	%r770, %r767, %r768, 25;
	mov.b64 	%rd637, {%r770, %r769};
	xor.b64  	%rd638, %rd637, %rd636;
	add.s64 	%rd639, %rd630, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd629;
	}
	shf.r.wrap.b32 	%r773, %r772, %r771, 20;
	shf.r.wrap.b32 	%r774, %r771, %r772, 20;
	mov.b64 	%rd640, {%r774, %r773};
	xor.b64  	%rd641, %rd640, %rd639;
	add.s64 	%rd642, %rd638, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r776,%dummy}, %rd638;
	}
	shf.l.wrap.b32 	%r777, %r776, %r775, 9;
	shf.l.wrap.b32 	%r778, %r775, %r776, 9;
	mov.b64 	%rd643, {%r778, %r777};
	xor.b64  	%rd644, %rd643, %rd642;
	add.s64 	%rd645, %rd635, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd635;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 10;
	shf.r.wrap.b32 	%r782, %r779, %r780, 10;
	mov.b64 	%rd646, {%r782, %r781};
	xor.b64  	%rd647, %rd646, %rd645;
	add.s64 	%rd648, %rd632, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd632;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 8;
	shf.r.wrap.b32 	%r786, %r783, %r784, 8;
	mov.b64 	%rd649, {%r786, %r785};
	xor.b64  	%rd650, %rd649, %rd648;
	add.s64 	%rd651, %rd641, 3037510430686418139;
	add.s64 	%rd652, %rd642, %rd651;
	add.s64 	%rd653, %rd650, -1755217697375493551;
	add.s64 	%rd654, %rd645, %rd653;
	add.s64 	%rd655, %rd647, 3381563508338326579;
	add.s64 	%rd656, %rd648, %rd655;
	add.s64 	%rd657, %rd644, -3688372635733115362;
	add.s64 	%rd658, %rd652, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd651;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 25;
	shf.r.wrap.b32 	%r790, %r787, %r788, 25;
	mov.b64 	%rd659, {%r790, %r789};
	xor.b64  	%rd660, %rd659, %rd658;
	add.s64 	%rd661, %rd654, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r792,%dummy}, %rd653;
	}
	shf.l.wrap.b32 	%r793, %r792, %r791, 30;
	shf.l.wrap.b32 	%r794, %r791, %r792, 30;
	mov.b64 	%rd662, {%r794, %r793};
	xor.b64  	%rd663, %rd662, %rd661;
	add.s64 	%rd664, %rd656, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd655;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 30;
	shf.r.wrap.b32 	%r798, %r795, %r796, 30;
	mov.b64 	%rd665, {%r798, %r797};
	xor.b64  	%rd666, %rd665, %rd664;
	add.s64 	%rd667, %rd639, %rd657;
	add.s64 	%rd668, %rd667, -5288003331091182006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r800,%dummy}, %rd657;
	}
	shf.l.wrap.b32 	%r801, %r800, %r799, 24;
	shf.l.wrap.b32 	%r802, %r799, %r800, 24;
	mov.b64 	%rd669, {%r802, %r801};
	xor.b64  	%rd670, %rd669, %rd668;
	add.s64 	%rd671, %rd660, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r804,%dummy}, %rd660;
	}
	shf.l.wrap.b32 	%r805, %r804, %r803, 13;
	shf.l.wrap.b32 	%r806, %r803, %r804, 13;
	mov.b64 	%rd672, {%r806, %r805};
	xor.b64  	%rd673, %rd672, %rd671;
	add.s64 	%rd674, %rd670, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd670;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 14;
	shf.r.wrap.b32 	%r810, %r807, %r808, 14;
	mov.b64 	%rd675, {%r810, %r809};
	xor.b64  	%rd676, %rd675, %rd674;
	add.s64 	%rd677, %rd666, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd666;
	}
	shf.l.wrap.b32 	%r813, %r812, %r811, 10;
	shf.l.wrap.b32 	%r814, %r811, %r812, 10;
	mov.b64 	%rd678, {%r814, %r813};
	xor.b64  	%rd679, %rd678, %rd677;
	add.s64 	%rd680, %rd663, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd663;
	}
	shf.l.wrap.b32 	%r817, %r816, %r815, 17;
	shf.l.wrap.b32 	%r818, %r815, %r816, 17;
	mov.b64 	%rd681, {%r818, %r817};
	xor.b64  	%rd682, %rd681, %rd680;
	add.s64 	%rd683, %rd674, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r819}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd673;
	}
	shf.l.wrap.b32 	%r821, %r820, %r819, 25;
	shf.l.wrap.b32 	%r822, %r819, %r820, 25;
	mov.b64 	%rd684, {%r822, %r821};
	xor.b64  	%rd685, %rd684, %rd683;
	add.s64 	%rd686, %rd682, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd682;
	}
	shf.l.wrap.b32 	%r825, %r824, %r823, 29;
	shf.l.wrap.b32 	%r826, %r823, %r824, 29;
	mov.b64 	%rd687, {%r826, %r825};
	xor.b64  	%rd688, %rd687, %rd686;
	add.s64 	%rd689, %rd679, %rd680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd679;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 25;
	shf.r.wrap.b32 	%r830, %r827, %r828, 25;
	mov.b64 	%rd690, {%r830, %r829};
	xor.b64  	%rd691, %rd690, %rd689;
	add.s64 	%rd692, %rd676, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd676;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 21;
	shf.r.wrap.b32 	%r834, %r831, %r832, 21;
	mov.b64 	%rd693, {%r834, %r833};
	xor.b64  	%rd694, %rd693, %rd692;
	add.s64 	%rd695, %rd686, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r835}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r836,%dummy}, %rd685;
	}
	shf.l.wrap.b32 	%r837, %r836, %r835, 8;
	shf.l.wrap.b32 	%r838, %r835, %r836, 8;
	mov.b64 	%rd696, {%r838, %r837};
	xor.b64  	%rd697, %rd696, %rd695;
	add.s64 	%rd698, %rd694, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd694;
	}
	shf.r.wrap.b32 	%r841, %r840, %r839, 29;
	shf.r.wrap.b32 	%r842, %r839, %r840, 29;
	mov.b64 	%rd699, {%r842, %r841};
	xor.b64  	%rd700, %rd699, %rd698;
	add.s64 	%rd701, %rd691, %rd692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd691;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 8;
	shf.r.wrap.b32 	%r846, %r843, %r844, 8;
	mov.b64 	%rd702, {%r846, %r845};
	xor.b64  	%rd703, %rd702, %rd701;
	add.s64 	%rd704, %rd688, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r848,%dummy}, %rd688;
	}
	shf.l.wrap.b32 	%r849, %r848, %r847, 22;
	shf.l.wrap.b32 	%r850, %r847, %r848, 22;
	mov.b64 	%rd705, {%r850, %r849};
	xor.b64  	%rd706, %rd705, %rd704;
	add.s64 	%rd707, %rd697, -1439460426187442557;
	add.s64 	%rd708, %rd698, %rd707;
	add.s64 	%rd709, %rd706, -4364063934328942203;
	add.s64 	%rd710, %rd701, %rd709;
	add.s64 	%rd711, %rd703, -5288003331091182006;
	add.s64 	%rd712, %rd704, %rd711;
	add.s64 	%rd713, %rd700, -1714305546867594761;
	add.s64 	%rd714, %rd695, %rd713;
	add.s64 	%rd715, %rd708, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd707;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 18;
	shf.r.wrap.b32 	%r854, %r851, %r852, 18;
	mov.b64 	%rd716, {%r854, %r853};
	xor.b64  	%rd717, %rd716, %rd715;
	add.s64 	%rd718, %rd710, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd709;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 28;
	shf.r.wrap.b32 	%r858, %r855, %r856, 28;
	mov.b64 	%rd719, {%r858, %r857};
	xor.b64  	%rd720, %rd719, %rd718;
	add.s64 	%rd721, %rd712, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r860,%dummy}, %rd711;
	}
	shf.l.wrap.b32 	%r861, %r860, %r859, 19;
	shf.l.wrap.b32 	%r862, %r859, %r860, 19;
	mov.b64 	%rd722, {%r862, %r861};
	xor.b64  	%rd723, %rd722, %rd721;
	add.s64 	%rd724, %rd714, -4841294140339962349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd713;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 27;
	shf.r.wrap.b32 	%r866, %r863, %r864, 27;
	mov.b64 	%rd725, {%r866, %r865};
	xor.b64  	%rd726, %rd725, %rd724;
	add.s64 	%rd727, %rd717, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd717;
	}
	shf.r.wrap.b32 	%r869, %r868, %r867, 31;
	shf.r.wrap.b32 	%r870, %r867, %r868, 31;
	mov.b64 	%rd728, {%r870, %r869};
	xor.b64  	%rd729, %rd728, %rd727;
	add.s64 	%rd730, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r872,%dummy}, %rd726;
	}
	shf.l.wrap.b32 	%r873, %r872, %r871, 27;
	shf.l.wrap.b32 	%r874, %r871, %r872, 27;
	mov.b64 	%rd731, {%r874, %r873};
	xor.b64  	%rd732, %rd731, %rd730;
	add.s64 	%rd733, %rd723, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r875}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd723;
	}
	shf.l.wrap.b32 	%r877, %r876, %r875, 14;
	shf.l.wrap.b32 	%r878, %r875, %r876, 14;
	mov.b64 	%rd734, {%r878, %r877};
	xor.b64  	%rd735, %rd734, %rd733;
	add.s64 	%rd736, %rd720, %rd715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd720;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 22;
	shf.r.wrap.b32 	%r882, %r879, %r880, 22;
	mov.b64 	%rd737, {%r882, %r881};
	xor.b64  	%rd738, %rd737, %rd736;
	add.s64 	%rd739, %rd730, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd729;
	}
	shf.l.wrap.b32 	%r885, %r884, %r883, 17;
	shf.l.wrap.b32 	%r886, %r883, %r884, 17;
	mov.b64 	%rd740, {%r886, %r885};
	xor.b64  	%rd741, %rd740, %rd739;
	add.s64 	%rd742, %rd738, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd738;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 15;
	shf.r.wrap.b32 	%r890, %r887, %r888, 15;
	mov.b64 	%rd743, {%r890, %r889};
	xor.b64  	%rd744, %rd743, %rd742;
	add.s64 	%rd745, %rd735, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd735;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 28;
	shf.r.wrap.b32 	%r894, %r891, %r892, 28;
	mov.b64 	%rd746, {%r894, %r893};
	xor.b64  	%rd747, %rd746, %rd745;
	add.s64 	%rd748, %rd732, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd732;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 25;
	shf.r.wrap.b32 	%r898, %r895, %r896, 25;
	mov.b64 	%rd749, {%r898, %r897};
	xor.b64  	%rd750, %rd749, %rd748;
	add.s64 	%rd751, %rd742, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd741;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 20;
	shf.r.wrap.b32 	%r902, %r899, %r900, 20;
	mov.b64 	%rd752, {%r902, %r901};
	xor.b64  	%rd753, %rd752, %rd751;
	add.s64 	%rd754, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r904,%dummy}, %rd750;
	}
	shf.l.wrap.b32 	%r905, %r904, %r903, 9;
	shf.l.wrap.b32 	%r906, %r903, %r904, 9;
	mov.b64 	%rd755, {%r906, %r905};
	xor.b64  	%rd756, %rd755, %rd754;
	add.s64 	%rd757, %rd747, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd747;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 10;
	shf.r.wrap.b32 	%r910, %r907, %r908, 10;
	mov.b64 	%rd758, {%r910, %r909};
	xor.b64  	%rd759, %rd758, %rd757;
	add.s64 	%rd760, %rd744, %rd739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd744;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 8;
	shf.r.wrap.b32 	%r914, %r911, %r912, 8;
	mov.b64 	%rd761, {%r914, %r913};
	xor.b64  	%rd762, %rd761, %rd760;
	add.s64 	%rd763, %rd753, -1755217697375493551;
	add.s64 	%rd764, %rd754, %rd763;
	add.s64 	%rd765, %rd762, 4534485012945173523;
	add.s64 	%rd766, %rd757, %rd765;
	add.s64 	%rd767, %rd759, -4841294140339962349;
	add.s64 	%rd768, %rd760, %rd767;
	add.s64 	%rd769, %rd756, 6174048478977683068;
	add.s64 	%rd770, %rd764, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd763;
	}
	shf.r.wrap.b32 	%r917, %r916, %r915, 25;
	shf.r.wrap.b32 	%r918, %r915, %r916, 25;
	mov.b64 	%rd771, {%r918, %r917};
	xor.b64  	%rd772, %rd771, %rd770;
	add.s64 	%rd773, %rd766, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r920,%dummy}, %rd765;
	}
	shf.l.wrap.b32 	%r921, %r920, %r919, 30;
	shf.l.wrap.b32 	%r922, %r919, %r920, 30;
	mov.b64 	%rd774, {%r922, %r921};
	xor.b64  	%rd775, %rd774, %rd773;
	add.s64 	%rd776, %rd768, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd767;
	}
	shf.r.wrap.b32 	%r925, %r924, %r923, 30;
	shf.r.wrap.b32 	%r926, %r923, %r924, 30;
	mov.b64 	%rd777, {%r926, %r925};
	xor.b64  	%rd778, %rd777, %rd776;
	add.s64 	%rd779, %rd751, %rd769;
	add.s64 	%rd780, %rd779, -2867227051474441717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd769;
	}
	shf.l.wrap.b32 	%r929, %r928, %r927, 24;
	shf.l.wrap.b32 	%r930, %r927, %r928, 24;
	mov.b64 	%rd781, {%r930, %r929};
	xor.b64  	%rd782, %rd781, %rd780;
	add.s64 	%rd783, %rd772, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r932,%dummy}, %rd772;
	}
	shf.l.wrap.b32 	%r933, %r932, %r931, 13;
	shf.l.wrap.b32 	%r934, %r931, %r932, 13;
	mov.b64 	%rd784, {%r934, %r933};
	xor.b64  	%rd785, %rd784, %rd783;
	add.s64 	%rd786, %rd782, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd782;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 14;
	shf.r.wrap.b32 	%r938, %r935, %r936, 14;
	mov.b64 	%rd787, {%r938, %r937};
	xor.b64  	%rd788, %rd787, %rd786;
	add.s64 	%rd789, %rd778, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r939}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd778;
	}
	shf.l.wrap.b32 	%r941, %r940, %r939, 10;
	shf.l.wrap.b32 	%r942, %r939, %r940, 10;
	mov.b64 	%rd790, {%r942, %r941};
	xor.b64  	%rd791, %rd790, %rd789;
	add.s64 	%rd792, %rd775, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd775;
	}
	shf.l.wrap.b32 	%r945, %r944, %r943, 17;
	shf.l.wrap.b32 	%r946, %r943, %r944, 17;
	mov.b64 	%rd793, {%r946, %r945};
	xor.b64  	%rd794, %rd793, %rd792;
	add.s64 	%rd795, %rd786, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r948,%dummy}, %rd785;
	}
	shf.l.wrap.b32 	%r949, %r948, %r947, 25;
	shf.l.wrap.b32 	%r950, %r947, %r948, 25;
	mov.b64 	%rd796, {%r950, %r949};
	xor.b64  	%rd797, %rd796, %rd795;
	add.s64 	%rd798, %rd794, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd794;
	}
	shf.l.wrap.b32 	%r953, %r952, %r951, 29;
	shf.l.wrap.b32 	%r954, %r951, %r952, 29;
	mov.b64 	%rd799, {%r954, %r953};
	xor.b64  	%rd800, %rd799, %rd798;
	add.s64 	%rd801, %rd791, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd791;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 25;
	shf.r.wrap.b32 	%r958, %r955, %r956, 25;
	mov.b64 	%rd802, {%r958, %r957};
	xor.b64  	%rd803, %rd802, %rd801;
	add.s64 	%rd804, %rd788, %rd783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd788;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 21;
	shf.r.wrap.b32 	%r962, %r959, %r960, 21;
	mov.b64 	%rd805, {%r962, %r961};
	xor.b64  	%rd806, %rd805, %rd804;
	add.s64 	%rd807, %rd798, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd797;
	}
	shf.l.wrap.b32 	%r965, %r964, %r963, 8;
	shf.l.wrap.b32 	%r966, %r963, %r964, 8;
	mov.b64 	%rd808, {%r966, %r965};
	xor.b64  	%rd809, %rd808, %rd807;
	add.s64 	%rd810, %rd806, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd806;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 29;
	shf.r.wrap.b32 	%r970, %r967, %r968, 29;
	mov.b64 	%rd811, {%r970, %r969};
	xor.b64  	%rd812, %rd811, %rd810;
	add.s64 	%rd813, %rd803, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd803;
	}
	shf.r.wrap.b32 	%r973, %r972, %r971, 8;
	shf.r.wrap.b32 	%r974, %r971, %r972, 8;
	mov.b64 	%rd814, {%r974, %r973};
	xor.b64  	%rd815, %rd814, %rd813;
	add.s64 	%rd816, %rd800, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd800;
	}
	shf.l.wrap.b32 	%r977, %r976, %r975, 22;
	shf.l.wrap.b32 	%r978, %r975, %r976, 22;
	mov.b64 	%rd817, {%r978, %r977};
	xor.b64  	%rd818, %rd817, %rd816;
	add.s64 	%rd819, %rd809, -4364063934328942203;
	add.s64 	%rd820, %rd810, %rd819;
	add.s64 	%rd821, %rd818, -5288003331091182038;
	add.s64 	%rd822, %rd813, %rd821;
	add.s64 	%rd823, %rd815, -2867227051474441717;
	add.s64 	%rd824, %rd816, %rd823;
	add.s64 	%rd825, %rd812, 3037510430686418153;
	add.s64 	%rd826, %rd807, %rd825;
	add.s64 	%rd827, %rd820, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd819;
	}
	shf.r.wrap.b32 	%r981, %r980, %r979, 18;
	shf.r.wrap.b32 	%r982, %r979, %r980, 18;
	mov.b64 	%rd828, {%r982, %r981};
	xor.b64  	%rd829, %rd828, %rd827;
	add.s64 	%rd830, %rd822, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd821;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 28;
	shf.r.wrap.b32 	%r986, %r983, %r984, 28;
	mov.b64 	%rd831, {%r986, %r985};
	xor.b64  	%rd832, %rd831, %rd830;
	add.s64 	%rd833, %rd824, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r987}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd823;
	}
	shf.l.wrap.b32 	%r989, %r988, %r987, 19;
	shf.l.wrap.b32 	%r990, %r987, %r988, 19;
	mov.b64 	%rd834, {%r990, %r989};
	xor.b64  	%rd835, %rd834, %rd833;
	add.s64 	%rd836, %rd826, 6174048478977683087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd825;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 27;
	shf.r.wrap.b32 	%r994, %r991, %r992, 27;
	mov.b64 	%rd837, {%r994, %r993};
	xor.b64  	%rd838, %rd837, %rd836;
	add.s64 	%rd839, %rd829, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd829;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 31;
	shf.r.wrap.b32 	%r998, %r995, %r996, 31;
	mov.b64 	%rd840, {%r998, %r997};
	xor.b64  	%rd841, %rd840, %rd839;
	add.s64 	%rd842, %rd838, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1000,%dummy}, %rd838;
	}
	shf.l.wrap.b32 	%r1001, %r1000, %r999, 27;
	shf.l.wrap.b32 	%r1002, %r999, %r1000, 27;
	mov.b64 	%rd843, {%r1002, %r1001};
	xor.b64  	%rd844, %rd843, %rd842;
	add.s64 	%rd845, %rd835, %rd836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1003}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1004,%dummy}, %rd835;
	}
	shf.l.wrap.b32 	%r1005, %r1004, %r1003, 14;
	shf.l.wrap.b32 	%r1006, %r1003, %r1004, 14;
	mov.b64 	%rd846, {%r1006, %r1005};
	xor.b64  	%rd847, %rd846, %rd845;
	add.s64 	%rd848, %rd832, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd832;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 22;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 22;
	mov.b64 	%rd849, {%r1010, %r1009};
	xor.b64  	%rd850, %rd849, %rd848;
	add.s64 	%rd851, %rd842, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1012,%dummy}, %rd841;
	}
	shf.l.wrap.b32 	%r1013, %r1012, %r1011, 17;
	shf.l.wrap.b32 	%r1014, %r1011, %r1012, 17;
	mov.b64 	%rd852, {%r1014, %r1013};
	xor.b64  	%rd853, %rd852, %rd851;
	add.s64 	%rd854, %rd850, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd850;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 15;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 15;
	mov.b64 	%rd855, {%r1018, %r1017};
	xor.b64  	%rd856, %rd855, %rd854;
	add.s64 	%rd857, %rd847, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1019,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1020}, %rd847;
	}
	shf.r.wrap.b32 	%r1021, %r1020, %r1019, 28;
	shf.r.wrap.b32 	%r1022, %r1019, %r1020, 28;
	mov.b64 	%rd858, {%r1022, %r1021};
	xor.b64  	%rd859, %rd858, %rd857;
	add.s64 	%rd860, %rd844, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd844;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 25;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 25;
	mov.b64 	%rd861, {%r1026, %r1025};
	xor.b64  	%rd862, %rd861, %rd860;
	add.s64 	%rd863, %rd854, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd853;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 20;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 20;
	mov.b64 	%rd864, {%r1030, %r1029};
	xor.b64  	%rd865, %rd864, %rd863;
	add.s64 	%rd866, %rd862, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd862;
	}
	shf.l.wrap.b32 	%r1033, %r1032, %r1031, 9;
	shf.l.wrap.b32 	%r1034, %r1031, %r1032, 9;
	mov.b64 	%rd867, {%r1034, %r1033};
	xor.b64  	%rd868, %rd867, %rd866;
	add.s64 	%rd869, %rd859, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd859;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 10;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 10;
	mov.b64 	%rd870, {%r1038, %r1037};
	xor.b64  	%rd871, %rd870, %rd869;
	add.s64 	%rd872, %rd856, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd856;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 8;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 8;
	mov.b64 	%rd873, {%r1042, %r1041};
	xor.b64  	%rd874, %rd873, %rd872;
	add.s64 	%rd875, %rd865, 4534485012945173523;
	add.s64 	%rd876, %rd866, %rd875;
	add.s64 	%rd877, %rd874, -3688372635733115373;
	add.s64 	%rd878, %rd869, %rd877;
	add.s64 	%rd879, %rd871, 6174048478977683087;
	add.s64 	%rd880, %rd872, %rd879;
	add.s64 	%rd881, %rd868, -1439460426187442542;
	add.s64 	%rd882, %rd876, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd875;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 25;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 25;
	mov.b64 	%rd883, {%r1046, %r1045};
	xor.b64  	%rd884, %rd883, %rd882;
	add.s64 	%rd885, %rd878, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1048,%dummy}, %rd877;
	}
	shf.l.wrap.b32 	%r1049, %r1048, %r1047, 30;
	shf.l.wrap.b32 	%r1050, %r1047, %r1048, 30;
	mov.b64 	%rd886, {%r1050, %r1049};
	xor.b64  	%rd887, %rd886, %rd885;
	add.s64 	%rd888, %rd880, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd879;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 30;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 30;
	mov.b64 	%rd889, {%r1054, %r1053};
	xor.b64  	%rd890, %rd889, %rd888;
	add.s64 	%rd891, %rd863, %rd881;
	add.s64 	%rd892, %rd891, 1884588926079571163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd881;
	}
	shf.l.wrap.b32 	%r1057, %r1056, %r1055, 24;
	shf.l.wrap.b32 	%r1058, %r1055, %r1056, 24;
	mov.b64 	%rd893, {%r1058, %r1057};
	xor.b64  	%rd894, %rd893, %rd892;
	add.s64 	%rd895, %rd884, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd884;
	}
	shf.l.wrap.b32 	%r1061, %r1060, %r1059, 13;
	shf.l.wrap.b32 	%r1062, %r1059, %r1060, 13;
	mov.b64 	%rd896, {%r1062, %r1061};
	xor.b64  	%rd897, %rd896, %rd895;
	add.s64 	%rd898, %rd894, %rd888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd894;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 14;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 14;
	mov.b64 	%rd899, {%r1066, %r1065};
	xor.b64  	%rd900, %rd899, %rd898;
	add.s64 	%rd901, %rd890, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1068,%dummy}, %rd890;
	}
	shf.l.wrap.b32 	%r1069, %r1068, %r1067, 10;
	shf.l.wrap.b32 	%r1070, %r1067, %r1068, 10;
	mov.b64 	%rd902, {%r1070, %r1069};
	xor.b64  	%rd903, %rd902, %rd901;
	add.s64 	%rd904, %rd887, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd887;
	}
	shf.l.wrap.b32 	%r1073, %r1072, %r1071, 17;
	shf.l.wrap.b32 	%r1074, %r1071, %r1072, 17;
	mov.b64 	%rd905, {%r1074, %r1073};
	xor.b64  	%rd906, %rd905, %rd904;
	add.s64 	%rd907, %rd898, %rd897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd897;
	}
	shf.l.wrap.b32 	%r1077, %r1076, %r1075, 25;
	shf.l.wrap.b32 	%r1078, %r1075, %r1076, 25;
	mov.b64 	%rd908, {%r1078, %r1077};
	xor.b64  	%rd909, %rd908, %rd907;
	add.s64 	%rd910, %rd906, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd906;
	}
	shf.l.wrap.b32 	%r1081, %r1080, %r1079, 29;
	shf.l.wrap.b32 	%r1082, %r1079, %r1080, 29;
	mov.b64 	%rd911, {%r1082, %r1081};
	xor.b64  	%rd912, %rd911, %rd910;
	add.s64 	%rd913, %rd903, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd903;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 25;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 25;
	mov.b64 	%rd914, {%r1086, %r1085};
	xor.b64  	%rd915, %rd914, %rd913;
	add.s64 	%rd916, %rd900, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd900;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 21;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 21;
	mov.b64 	%rd917, {%r1090, %r1089};
	xor.b64  	%rd918, %rd917, %rd916;
	add.s64 	%rd919, %rd910, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd909;
	}
	shf.l.wrap.b32 	%r1093, %r1092, %r1091, 8;
	shf.l.wrap.b32 	%r1094, %r1091, %r1092, 8;
	mov.b64 	%rd920, {%r1094, %r1093};
	xor.b64  	%rd921, %rd920, %rd919;
	add.s64 	%rd922, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd918;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 29;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 29;
	mov.b64 	%rd923, {%r1098, %r1097};
	xor.b64  	%rd924, %rd923, %rd922;
	add.s64 	%rd925, %rd915, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd915;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 8;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 8;
	mov.b64 	%rd926, {%r1102, %r1101};
	xor.b64  	%rd927, %rd926, %rd925;
	add.s64 	%rd928, %rd912, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1104,%dummy}, %rd912;
	}
	shf.l.wrap.b32 	%r1105, %r1104, %r1103, 22;
	shf.l.wrap.b32 	%r1106, %r1103, %r1104, 22;
	mov.b64 	%rd929, {%r1106, %r1105};
	xor.b64  	%rd930, %rd929, %rd928;
	add.s64 	%rd931, %rd921, -5288003331091182038;
	add.s64 	%rd932, %rd922, %rd931;
	add.s64 	%rd933, %rd930, -1714305546867594773;
	add.s64 	%rd934, %rd925, %rd933;
	add.s64 	%rd935, %rd927, 1884588926079571163;
	add.s64 	%rd936, %rd928, %rd935;
	add.s64 	%rd937, %rd924, -1755217697375493535;
	add.s64 	%rd938, %rd919, %rd937;
	add.s64 	%rd939, %rd932, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd931;
	}
	shf.r.wrap.b32 	%r1109, %r1108, %r1107, 18;
	shf.r.wrap.b32 	%r1110, %r1107, %r1108, 18;
	mov.b64 	%rd940, {%r1110, %r1109};
	xor.b64  	%rd941, %rd940, %rd939;
	add.s64 	%rd942, %rd934, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd933;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 28;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 28;
	mov.b64 	%rd943, {%r1114, %r1113};
	xor.b64  	%rd944, %rd943, %rd942;
	add.s64 	%rd945, %rd936, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd935;
	}
	shf.l.wrap.b32 	%r1117, %r1116, %r1115, 19;
	shf.l.wrap.b32 	%r1118, %r1115, %r1116, 19;
	mov.b64 	%rd946, {%r1118, %r1117};
	xor.b64  	%rd947, %rd946, %rd945;
	add.s64 	%rd948, %rd938, -2592381930794289501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd937;
	}
	shf.r.wrap.b32 	%r1121, %r1120, %r1119, 27;
	shf.r.wrap.b32 	%r1122, %r1119, %r1120, 27;
	mov.b64 	%rd949, {%r1122, %r1121};
	xor.b64  	%rd950, %rd949, %rd948;
	add.s64 	%rd951, %rd941, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd941;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 31;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 31;
	mov.b64 	%rd952, {%r1126, %r1125};
	xor.b64  	%rd953, %rd952, %rd951;
	add.s64 	%rd954, %rd950, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd950;
	}
	shf.l.wrap.b32 	%r1129, %r1128, %r1127, 27;
	shf.l.wrap.b32 	%r1130, %r1127, %r1128, 27;
	mov.b64 	%rd955, {%r1130, %r1129};
	xor.b64  	%rd956, %rd955, %rd954;
	add.s64 	%rd957, %rd947, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1132,%dummy}, %rd947;
	}
	shf.l.wrap.b32 	%r1133, %r1132, %r1131, 14;
	shf.l.wrap.b32 	%r1134, %r1131, %r1132, 14;
	mov.b64 	%rd958, {%r1134, %r1133};
	xor.b64  	%rd959, %rd958, %rd957;
	add.s64 	%rd960, %rd944, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd944;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 22;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 22;
	mov.b64 	%rd961, {%r1138, %r1137};
	xor.b64  	%rd962, %rd961, %rd960;
	add.s64 	%rd963, %rd954, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1140,%dummy}, %rd953;
	}
	shf.l.wrap.b32 	%r1141, %r1140, %r1139, 17;
	shf.l.wrap.b32 	%r1142, %r1139, %r1140, 17;
	mov.b64 	%rd964, {%r1142, %r1141};
	xor.b64  	%rd965, %rd964, %rd963;
	add.s64 	%rd966, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd962;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 15;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 15;
	mov.b64 	%rd967, {%r1146, %r1145};
	xor.b64  	%rd968, %rd967, %rd966;
	add.s64 	%rd969, %rd959, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd959;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 28;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 28;
	mov.b64 	%rd970, {%r1150, %r1149};
	xor.b64  	%rd971, %rd970, %rd969;
	add.s64 	%rd972, %rd956, %rd951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1151,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1152}, %rd956;
	}
	shf.r.wrap.b32 	%r1153, %r1152, %r1151, 25;
	shf.r.wrap.b32 	%r1154, %r1151, %r1152, 25;
	mov.b64 	%rd973, {%r1154, %r1153};
	xor.b64  	%rd974, %rd973, %rd972;
	add.s64 	%rd975, %rd966, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd965;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 20;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 20;
	mov.b64 	%rd976, {%r1158, %r1157};
	xor.b64  	%rd977, %rd976, %rd975;
	add.s64 	%rd978, %rd974, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd974;
	}
	shf.l.wrap.b32 	%r1161, %r1160, %r1159, 9;
	shf.l.wrap.b32 	%r1162, %r1159, %r1160, 9;
	mov.b64 	%rd979, {%r1162, %r1161};
	xor.b64  	%rd980, %rd979, %rd978;
	add.s64 	%rd981, %rd971, %rd972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd971;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 10;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 10;
	mov.b64 	%rd982, {%r1166, %r1165};
	xor.b64  	%rd983, %rd982, %rd981;
	add.s64 	%rd984, %rd968, %rd963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1167,%dummy}, %rd968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd968;
	}
	shf.r.wrap.b32 	%r1169, %r1168, %r1167, 8;
	shf.r.wrap.b32 	%r1170, %r1167, %r1168, 8;
	mov.b64 	%rd985, {%r1170, %r1169};
	xor.b64  	%rd986, %rd985, %rd984;
	add.s64 	%rd987, %rd977, -3688372635733115373;
	add.s64 	%rd988, %rd978, %rd987;
	add.s64 	%rd989, %rd986, 6174048478977683055;
	add.s64 	%rd990, %rd981, %rd989;
	add.s64 	%rd991, %rd983, -2592381930794289501;
	add.s64 	%rd992, %rd984, %rd991;
	add.s64 	%rd993, %rd980, -4364063934328942186;
	add.s64 	%rd994, %rd988, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd987;
	}
	shf.r.wrap.b32 	%r1173, %r1172, %r1171, 25;
	shf.r.wrap.b32 	%r1174, %r1171, %r1172, 25;
	mov.b64 	%rd995, {%r1174, %r1173};
	xor.b64  	%rd996, %rd995, %rd994;
	add.s64 	%rd997, %rd990, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd989;
	}
	shf.l.wrap.b32 	%r1177, %r1176, %r1175, 30;
	shf.l.wrap.b32 	%r1178, %r1175, %r1176, 30;
	mov.b64 	%rd998, {%r1178, %r1177};
	xor.b64  	%rd999, %rd998, %rd997;
	add.s64 	%rd1000, %rd992, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd991;
	}
	shf.r.wrap.b32 	%r1181, %r1180, %r1179, 30;
	shf.r.wrap.b32 	%r1182, %r1179, %r1180, 30;
	mov.b64 	%rd1001, {%r1182, %r1181};
	xor.b64  	%rd1002, %rd1001, %rd1000;
	add.s64 	%rd1003, %rd975, %rd993;
	add.s64 	%rd1004, %rd1003, -1755217697375493519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1184,%dummy}, %rd993;
	}
	shf.l.wrap.b32 	%r1185, %r1184, %r1183, 24;
	shf.l.wrap.b32 	%r1186, %r1183, %r1184, 24;
	mov.b64 	%rd1005, {%r1186, %r1185};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	add.s64 	%rd1007, %rd996, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd996;
	}
	shf.l.wrap.b32 	%r1189, %r1188, %r1187, 13;
	shf.l.wrap.b32 	%r1190, %r1187, %r1188, 13;
	mov.b64 	%rd1008, {%r1190, %r1189};
	xor.b64  	%rd1009, %rd1008, %rd1007;
	add.s64 	%rd1010, %rd1006, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1006;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 14;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 14;
	mov.b64 	%rd1011, {%r1194, %r1193};
	xor.b64  	%rd1012, %rd1011, %rd1010;
	add.s64 	%rd1013, %rd1002, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1002;
	}
	shf.l.wrap.b32 	%r1197, %r1196, %r1195, 10;
	shf.l.wrap.b32 	%r1198, %r1195, %r1196, 10;
	mov.b64 	%rd1014, {%r1198, %r1197};
	xor.b64  	%rd1015, %rd1014, %rd1013;
	add.s64 	%rd1016, %rd999, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1200,%dummy}, %rd999;
	}
	shf.l.wrap.b32 	%r1201, %r1200, %r1199, 17;
	shf.l.wrap.b32 	%r1202, %r1199, %r1200, 17;
	mov.b64 	%rd1017, {%r1202, %r1201};
	xor.b64  	%rd1018, %rd1017, %rd1016;
	add.s64 	%rd1019, %rd1010, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd1009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd1009;
	}
	shf.l.wrap.b32 	%r1205, %r1204, %r1203, 25;
	shf.l.wrap.b32 	%r1206, %r1203, %r1204, 25;
	mov.b64 	%rd1020, {%r1206, %r1205};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	add.s64 	%rd1022, %rd1018, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1018;
	}
	shf.l.wrap.b32 	%r1209, %r1208, %r1207, 29;
	shf.l.wrap.b32 	%r1210, %r1207, %r1208, 29;
	mov.b64 	%rd1023, {%r1210, %r1209};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	add.s64 	%rd1025, %rd1015, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1211,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1212}, %rd1015;
	}
	shf.r.wrap.b32 	%r1213, %r1212, %r1211, 25;
	shf.r.wrap.b32 	%r1214, %r1211, %r1212, 25;
	mov.b64 	%rd1026, {%r1214, %r1213};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	add.s64 	%rd1028, %rd1012, %rd1007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1012;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 21;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 21;
	mov.b64 	%rd1029, {%r1218, %r1217};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	add.s64 	%rd1031, %rd1022, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd1021;
	}
	shf.l.wrap.b32 	%r1221, %r1220, %r1219, 8;
	shf.l.wrap.b32 	%r1222, %r1219, %r1220, 8;
	mov.b64 	%rd1032, {%r1222, %r1221};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	add.s64 	%rd1034, %rd1030, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1030;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 29;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 29;
	mov.b64 	%rd1035, {%r1226, %r1225};
	xor.b64  	%rd1036, %rd1035, %rd1034;
	add.s64 	%rd1037, %rd1027, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1227,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1228}, %rd1027;
	}
	shf.r.wrap.b32 	%r1229, %r1228, %r1227, 8;
	shf.r.wrap.b32 	%r1230, %r1227, %r1228, 8;
	mov.b64 	%rd1038, {%r1230, %r1229};
	xor.b64  	%rd1039, %rd1038, %rd1037;
	add.s64 	%rd1040, %rd1024, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1024;
	}
	shf.l.wrap.b32 	%r1233, %r1232, %r1231, 22;
	shf.l.wrap.b32 	%r1234, %r1231, %r1232, 22;
	mov.b64 	%rd1041, {%r1234, %r1233};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	add.s64 	%rd1043, %rd1034, -3688372635733115373;
	add.s64 	%rd1044, %rd1033, -1714305546867594773;
	add.s64 	%rd1045, %rd1037, 6174048478977683055;
	add.s64 	%rd1046, %rd1042, 3037510430686418139;
	add.s64 	%rd1047, %rd1040, -1439460426187442557;
	add.s64 	%rd1048, %rd1039, -1755217697375493519;
	add.s64 	%rd1049, %rd1031, -5516985438935789179;
	add.s64 	%rd1050, %rd1036, 4534485012945173541;
	xor.b64  	%rd1051, %rd1043, %rd41;
	xor.b64  	%rd1052, %rd1044, %rd42;
	xor.b64  	%rd1053, %rd1045, %rd45;
	xor.b64  	%rd1054, %rd1046, %rd46;
	xor.b64  	%rd1055, %rd1051, %rd1052;
	xor.b64  	%rd1056, %rd1055, %rd1053;
	xor.b64  	%rd1057, %rd1056, %rd1054;
	xor.b64  	%rd1058, %rd1057, %rd1047;
	xor.b64  	%rd1059, %rd1058, %rd1048;
	xor.b64  	%rd1060, %rd1059, %rd1049;
	xor.b64  	%rd1061, %rd1060, %rd1050;
	xor.b64  	%rd1062, %rd1061, 2004413935125273122;
	add.s64 	%rd1063, %rd1039, -1755217697375493511;
	add.s64 	%rd1064, %rd1031, %rd1050;
	add.s64 	%rd1065, %rd1051, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1052;
	}
	shf.r.wrap.b32 	%r1237, %r1236, %r1235, 18;
	shf.r.wrap.b32 	%r1238, %r1235, %r1236, 18;
	mov.b64 	%rd1066, {%r1238, %r1237};
	xor.b64  	%rd1067, %rd1066, %rd1065;
	add.s64 	%rd1068, %rd1053, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1239,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1240}, %rd1054;
	}
	shf.r.wrap.b32 	%r1241, %r1240, %r1239, 28;
	shf.r.wrap.b32 	%r1242, %r1239, %r1240, 28;
	mov.b64 	%rd1069, {%r1242, %r1241};
	xor.b64  	%rd1070, %rd1069, %rd1068;
	add.s64 	%rd1071, %rd1047, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1244,%dummy}, %rd1063;
	}
	shf.l.wrap.b32 	%r1245, %r1244, %r1243, 19;
	shf.l.wrap.b32 	%r1246, %r1243, %r1244, 19;
	mov.b64 	%rd1072, {%r1246, %r1245};
	xor.b64  	%rd1073, %rd1072, %rd1071;
	add.s64 	%rd1074, %rd1064, -5589043032973717115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd1050;
	}
	shf.r.wrap.b32 	%r1249, %r1248, %r1247, 27;
	shf.r.wrap.b32 	%r1250, %r1247, %r1248, 27;
	mov.b64 	%rd1075, {%r1250, %r1249};
	xor.b64  	%rd1076, %rd1075, %rd1074;
	add.s64 	%rd1077, %rd1067, %rd1068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1067;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 31;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 31;
	mov.b64 	%rd1078, {%r1254, %r1253};
	xor.b64  	%rd1079, %rd1078, %rd1077;
	add.s64 	%rd1080, %rd1076, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd1076;
	}
	shf.l.wrap.b32 	%r1257, %r1256, %r1255, 27;
	shf.l.wrap.b32 	%r1258, %r1255, %r1256, 27;
	mov.b64 	%rd1081, {%r1258, %r1257};
	xor.b64  	%rd1082, %rd1081, %rd1080;
	add.s64 	%rd1083, %rd1073, %rd1074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd1073;
	}
	shf.l.wrap.b32 	%r1261, %r1260, %r1259, 14;
	shf.l.wrap.b32 	%r1262, %r1259, %r1260, 14;
	mov.b64 	%rd1084, {%r1262, %r1261};
	xor.b64  	%rd1085, %rd1084, %rd1083;
	add.s64 	%rd1086, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1070;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 22;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 22;
	mov.b64 	%rd1087, {%r1266, %r1265};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	add.s64 	%rd1089, %rd1080, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd1079;
	}
	shf.l.wrap.b32 	%r1269, %r1268, %r1267, 17;
	shf.l.wrap.b32 	%r1270, %r1267, %r1268, 17;
	mov.b64 	%rd1090, {%r1270, %r1269};
	xor.b64  	%rd1091, %rd1090, %rd1089;
	add.s64 	%rd1092, %rd1088, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1088;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 15;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 15;
	mov.b64 	%rd1093, {%r1274, %r1273};
	xor.b64  	%rd1094, %rd1093, %rd1092;
	add.s64 	%rd1095, %rd1085, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1275,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd1085;
	}
	shf.r.wrap.b32 	%r1277, %r1276, %r1275, 28;
	shf.r.wrap.b32 	%r1278, %r1275, %r1276, 28;
	mov.b64 	%rd1096, {%r1278, %r1277};
	xor.b64  	%rd1097, %rd1096, %rd1095;
	add.s64 	%rd1098, %rd1082, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1082;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 25;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 25;
	mov.b64 	%rd1099, {%r1282, %r1281};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	add.s64 	%rd1101, %rd1092, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd1091;
	}
	shf.r.wrap.b32 	%r1285, %r1284, %r1283, 20;
	shf.r.wrap.b32 	%r1286, %r1283, %r1284, 20;
	mov.b64 	%rd1102, {%r1286, %r1285};
	xor.b64  	%rd1103, %rd1102, %rd1101;
	add.s64 	%rd1104, %rd1100, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd1100;
	}
	shf.l.wrap.b32 	%r1289, %r1288, %r1287, 9;
	shf.l.wrap.b32 	%r1290, %r1287, %r1288, 9;
	mov.b64 	%rd1105, {%r1290, %r1289};
	xor.b64  	%rd1106, %rd1105, %rd1104;
	add.s64 	%rd1107, %rd1097, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1291,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1292}, %rd1097;
	}
	shf.r.wrap.b32 	%r1293, %r1292, %r1291, 10;
	shf.r.wrap.b32 	%r1294, %r1291, %r1292, 10;
	mov.b64 	%rd1108, {%r1294, %r1293};
	xor.b64  	%rd1109, %rd1108, %rd1107;
	add.s64 	%rd1110, %rd1094, %rd1089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1094;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 8;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 8;
	mov.b64 	%rd1111, {%r1298, %r1297};
	xor.b64  	%rd1112, %rd1111, %rd1110;
	add.s64 	%rd1113, %rd1052, %rd1104;
	add.s64 	%rd1114, %rd1053, %rd1103;
	add.s64 	%rd1115, %rd1054, %rd1107;
	add.s64 	%rd1116, %rd1047, %rd1112;
	add.s64 	%rd1117, %rd1048, %rd1110;
	add.s64 	%rd1118, %rd1049, %rd1109;
	add.s64 	%rd1119, %rd1118, -72057594037927936;
	add.s64 	%rd1120, %rd1106, %rd1062;
	add.s64 	%rd1121, %rd1120, 1;
	add.s64 	%rd1122, %rd1113, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1299,%dummy}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1300}, %rd1114;
	}
	shf.r.wrap.b32 	%r1301, %r1300, %r1299, 25;
	shf.r.wrap.b32 	%r1302, %r1299, %r1300, 25;
	mov.b64 	%rd1123, {%r1302, %r1301};
	xor.b64  	%rd1124, %rd1123, %rd1122;
	add.s64 	%rd1125, %rd1115, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd1116;
	}
	shf.l.wrap.b32 	%r1305, %r1304, %r1303, 30;
	shf.l.wrap.b32 	%r1306, %r1303, %r1304, 30;
	mov.b64 	%rd1126, {%r1306, %r1305};
	xor.b64  	%rd1127, %rd1126, %rd1125;
	add.s64 	%rd1128, %rd1117, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1307,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1308}, %rd1119;
	}
	shf.r.wrap.b32 	%r1309, %r1308, %r1307, 30;
	shf.r.wrap.b32 	%r1310, %r1307, %r1308, 30;
	mov.b64 	%rd1129, {%r1310, %r1309};
	xor.b64  	%rd1130, %rd1129, %rd1128;
	add.s64 	%rd1131, %rd1050, %rd1101;
	add.s64 	%rd1132, %rd1131, %rd1121;
	add.s64 	%rd1133, %rd1132, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd1121;
	}
	shf.l.wrap.b32 	%r1313, %r1312, %r1311, 24;
	shf.l.wrap.b32 	%r1314, %r1311, %r1312, 24;
	mov.b64 	%rd1134, {%r1314, %r1313};
	xor.b64  	%rd1135, %rd1134, %rd1133;
	add.s64 	%rd1136, %rd1124, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1315}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1316,%dummy}, %rd1124;
	}
	shf.l.wrap.b32 	%r1317, %r1316, %r1315, 13;
	shf.l.wrap.b32 	%r1318, %r1315, %r1316, 13;
	mov.b64 	%rd1137, {%r1318, %r1317};
	xor.b64  	%rd1138, %rd1137, %rd1136;
	add.s64 	%rd1139, %rd1135, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1135;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1140, {%r1322, %r1321};
	xor.b64  	%rd1141, %rd1140, %rd1139;
	add.s64 	%rd1142, %rd1130, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1323}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd1130;
	}
	shf.l.wrap.b32 	%r1325, %r1324, %r1323, 10;
	shf.l.wrap.b32 	%r1326, %r1323, %r1324, 10;
	mov.b64 	%rd1143, {%r1326, %r1325};
	xor.b64  	%rd1144, %rd1143, %rd1142;
	add.s64 	%rd1145, %rd1127, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd1127;
	}
	shf.l.wrap.b32 	%r1329, %r1328, %r1327, 17;
	shf.l.wrap.b32 	%r1330, %r1327, %r1328, 17;
	mov.b64 	%rd1146, {%r1330, %r1329};
	xor.b64  	%rd1147, %rd1146, %rd1145;
	add.s64 	%rd1148, %rd1139, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1331}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1332,%dummy}, %rd1138;
	}
	shf.l.wrap.b32 	%r1333, %r1332, %r1331, 25;
	shf.l.wrap.b32 	%r1334, %r1331, %r1332, 25;
	mov.b64 	%rd1149, {%r1334, %r1333};
	xor.b64  	%rd1150, %rd1149, %rd1148;
	add.s64 	%rd1151, %rd1147, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd1147;
	}
	shf.l.wrap.b32 	%r1337, %r1336, %r1335, 29;
	shf.l.wrap.b32 	%r1338, %r1335, %r1336, 29;
	mov.b64 	%rd1152, {%r1338, %r1337};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	add.s64 	%rd1154, %rd1144, %rd1145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1339,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1340}, %rd1144;
	}
	shf.r.wrap.b32 	%r1341, %r1340, %r1339, 25;
	shf.r.wrap.b32 	%r1342, %r1339, %r1340, 25;
	mov.b64 	%rd1155, {%r1342, %r1341};
	xor.b64  	%rd1156, %rd1155, %rd1154;
	add.s64 	%rd1157, %rd1141, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1141;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 21;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 21;
	mov.b64 	%rd1158, {%r1346, %r1345};
	xor.b64  	%rd1159, %rd1158, %rd1157;
	add.s64 	%rd1160, %rd1151, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd1150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd1150;
	}
	shf.l.wrap.b32 	%r1349, %r1348, %r1347, 8;
	shf.l.wrap.b32 	%r1350, %r1347, %r1348, 8;
	mov.b64 	%rd1161, {%r1350, %r1349};
	xor.b64  	%rd1162, %rd1161, %rd1160;
	add.s64 	%rd1163, %rd1159, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1159;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 29;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 29;
	mov.b64 	%rd1164, {%r1354, %r1353};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	add.s64 	%rd1166, %rd1156, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1356}, %rd1156;
	}
	shf.r.wrap.b32 	%r1357, %r1356, %r1355, 8;
	shf.r.wrap.b32 	%r1358, %r1355, %r1356, 8;
	mov.b64 	%rd1167, {%r1358, %r1357};
	xor.b64  	%rd1168, %rd1167, %rd1166;
	add.s64 	%rd1169, %rd1153, %rd1148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd1153;
	}
	shf.l.wrap.b32 	%r1361, %r1360, %r1359, 22;
	shf.l.wrap.b32 	%r1362, %r1359, %r1360, 22;
	mov.b64 	%rd1170, {%r1362, %r1361};
	xor.b64  	%rd1171, %rd1170, %rd1169;
	add.s64 	%rd1172, %rd1053, %rd1163;
	add.s64 	%rd1173, %rd1054, %rd1162;
	add.s64 	%rd1174, %rd1047, %rd1166;
	add.s64 	%rd1175, %rd1048, %rd1171;
	add.s64 	%rd1176, %rd1049, %rd1169;
	add.s64 	%rd1177, %rd1050, %rd1168;
	add.s64 	%rd1178, %rd1177, -72057594037927928;
	add.s64 	%rd1179, %rd1062, %rd1160;
	add.s64 	%rd1180, %rd1165, %rd1051;
	add.s64 	%rd1181, %rd1180, 2;
	add.s64 	%rd1182, %rd1179, %rd1181;
	add.s64 	%rd1183, %rd1172, %rd1173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd1173;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 18;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 18;
	mov.b64 	%rd1184, {%r1366, %r1365};
	xor.b64  	%rd1185, %rd1184, %rd1183;
	add.s64 	%rd1186, %rd1174, %rd1175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd1175;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 28;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 28;
	mov.b64 	%rd1187, {%r1370, %r1369};
	xor.b64  	%rd1188, %rd1187, %rd1186;
	add.s64 	%rd1189, %rd1176, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd1178;
	}
	shf.l.wrap.b32 	%r1373, %r1372, %r1371, 19;
	shf.l.wrap.b32 	%r1374, %r1371, %r1372, 19;
	mov.b64 	%rd1190, {%r1374, %r1373};
	xor.b64  	%rd1191, %rd1190, %rd1189;
	add.s64 	%rd1192, %rd1182, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd1181;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 27;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 27;
	mov.b64 	%rd1193, {%r1378, %r1377};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	add.s64 	%rd1195, %rd1185, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1379,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1380}, %rd1185;
	}
	shf.r.wrap.b32 	%r1381, %r1380, %r1379, 31;
	shf.r.wrap.b32 	%r1382, %r1379, %r1380, 31;
	mov.b64 	%rd1196, {%r1382, %r1381};
	xor.b64  	%rd1197, %rd1196, %rd1195;
	add.s64 	%rd1198, %rd1194, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd1194;
	}
	shf.l.wrap.b32 	%r1385, %r1384, %r1383, 27;
	shf.l.wrap.b32 	%r1386, %r1383, %r1384, 27;
	mov.b64 	%rd1199, {%r1386, %r1385};
	xor.b64  	%rd1200, %rd1199, %rd1198;
	add.s64 	%rd1201, %rd1191, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1387}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd1191;
	}
	shf.l.wrap.b32 	%r1389, %r1388, %r1387, 14;
	shf.l.wrap.b32 	%r1390, %r1387, %r1388, 14;
	mov.b64 	%rd1202, {%r1390, %r1389};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	add.s64 	%rd1204, %rd1188, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1188;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 22;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 22;
	mov.b64 	%rd1205, {%r1394, %r1393};
	xor.b64  	%rd1206, %rd1205, %rd1204;
	add.s64 	%rd1207, %rd1198, %rd1197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1197;
	}
	shf.l.wrap.b32 	%r1397, %r1396, %r1395, 17;
	shf.l.wrap.b32 	%r1398, %r1395, %r1396, 17;
	mov.b64 	%rd1208, {%r1398, %r1397};
	xor.b64  	%rd1209, %rd1208, %rd1207;
	add.s64 	%rd1210, %rd1206, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd1206;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 15;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 15;
	mov.b64 	%rd1211, {%r1402, %r1401};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	add.s64 	%rd1213, %rd1203, %rd1204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1403,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1404}, %rd1203;
	}
	shf.r.wrap.b32 	%r1405, %r1404, %r1403, 28;
	shf.r.wrap.b32 	%r1406, %r1403, %r1404, 28;
	mov.b64 	%rd1214, {%r1406, %r1405};
	xor.b64  	%rd1215, %rd1214, %rd1213;
	add.s64 	%rd1216, %rd1200, %rd1195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd1200;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 25;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 25;
	mov.b64 	%rd1217, {%r1410, %r1409};
	xor.b64  	%rd1218, %rd1217, %rd1216;
	add.s64 	%rd1219, %rd1210, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1411,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1412}, %rd1209;
	}
	shf.r.wrap.b32 	%r1413, %r1412, %r1411, 20;
	shf.r.wrap.b32 	%r1414, %r1411, %r1412, 20;
	mov.b64 	%rd1220, {%r1414, %r1413};
	xor.b64  	%rd1221, %rd1220, %rd1219;
	add.s64 	%rd1222, %rd1218, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1416,%dummy}, %rd1218;
	}
	shf.l.wrap.b32 	%r1417, %r1416, %r1415, 9;
	shf.l.wrap.b32 	%r1418, %r1415, %r1416, 9;
	mov.b64 	%rd1223, {%r1418, %r1417};
	xor.b64  	%rd1224, %rd1223, %rd1222;
	add.s64 	%rd1225, %rd1215, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1419,%dummy}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1420}, %rd1215;
	}
	shf.r.wrap.b32 	%r1421, %r1420, %r1419, 10;
	shf.r.wrap.b32 	%r1422, %r1419, %r1420, 10;
	mov.b64 	%rd1226, {%r1422, %r1421};
	xor.b64  	%rd1227, %rd1226, %rd1225;
	add.s64 	%rd1228, %rd1212, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd1212;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 8;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 8;
	mov.b64 	%rd1229, {%r1426, %r1425};
	xor.b64  	%rd1230, %rd1229, %rd1228;
	add.s64 	%rd1231, %rd1054, %rd1222;
	add.s64 	%rd1232, %rd1047, %rd1221;
	add.s64 	%rd1233, %rd1048, %rd1225;
	add.s64 	%rd1234, %rd1049, %rd1230;
	add.s64 	%rd1235, %rd1050, %rd1228;
	add.s64 	%rd1236, %rd1062, %rd1227;
	add.s64 	%rd1237, %rd1236, 8;
	add.s64 	%rd1238, %rd1224, %rd1052;
	add.s64 	%rd1239, %rd1238, 3;
	add.s64 	%rd1240, %rd1231, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1427,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1428}, %rd1232;
	}
	shf.r.wrap.b32 	%r1429, %r1428, %r1427, 25;
	shf.r.wrap.b32 	%r1430, %r1427, %r1428, 25;
	mov.b64 	%rd1241, {%r1430, %r1429};
	xor.b64  	%rd1242, %rd1241, %rd1240;
	add.s64 	%rd1243, %rd1233, %rd1234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1432,%dummy}, %rd1234;
	}
	shf.l.wrap.b32 	%r1433, %r1432, %r1431, 30;
	shf.l.wrap.b32 	%r1434, %r1431, %r1432, 30;
	mov.b64 	%rd1244, {%r1434, %r1433};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	add.s64 	%rd1246, %rd1235, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd1237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1436}, %rd1237;
	}
	shf.r.wrap.b32 	%r1437, %r1436, %r1435, 30;
	shf.r.wrap.b32 	%r1438, %r1435, %r1436, 30;
	mov.b64 	%rd1247, {%r1438, %r1437};
	xor.b64  	%rd1248, %rd1247, %rd1246;
	add.s64 	%rd1249, %rd1051, %rd1219;
	add.s64 	%rd1250, %rd1249, %rd1239;
	add.s64 	%rd1251, %rd1250, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd1239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd1239;
	}
	shf.l.wrap.b32 	%r1441, %r1440, %r1439, 24;
	shf.l.wrap.b32 	%r1442, %r1439, %r1440, 24;
	mov.b64 	%rd1252, {%r1442, %r1441};
	xor.b64  	%rd1253, %rd1252, %rd1251;
	add.s64 	%rd1254, %rd1242, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd1242;
	}
	shf.l.wrap.b32 	%r1445, %r1444, %r1443, 13;
	shf.l.wrap.b32 	%r1446, %r1443, %r1444, 13;
	mov.b64 	%rd1255, {%r1446, %r1445};
	xor.b64  	%rd1256, %rd1255, %rd1254;
	add.s64 	%rd1257, %rd1253, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd1253;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 14;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 14;
	mov.b64 	%rd1258, {%r1450, %r1449};
	xor.b64  	%rd1259, %rd1258, %rd1257;
	add.s64 	%rd1260, %rd1248, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd1248;
	}
	shf.l.wrap.b32 	%r1453, %r1452, %r1451, 10;
	shf.l.wrap.b32 	%r1454, %r1451, %r1452, 10;
	mov.b64 	%rd1261, {%r1454, %r1453};
	xor.b64  	%rd1262, %rd1261, %rd1260;
	add.s64 	%rd1263, %rd1245, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd1245;
	}
	shf.l.wrap.b32 	%r1457, %r1456, %r1455, 17;
	shf.l.wrap.b32 	%r1458, %r1455, %r1456, 17;
	mov.b64 	%rd1264, {%r1458, %r1457};
	xor.b64  	%rd1265, %rd1264, %rd1263;
	add.s64 	%rd1266, %rd1257, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd1256;
	}
	shf.l.wrap.b32 	%r1461, %r1460, %r1459, 25;
	shf.l.wrap.b32 	%r1462, %r1459, %r1460, 25;
	mov.b64 	%rd1267, {%r1462, %r1461};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	add.s64 	%rd1269, %rd1265, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1464,%dummy}, %rd1265;
	}
	shf.l.wrap.b32 	%r1465, %r1464, %r1463, 29;
	shf.l.wrap.b32 	%r1466, %r1463, %r1464, 29;
	mov.b64 	%rd1270, {%r1466, %r1465};
	xor.b64  	%rd1271, %rd1270, %rd1269;
	add.s64 	%rd1272, %rd1262, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1467,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1468}, %rd1262;
	}
	shf.r.wrap.b32 	%r1469, %r1468, %r1467, 25;
	shf.r.wrap.b32 	%r1470, %r1467, %r1468, 25;
	mov.b64 	%rd1273, {%r1470, %r1469};
	xor.b64  	%rd1274, %rd1273, %rd1272;
	add.s64 	%rd1275, %rd1259, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd1259;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 21;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 21;
	mov.b64 	%rd1276, {%r1474, %r1473};
	xor.b64  	%rd1277, %rd1276, %rd1275;
	add.s64 	%rd1278, %rd1269, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd1268;
	}
	shf.l.wrap.b32 	%r1477, %r1476, %r1475, 8;
	shf.l.wrap.b32 	%r1478, %r1475, %r1476, 8;
	mov.b64 	%rd1279, {%r1478, %r1477};
	xor.b64  	%rd1280, %rd1279, %rd1278;
	add.s64 	%rd1281, %rd1277, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd1277;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 29;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 29;
	mov.b64 	%rd1282, {%r1482, %r1481};
	xor.b64  	%rd1283, %rd1282, %rd1281;
	add.s64 	%rd1284, %rd1274, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd1274;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 8;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 8;
	mov.b64 	%rd1285, {%r1486, %r1485};
	xor.b64  	%rd1286, %rd1285, %rd1284;
	add.s64 	%rd1287, %rd1271, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1488,%dummy}, %rd1271;
	}
	shf.l.wrap.b32 	%r1489, %r1488, %r1487, 22;
	shf.l.wrap.b32 	%r1490, %r1487, %r1488, 22;
	mov.b64 	%rd1288, {%r1490, %r1489};
	xor.b64  	%rd1289, %rd1288, %rd1287;
	add.s64 	%rd1290, %rd1047, %rd1281;
	add.s64 	%rd1291, %rd1048, %rd1280;
	add.s64 	%rd1292, %rd1049, %rd1284;
	add.s64 	%rd1293, %rd1050, %rd1289;
	add.s64 	%rd1294, %rd1062, %rd1287;
	add.s64 	%rd1295, %rd1051, %rd1286;
	add.s64 	%rd1296, %rd1295, -72057594037927936;
	add.s64 	%rd1297, %rd1052, %rd1278;
	add.s64 	%rd1298, %rd1283, %rd1053;
	add.s64 	%rd1299, %rd1298, 4;
	add.s64 	%rd1300, %rd1297, %rd1299;
	add.s64 	%rd1301, %rd1290, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1491,%dummy}, %rd1291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1492}, %rd1291;
	}
	shf.r.wrap.b32 	%r1493, %r1492, %r1491, 18;
	shf.r.wrap.b32 	%r1494, %r1491, %r1492, 18;
	mov.b64 	%rd1302, {%r1494, %r1493};
	xor.b64  	%rd1303, %rd1302, %rd1301;
	add.s64 	%rd1304, %rd1292, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd1293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd1293;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 28;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 28;
	mov.b64 	%rd1305, {%r1498, %r1497};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	add.s64 	%rd1307, %rd1294, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd1296;
	}
	shf.l.wrap.b32 	%r1501, %r1500, %r1499, 19;
	shf.l.wrap.b32 	%r1502, %r1499, %r1500, 19;
	mov.b64 	%rd1308, {%r1502, %r1501};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	add.s64 	%rd1310, %rd1300, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd1299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd1299;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 27;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 27;
	mov.b64 	%rd1311, {%r1506, %r1505};
	xor.b64  	%rd1312, %rd1311, %rd1310;
	add.s64 	%rd1313, %rd1303, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1507,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1508}, %rd1303;
	}
	shf.r.wrap.b32 	%r1509, %r1508, %r1507, 31;
	shf.r.wrap.b32 	%r1510, %r1507, %r1508, 31;
	mov.b64 	%rd1314, {%r1510, %r1509};
	xor.b64  	%rd1315, %rd1314, %rd1313;
	add.s64 	%rd1316, %rd1312, %rd1307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1512,%dummy}, %rd1312;
	}
	shf.l.wrap.b32 	%r1513, %r1512, %r1511, 27;
	shf.l.wrap.b32 	%r1514, %r1511, %r1512, 27;
	mov.b64 	%rd1317, {%r1514, %r1513};
	xor.b64  	%rd1318, %rd1317, %rd1316;
	add.s64 	%rd1319, %rd1309, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd1309;
	}
	shf.l.wrap.b32 	%r1517, %r1516, %r1515, 14;
	shf.l.wrap.b32 	%r1518, %r1515, %r1516, 14;
	mov.b64 	%rd1320, {%r1518, %r1517};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	add.s64 	%rd1322, %rd1306, %rd1301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd1306;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 22;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 22;
	mov.b64 	%rd1323, {%r1522, %r1521};
	xor.b64  	%rd1324, %rd1323, %rd1322;
	add.s64 	%rd1325, %rd1316, %rd1315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd1315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1315;
	}
	shf.l.wrap.b32 	%r1525, %r1524, %r1523, 17;
	shf.l.wrap.b32 	%r1526, %r1523, %r1524, 17;
	mov.b64 	%rd1326, {%r1526, %r1525};
	xor.b64  	%rd1327, %rd1326, %rd1325;
	add.s64 	%rd1328, %rd1324, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd1324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd1324;
	}
	shf.r.wrap.b32 	%r1529, %r1528, %r1527, 15;
	shf.r.wrap.b32 	%r1530, %r1527, %r1528, 15;
	mov.b64 	%rd1329, {%r1530, %r1529};
	xor.b64  	%rd1330, %rd1329, %rd1328;
	add.s64 	%rd1331, %rd1321, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd1321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd1321;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 28;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 28;
	mov.b64 	%rd1332, {%r1534, %r1533};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	add.s64 	%rd1334, %rd1318, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd1318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd1318;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 25;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 25;
	mov.b64 	%rd1335, {%r1538, %r1537};
	xor.b64  	%rd1336, %rd1335, %rd1334;
	add.s64 	%rd1337, %rd1328, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd1327;
	}
	shf.r.wrap.b32 	%r1541, %r1540, %r1539, 20;
	shf.r.wrap.b32 	%r1542, %r1539, %r1540, 20;
	mov.b64 	%rd1338, {%r1542, %r1541};
	xor.b64  	%rd1339, %rd1338, %rd1337;
	add.s64 	%rd1340, %rd1336, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd1336;
	}
	shf.l.wrap.b32 	%r1545, %r1544, %r1543, 9;
	shf.l.wrap.b32 	%r1546, %r1543, %r1544, 9;
	mov.b64 	%rd1341, {%r1546, %r1545};
	xor.b64  	%rd1342, %rd1341, %rd1340;
	add.s64 	%rd1343, %rd1333, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1547,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1548}, %rd1333;
	}
	shf.r.wrap.b32 	%r1549, %r1548, %r1547, 10;
	shf.r.wrap.b32 	%r1550, %r1547, %r1548, 10;
	mov.b64 	%rd1344, {%r1550, %r1549};
	xor.b64  	%rd1345, %rd1344, %rd1343;
	add.s64 	%rd1346, %rd1330, %rd1325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1551,%dummy}, %rd1330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1552}, %rd1330;
	}
	shf.r.wrap.b32 	%r1553, %r1552, %r1551, 8;
	shf.r.wrap.b32 	%r1554, %r1551, %r1552, 8;
	mov.b64 	%rd1347, {%r1554, %r1553};
	xor.b64  	%rd1348, %rd1347, %rd1346;
	add.s64 	%rd1349, %rd1048, %rd1340;
	add.s64 	%rd1350, %rd1049, %rd1339;
	add.s64 	%rd1351, %rd1050, %rd1343;
	add.s64 	%rd1352, %rd1062, %rd1348;
	add.s64 	%rd1353, %rd1051, %rd1346;
	add.s64 	%rd1354, %rd1052, %rd1345;
	add.s64 	%rd1355, %rd1354, -72057594037927928;
	add.s64 	%rd1356, %rd1342, %rd1054;
	add.s64 	%rd1357, %rd1356, 5;
	add.s64 	%rd1358, %rd1349, %rd1350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd1350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd1350;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 25;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 25;
	mov.b64 	%rd1359, {%r1558, %r1557};
	xor.b64  	%rd1360, %rd1359, %rd1358;
	add.s64 	%rd1361, %rd1351, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd1352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd1352;
	}
	shf.l.wrap.b32 	%r1561, %r1560, %r1559, 30;
	shf.l.wrap.b32 	%r1562, %r1559, %r1560, 30;
	mov.b64 	%rd1362, {%r1562, %r1561};
	xor.b64  	%rd1363, %rd1362, %rd1361;
	add.s64 	%rd1364, %rd1353, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd1355;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 30;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 30;
	mov.b64 	%rd1365, {%r1566, %r1565};
	xor.b64  	%rd1366, %rd1365, %rd1364;
	add.s64 	%rd1367, %rd1053, %rd1337;
	add.s64 	%rd1368, %rd1367, %rd1357;
	add.s64 	%rd1369, %rd1368, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd1357;
	}
	shf.l.wrap.b32 	%r1569, %r1568, %r1567, 24;
	shf.l.wrap.b32 	%r1570, %r1567, %r1568, 24;
	mov.b64 	%rd1370, {%r1570, %r1569};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	add.s64 	%rd1372, %rd1360, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd1360;
	}
	shf.l.wrap.b32 	%r1573, %r1572, %r1571, 13;
	shf.l.wrap.b32 	%r1574, %r1571, %r1572, 13;
	mov.b64 	%rd1373, {%r1574, %r1573};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	add.s64 	%rd1375, %rd1371, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd1371;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 14;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 14;
	mov.b64 	%rd1376, {%r1578, %r1577};
	xor.b64  	%rd1377, %rd1376, %rd1375;
	add.s64 	%rd1378, %rd1366, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1580,%dummy}, %rd1366;
	}
	shf.l.wrap.b32 	%r1581, %r1580, %r1579, 10;
	shf.l.wrap.b32 	%r1582, %r1579, %r1580, 10;
	mov.b64 	%rd1379, {%r1582, %r1581};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	add.s64 	%rd1381, %rd1363, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1583}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd1363;
	}
	shf.l.wrap.b32 	%r1585, %r1584, %r1583, 17;
	shf.l.wrap.b32 	%r1586, %r1583, %r1584, 17;
	mov.b64 	%rd1382, {%r1586, %r1585};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	add.s64 	%rd1384, %rd1375, %rd1374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1588,%dummy}, %rd1374;
	}
	shf.l.wrap.b32 	%r1589, %r1588, %r1587, 25;
	shf.l.wrap.b32 	%r1590, %r1587, %r1588, 25;
	mov.b64 	%rd1385, {%r1590, %r1589};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	add.s64 	%rd1387, %rd1383, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1591}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd1383;
	}
	shf.l.wrap.b32 	%r1593, %r1592, %r1591, 29;
	shf.l.wrap.b32 	%r1594, %r1591, %r1592, 29;
	mov.b64 	%rd1388, {%r1594, %r1593};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	add.s64 	%rd1390, %rd1380, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd1380;
	}
	shf.r.wrap.b32 	%r1597, %r1596, %r1595, 25;
	shf.r.wrap.b32 	%r1598, %r1595, %r1596, 25;
	mov.b64 	%rd1391, {%r1598, %r1597};
	xor.b64  	%rd1392, %rd1391, %rd1390;
	add.s64 	%rd1393, %rd1377, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd1377;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 21;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 21;
	mov.b64 	%rd1394, {%r1602, %r1601};
	xor.b64  	%rd1395, %rd1394, %rd1393;
	add.s64 	%rd1396, %rd1387, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd1386;
	}
	shf.l.wrap.b32 	%r1605, %r1604, %r1603, 8;
	shf.l.wrap.b32 	%r1606, %r1603, %r1604, 8;
	mov.b64 	%rd1397, {%r1606, %r1605};
	xor.b64  	%rd1398, %rd1397, %rd1396;
	add.s64 	%rd1399, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd1395;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 29;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 29;
	mov.b64 	%rd1400, {%r1610, %r1609};
	xor.b64  	%rd1401, %rd1400, %rd1399;
	add.s64 	%rd1402, %rd1392, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd1392;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 8;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 8;
	mov.b64 	%rd1403, {%r1614, %r1613};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	add.s64 	%rd1405, %rd1389, %rd1384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1616,%dummy}, %rd1389;
	}
	shf.l.wrap.b32 	%r1617, %r1616, %r1615, 22;
	shf.l.wrap.b32 	%r1618, %r1615, %r1616, 22;
	mov.b64 	%rd1406, {%r1618, %r1617};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	add.s64 	%rd1408, %rd1049, %rd1399;
	add.s64 	%rd1409, %rd1050, %rd1398;
	add.s64 	%rd1410, %rd1062, %rd1402;
	add.s64 	%rd1411, %rd1051, %rd1407;
	add.s64 	%rd1412, %rd1052, %rd1405;
	add.s64 	%rd1413, %rd1053, %rd1404;
	add.s64 	%rd1414, %rd1413, 8;
	add.s64 	%rd1415, %rd1054, %rd1396;
	add.s64 	%rd1416, %rd1401, %rd1047;
	add.s64 	%rd1417, %rd1416, 6;
	add.s64 	%rd1418, %rd1415, %rd1417;
	add.s64 	%rd1419, %rd1408, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd1409;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 18;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 18;
	mov.b64 	%rd1420, {%r1622, %r1621};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	add.s64 	%rd1422, %rd1410, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd1411;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 28;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 28;
	mov.b64 	%rd1423, {%r1626, %r1625};
	xor.b64  	%rd1424, %rd1423, %rd1422;
	add.s64 	%rd1425, %rd1412, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1627}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd1414;
	}
	shf.l.wrap.b32 	%r1629, %r1628, %r1627, 19;
	shf.l.wrap.b32 	%r1630, %r1627, %r1628, 19;
	mov.b64 	%rd1426, {%r1630, %r1629};
	xor.b64  	%rd1427, %rd1426, %rd1425;
	add.s64 	%rd1428, %rd1418, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd1417;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 27;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 27;
	mov.b64 	%rd1429, {%r1634, %r1633};
	xor.b64  	%rd1430, %rd1429, %rd1428;
	add.s64 	%rd1431, %rd1421, %rd1422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd1421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd1421;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 31;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 31;
	mov.b64 	%rd1432, {%r1638, %r1637};
	xor.b64  	%rd1433, %rd1432, %rd1431;
	add.s64 	%rd1434, %rd1430, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd1430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd1430;
	}
	shf.l.wrap.b32 	%r1641, %r1640, %r1639, 27;
	shf.l.wrap.b32 	%r1642, %r1639, %r1640, 27;
	mov.b64 	%rd1435, {%r1642, %r1641};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	add.s64 	%rd1437, %rd1427, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1643}, %rd1427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1427;
	}
	shf.l.wrap.b32 	%r1645, %r1644, %r1643, 14;
	shf.l.wrap.b32 	%r1646, %r1643, %r1644, 14;
	mov.b64 	%rd1438, {%r1646, %r1645};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	add.s64 	%rd1440, %rd1424, %rd1419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd1424;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 22;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 22;
	mov.b64 	%rd1441, {%r1650, %r1649};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	add.s64 	%rd1443, %rd1434, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd1433;
	}
	shf.l.wrap.b32 	%r1653, %r1652, %r1651, 17;
	shf.l.wrap.b32 	%r1654, %r1651, %r1652, 17;
	mov.b64 	%rd1444, {%r1654, %r1653};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	add.s64 	%rd1446, %rd1442, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd1442;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 15;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 15;
	mov.b64 	%rd1447, {%r1658, %r1657};
	xor.b64  	%rd1448, %rd1447, %rd1446;
	add.s64 	%rd1449, %rd1439, %rd1440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd1439;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 28;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 28;
	mov.b64 	%rd1450, {%r1662, %r1661};
	xor.b64  	%rd1451, %rd1450, %rd1449;
	add.s64 	%rd1452, %rd1436, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd1436;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 25;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 25;
	mov.b64 	%rd1453, {%r1666, %r1665};
	xor.b64  	%rd1454, %rd1453, %rd1452;
	add.s64 	%rd1455, %rd1446, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd1445;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 20;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 20;
	mov.b64 	%rd1456, {%r1670, %r1669};
	xor.b64  	%rd1457, %rd1456, %rd1455;
	add.s64 	%rd1458, %rd1454, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd1454;
	}
	shf.l.wrap.b32 	%r1673, %r1672, %r1671, 9;
	shf.l.wrap.b32 	%r1674, %r1671, %r1672, 9;
	mov.b64 	%rd1459, {%r1674, %r1673};
	xor.b64  	%rd1460, %rd1459, %rd1458;
	add.s64 	%rd1461, %rd1451, %rd1452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd1451;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 10;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 10;
	mov.b64 	%rd1462, {%r1678, %r1677};
	xor.b64  	%rd1463, %rd1462, %rd1461;
	add.s64 	%rd1464, %rd1448, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd1448;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 8;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 8;
	mov.b64 	%rd1465, {%r1682, %r1681};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	add.s64 	%rd1467, %rd1050, %rd1458;
	add.s64 	%rd1468, %rd1062, %rd1457;
	add.s64 	%rd1469, %rd1051, %rd1461;
	add.s64 	%rd1470, %rd1052, %rd1466;
	add.s64 	%rd1471, %rd1053, %rd1464;
	add.s64 	%rd1472, %rd1054, %rd1463;
	add.s64 	%rd1473, %rd1472, -72057594037927936;
	add.s64 	%rd1474, %rd1460, %rd1048;
	add.s64 	%rd1475, %rd1474, 7;
	add.s64 	%rd1476, %rd1467, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1684}, %rd1468;
	}
	shf.r.wrap.b32 	%r1685, %r1684, %r1683, 25;
	shf.r.wrap.b32 	%r1686, %r1683, %r1684, 25;
	mov.b64 	%rd1477, {%r1686, %r1685};
	xor.b64  	%rd1478, %rd1477, %rd1476;
	add.s64 	%rd1479, %rd1469, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd1470;
	}
	shf.l.wrap.b32 	%r1689, %r1688, %r1687, 30;
	shf.l.wrap.b32 	%r1690, %r1687, %r1688, 30;
	mov.b64 	%rd1480, {%r1690, %r1689};
	xor.b64  	%rd1481, %rd1480, %rd1479;
	add.s64 	%rd1482, %rd1471, %rd1473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1691,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1692}, %rd1473;
	}
	shf.r.wrap.b32 	%r1693, %r1692, %r1691, 30;
	shf.r.wrap.b32 	%r1694, %r1691, %r1692, 30;
	mov.b64 	%rd1483, {%r1694, %r1693};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	add.s64 	%rd1485, %rd1047, %rd1455;
	add.s64 	%rd1486, %rd1485, %rd1475;
	add.s64 	%rd1487, %rd1486, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd1475;
	}
	shf.l.wrap.b32 	%r1697, %r1696, %r1695, 24;
	shf.l.wrap.b32 	%r1698, %r1695, %r1696, 24;
	mov.b64 	%rd1488, {%r1698, %r1697};
	xor.b64  	%rd1489, %rd1488, %rd1487;
	add.s64 	%rd1490, %rd1478, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd1478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd1478;
	}
	shf.l.wrap.b32 	%r1701, %r1700, %r1699, 13;
	shf.l.wrap.b32 	%r1702, %r1699, %r1700, 13;
	mov.b64 	%rd1491, {%r1702, %r1701};
	xor.b64  	%rd1492, %rd1491, %rd1490;
	add.s64 	%rd1493, %rd1489, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd1489;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd1494, {%r1706, %r1705};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	add.s64 	%rd1496, %rd1484, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1707}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd1484;
	}
	shf.l.wrap.b32 	%r1709, %r1708, %r1707, 10;
	shf.l.wrap.b32 	%r1710, %r1707, %r1708, 10;
	mov.b64 	%rd1497, {%r1710, %r1709};
	xor.b64  	%rd1498, %rd1497, %rd1496;
	add.s64 	%rd1499, %rd1481, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd1481;
	}
	shf.l.wrap.b32 	%r1713, %r1712, %r1711, 17;
	shf.l.wrap.b32 	%r1714, %r1711, %r1712, 17;
	mov.b64 	%rd1500, {%r1714, %r1713};
	xor.b64  	%rd1501, %rd1500, %rd1499;
	add.s64 	%rd1502, %rd1493, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd1492;
	}
	shf.l.wrap.b32 	%r1717, %r1716, %r1715, 25;
	shf.l.wrap.b32 	%r1718, %r1715, %r1716, 25;
	mov.b64 	%rd1503, {%r1718, %r1717};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	add.s64 	%rd1505, %rd1501, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd1501;
	}
	shf.l.wrap.b32 	%r1721, %r1720, %r1719, 29;
	shf.l.wrap.b32 	%r1722, %r1719, %r1720, 29;
	mov.b64 	%rd1506, {%r1722, %r1721};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	add.s64 	%rd1508, %rd1498, %rd1499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1723,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1724}, %rd1498;
	}
	shf.r.wrap.b32 	%r1725, %r1724, %r1723, 25;
	shf.r.wrap.b32 	%r1726, %r1723, %r1724, 25;
	mov.b64 	%rd1509, {%r1726, %r1725};
	xor.b64  	%rd1510, %rd1509, %rd1508;
	add.s64 	%rd1511, %rd1495, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd1495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd1495;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 21;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 21;
	mov.b64 	%rd1512, {%r1730, %r1729};
	xor.b64  	%rd1513, %rd1512, %rd1511;
	add.s64 	%rd1514, %rd1505, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1731}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1732,%dummy}, %rd1504;
	}
	shf.l.wrap.b32 	%r1733, %r1732, %r1731, 8;
	shf.l.wrap.b32 	%r1734, %r1731, %r1732, 8;
	mov.b64 	%rd1515, {%r1734, %r1733};
	xor.b64  	%rd1516, %rd1515, %rd1514;
	add.s64 	%rd1517, %rd1513, %rd1508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd1513;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 29;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 29;
	mov.b64 	%rd1518, {%r1738, %r1737};
	xor.b64  	%rd1519, %rd1518, %rd1517;
	add.s64 	%rd1520, %rd1510, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1739,%dummy}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1740}, %rd1510;
	}
	shf.r.wrap.b32 	%r1741, %r1740, %r1739, 8;
	shf.r.wrap.b32 	%r1742, %r1739, %r1740, 8;
	mov.b64 	%rd1521, {%r1742, %r1741};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	add.s64 	%rd1523, %rd1507, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd1507;
	}
	shf.l.wrap.b32 	%r1745, %r1744, %r1743, 22;
	shf.l.wrap.b32 	%r1746, %r1743, %r1744, 22;
	mov.b64 	%rd1524, {%r1746, %r1745};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	add.s64 	%rd1526, %rd1062, %rd1517;
	add.s64 	%rd1527, %rd1051, %rd1516;
	add.s64 	%rd1528, %rd1052, %rd1520;
	add.s64 	%rd1529, %rd1053, %rd1525;
	add.s64 	%rd1530, %rd1054, %rd1523;
	add.s64 	%rd1531, %rd1047, %rd1522;
	add.s64 	%rd1532, %rd1531, -72057594037927928;
	add.s64 	%rd1533, %rd1048, %rd1514;
	add.s64 	%rd1534, %rd1519, %rd1049;
	add.s64 	%rd1535, %rd1534, 8;
	add.s64 	%rd1536, %rd1533, %rd1535;
	add.s64 	%rd1537, %rd1526, %rd1527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1747,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1748}, %rd1527;
	}
	shf.r.wrap.b32 	%r1749, %r1748, %r1747, 18;
	shf.r.wrap.b32 	%r1750, %r1747, %r1748, 18;
	mov.b64 	%rd1538, {%r1750, %r1749};
	xor.b64  	%rd1539, %rd1538, %rd1537;
	add.s64 	%rd1540, %rd1528, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd1529;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 28;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 28;
	mov.b64 	%rd1541, {%r1754, %r1753};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	add.s64 	%rd1543, %rd1530, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1756,%dummy}, %rd1532;
	}
	shf.l.wrap.b32 	%r1757, %r1756, %r1755, 19;
	shf.l.wrap.b32 	%r1758, %r1755, %r1756, 19;
	mov.b64 	%rd1544, {%r1758, %r1757};
	xor.b64  	%rd1545, %rd1544, %rd1543;
	add.s64 	%rd1546, %rd1536, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd1535;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 27;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 27;
	mov.b64 	%rd1547, {%r1762, %r1761};
	xor.b64  	%rd1548, %rd1547, %rd1546;
	add.s64 	%rd1549, %rd1539, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd1539;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 31;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 31;
	mov.b64 	%rd1550, {%r1766, %r1765};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	add.s64 	%rd1552, %rd1548, %rd1543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd1548;
	}
	shf.l.wrap.b32 	%r1769, %r1768, %r1767, 27;
	shf.l.wrap.b32 	%r1770, %r1767, %r1768, 27;
	mov.b64 	%rd1553, {%r1770, %r1769};
	xor.b64  	%rd1554, %rd1553, %rd1552;
	add.s64 	%rd1555, %rd1545, %rd1546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1771}, %rd1545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1772,%dummy}, %rd1545;
	}
	shf.l.wrap.b32 	%r1773, %r1772, %r1771, 14;
	shf.l.wrap.b32 	%r1774, %r1771, %r1772, 14;
	mov.b64 	%rd1556, {%r1774, %r1773};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	add.s64 	%rd1558, %rd1542, %rd1537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd1542;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 22;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 22;
	mov.b64 	%rd1559, {%r1778, %r1777};
	xor.b64  	%rd1560, %rd1559, %rd1558;
	add.s64 	%rd1561, %rd1552, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1780,%dummy}, %rd1551;
	}
	shf.l.wrap.b32 	%r1781, %r1780, %r1779, 17;
	shf.l.wrap.b32 	%r1782, %r1779, %r1780, 17;
	mov.b64 	%rd1562, {%r1782, %r1781};
	xor.b64  	%rd1563, %rd1562, %rd1561;
	add.s64 	%rd1564, %rd1560, %rd1555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd1560;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 15;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 15;
	mov.b64 	%rd1565, {%r1786, %r1785};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	add.s64 	%rd1567, %rd1557, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1787,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd1557;
	}
	shf.r.wrap.b32 	%r1789, %r1788, %r1787, 28;
	shf.r.wrap.b32 	%r1790, %r1787, %r1788, 28;
	mov.b64 	%rd1568, {%r1790, %r1789};
	xor.b64  	%rd1569, %rd1568, %rd1567;
	add.s64 	%rd1570, %rd1554, %rd1549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd1554;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 25;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 25;
	mov.b64 	%rd1571, {%r1794, %r1793};
	xor.b64  	%rd1572, %rd1571, %rd1570;
	add.s64 	%rd1573, %rd1564, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1795,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd1563;
	}
	shf.r.wrap.b32 	%r1797, %r1796, %r1795, 20;
	shf.r.wrap.b32 	%r1798, %r1795, %r1796, 20;
	mov.b64 	%rd1574, {%r1798, %r1797};
	xor.b64  	%rd1575, %rd1574, %rd1573;
	add.s64 	%rd1576, %rd1572, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd1572;
	}
	shf.l.wrap.b32 	%r1801, %r1800, %r1799, 9;
	shf.l.wrap.b32 	%r1802, %r1799, %r1800, 9;
	mov.b64 	%rd1577, {%r1802, %r1801};
	xor.b64  	%rd1578, %rd1577, %rd1576;
	add.s64 	%rd1579, %rd1569, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1803,%dummy}, %rd1569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1804}, %rd1569;
	}
	shf.r.wrap.b32 	%r1805, %r1804, %r1803, 10;
	shf.r.wrap.b32 	%r1806, %r1803, %r1804, 10;
	mov.b64 	%rd1580, {%r1806, %r1805};
	xor.b64  	%rd1581, %rd1580, %rd1579;
	add.s64 	%rd1582, %rd1566, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd1566;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 8;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 8;
	mov.b64 	%rd1583, {%r1810, %r1809};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	add.s64 	%rd1585, %rd1051, %rd1576;
	add.s64 	%rd1586, %rd1052, %rd1575;
	add.s64 	%rd1587, %rd1053, %rd1579;
	add.s64 	%rd1588, %rd1054, %rd1584;
	add.s64 	%rd1589, %rd1047, %rd1582;
	add.s64 	%rd1590, %rd1048, %rd1581;
	add.s64 	%rd1591, %rd1590, 8;
	add.s64 	%rd1592, %rd1578, %rd1050;
	add.s64 	%rd1593, %rd1592, 9;
	add.s64 	%rd1594, %rd1585, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1811,%dummy}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1812}, %rd1586;
	}
	shf.r.wrap.b32 	%r1813, %r1812, %r1811, 25;
	shf.r.wrap.b32 	%r1814, %r1811, %r1812, 25;
	mov.b64 	%rd1595, {%r1814, %r1813};
	xor.b64  	%rd1596, %rd1595, %rd1594;
	add.s64 	%rd1597, %rd1587, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd1588;
	}
	shf.l.wrap.b32 	%r1817, %r1816, %r1815, 30;
	shf.l.wrap.b32 	%r1818, %r1815, %r1816, 30;
	mov.b64 	%rd1598, {%r1818, %r1817};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	add.s64 	%rd1600, %rd1589, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1819,%dummy}, %rd1591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1820}, %rd1591;
	}
	shf.r.wrap.b32 	%r1821, %r1820, %r1819, 30;
	shf.r.wrap.b32 	%r1822, %r1819, %r1820, 30;
	mov.b64 	%rd1601, {%r1822, %r1821};
	xor.b64  	%rd1602, %rd1601, %rd1600;
	add.s64 	%rd1603, %rd1049, %rd1573;
	add.s64 	%rd1604, %rd1603, %rd1593;
	add.s64 	%rd1605, %rd1604, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd1593;
	}
	shf.l.wrap.b32 	%r1825, %r1824, %r1823, 24;
	shf.l.wrap.b32 	%r1826, %r1823, %r1824, 24;
	mov.b64 	%rd1606, {%r1826, %r1825};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	add.s64 	%rd1608, %rd1596, %rd1597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd1596;
	}
	shf.l.wrap.b32 	%r1829, %r1828, %r1827, 13;
	shf.l.wrap.b32 	%r1830, %r1827, %r1828, 13;
	mov.b64 	%rd1609, {%r1830, %r1829};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	add.s64 	%rd1611, %rd1607, %rd1600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd1607;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 14;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 14;
	mov.b64 	%rd1612, {%r1834, %r1833};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	add.s64 	%rd1614, %rd1602, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1836,%dummy}, %rd1602;
	}
	shf.l.wrap.b32 	%r1837, %r1836, %r1835, 10;
	shf.l.wrap.b32 	%r1838, %r1835, %r1836, 10;
	mov.b64 	%rd1615, {%r1838, %r1837};
	xor.b64  	%rd1616, %rd1615, %rd1614;
	add.s64 	%rd1617, %rd1599, %rd1594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd1599;
	}
	shf.l.wrap.b32 	%r1841, %r1840, %r1839, 17;
	shf.l.wrap.b32 	%r1842, %r1839, %r1840, 17;
	mov.b64 	%rd1618, {%r1842, %r1841};
	xor.b64  	%rd1619, %rd1618, %rd1617;
	add.s64 	%rd1620, %rd1611, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1843}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd1610;
	}
	shf.l.wrap.b32 	%r1845, %r1844, %r1843, 25;
	shf.l.wrap.b32 	%r1846, %r1843, %r1844, 25;
	mov.b64 	%rd1621, {%r1846, %r1845};
	xor.b64  	%rd1622, %rd1621, %rd1620;
	add.s64 	%rd1623, %rd1619, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1848,%dummy}, %rd1619;
	}
	shf.l.wrap.b32 	%r1849, %r1848, %r1847, 29;
	shf.l.wrap.b32 	%r1850, %r1847, %r1848, 29;
	mov.b64 	%rd1624, {%r1850, %r1849};
	xor.b64  	%rd1625, %rd1624, %rd1623;
	add.s64 	%rd1626, %rd1616, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1851,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1852}, %rd1616;
	}
	shf.r.wrap.b32 	%r1853, %r1852, %r1851, 25;
	shf.r.wrap.b32 	%r1854, %r1851, %r1852, 25;
	mov.b64 	%rd1627, {%r1854, %r1853};
	xor.b64  	%rd1628, %rd1627, %rd1626;
	add.s64 	%rd1629, %rd1613, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd1613;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 21;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 21;
	mov.b64 	%rd1630, {%r1858, %r1857};
	xor.b64  	%rd1631, %rd1630, %rd1629;
	add.s64 	%rd1632, %rd1623, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1859}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd1622;
	}
	shf.l.wrap.b32 	%r1861, %r1860, %r1859, 8;
	shf.l.wrap.b32 	%r1862, %r1859, %r1860, 8;
	mov.b64 	%rd1633, {%r1862, %r1861};
	xor.b64  	%rd1634, %rd1633, %rd1632;
	add.s64 	%rd1635, %rd1631, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd1631;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 29;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 29;
	mov.b64 	%rd1636, {%r1866, %r1865};
	xor.b64  	%rd1637, %rd1636, %rd1635;
	add.s64 	%rd1638, %rd1628, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd1628;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 8;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 8;
	mov.b64 	%rd1639, {%r1870, %r1869};
	xor.b64  	%rd1640, %rd1639, %rd1638;
	add.s64 	%rd1641, %rd1625, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd1625;
	}
	shf.l.wrap.b32 	%r1873, %r1872, %r1871, 22;
	shf.l.wrap.b32 	%r1874, %r1871, %r1872, 22;
	mov.b64 	%rd1642, {%r1874, %r1873};
	xor.b64  	%rd1643, %rd1642, %rd1641;
	add.s64 	%rd1644, %rd1052, %rd1635;
	add.s64 	%rd1645, %rd1053, %rd1634;
	add.s64 	%rd1646, %rd1054, %rd1638;
	add.s64 	%rd1647, %rd1047, %rd1643;
	add.s64 	%rd1648, %rd1048, %rd1641;
	add.s64 	%rd1649, %rd1049, %rd1640;
	add.s64 	%rd1650, %rd1649, -72057594037927936;
	add.s64 	%rd1651, %rd1050, %rd1632;
	add.s64 	%rd1652, %rd1637, %rd1062;
	add.s64 	%rd1653, %rd1652, 10;
	add.s64 	%rd1654, %rd1651, %rd1653;
	add.s64 	%rd1655, %rd1644, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd1645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd1645;
	}
	shf.r.wrap.b32 	%r1877, %r1876, %r1875, 18;
	shf.r.wrap.b32 	%r1878, %r1875, %r1876, 18;
	mov.b64 	%rd1656, {%r1878, %r1877};
	xor.b64  	%rd1657, %rd1656, %rd1655;
	add.s64 	%rd1658, %rd1646, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd1647;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 28;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 28;
	mov.b64 	%rd1659, {%r1882, %r1881};
	xor.b64  	%rd1660, %rd1659, %rd1658;
	add.s64 	%rd1661, %rd1648, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd1650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd1650;
	}
	shf.l.wrap.b32 	%r1885, %r1884, %r1883, 19;
	shf.l.wrap.b32 	%r1886, %r1883, %r1884, 19;
	mov.b64 	%rd1662, {%r1886, %r1885};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	add.s64 	%rd1664, %rd1654, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd1653;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 27;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 27;
	mov.b64 	%rd1665, {%r1890, %r1889};
	xor.b64  	%rd1666, %rd1665, %rd1664;
	add.s64 	%rd1667, %rd1657, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd1657;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 31;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 31;
	mov.b64 	%rd1668, {%r1894, %r1893};
	xor.b64  	%rd1669, %rd1668, %rd1667;
	add.s64 	%rd1670, %rd1666, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1896,%dummy}, %rd1666;
	}
	shf.l.wrap.b32 	%r1897, %r1896, %r1895, 27;
	shf.l.wrap.b32 	%r1898, %r1895, %r1896, 27;
	mov.b64 	%rd1671, {%r1898, %r1897};
	xor.b64  	%rd1672, %rd1671, %rd1670;
	add.s64 	%rd1673, %rd1663, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd1663;
	}
	shf.l.wrap.b32 	%r1901, %r1900, %r1899, 14;
	shf.l.wrap.b32 	%r1902, %r1899, %r1900, 14;
	mov.b64 	%rd1674, {%r1902, %r1901};
	xor.b64  	%rd1675, %rd1674, %rd1673;
	add.s64 	%rd1676, %rd1660, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd1660;
	}
	shf.r.wrap.b32 	%r1905, %r1904, %r1903, 22;
	shf.r.wrap.b32 	%r1906, %r1903, %r1904, 22;
	mov.b64 	%rd1677, {%r1906, %r1905};
	xor.b64  	%rd1678, %rd1677, %rd1676;
	add.s64 	%rd1679, %rd1670, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd1669;
	}
	shf.l.wrap.b32 	%r1909, %r1908, %r1907, 17;
	shf.l.wrap.b32 	%r1910, %r1907, %r1908, 17;
	mov.b64 	%rd1680, {%r1910, %r1909};
	xor.b64  	%rd1681, %rd1680, %rd1679;
	add.s64 	%rd1682, %rd1678, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd1678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd1678;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 15;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 15;
	mov.b64 	%rd1683, {%r1914, %r1913};
	xor.b64  	%rd1684, %rd1683, %rd1682;
	add.s64 	%rd1685, %rd1675, %rd1676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1915,%dummy}, %rd1675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1916}, %rd1675;
	}
	shf.r.wrap.b32 	%r1917, %r1916, %r1915, 28;
	shf.r.wrap.b32 	%r1918, %r1915, %r1916, 28;
	mov.b64 	%rd1686, {%r1918, %r1917};
	xor.b64  	%rd1687, %rd1686, %rd1685;
	add.s64 	%rd1688, %rd1672, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd1672;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 25;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 25;
	mov.b64 	%rd1689, {%r1922, %r1921};
	xor.b64  	%rd1690, %rd1689, %rd1688;
	add.s64 	%rd1691, %rd1682, %rd1681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1923,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1924}, %rd1681;
	}
	shf.r.wrap.b32 	%r1925, %r1924, %r1923, 20;
	shf.r.wrap.b32 	%r1926, %r1923, %r1924, 20;
	mov.b64 	%rd1692, {%r1926, %r1925};
	xor.b64  	%rd1693, %rd1692, %rd1691;
	add.s64 	%rd1694, %rd1690, %rd1685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1927}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1928,%dummy}, %rd1690;
	}
	shf.l.wrap.b32 	%r1929, %r1928, %r1927, 9;
	shf.l.wrap.b32 	%r1930, %r1927, %r1928, 9;
	mov.b64 	%rd1695, {%r1930, %r1929};
	xor.b64  	%rd1696, %rd1695, %rd1694;
	add.s64 	%rd1697, %rd1687, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd1687;
	}
	shf.r.wrap.b32 	%r1933, %r1932, %r1931, 10;
	shf.r.wrap.b32 	%r1934, %r1931, %r1932, 10;
	mov.b64 	%rd1698, {%r1934, %r1933};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	add.s64 	%rd1700, %rd1684, %rd1679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1935,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1936}, %rd1684;
	}
	shf.r.wrap.b32 	%r1937, %r1936, %r1935, 8;
	shf.r.wrap.b32 	%r1938, %r1935, %r1936, 8;
	mov.b64 	%rd1701, {%r1938, %r1937};
	xor.b64  	%rd1702, %rd1701, %rd1700;
	add.s64 	%rd1703, %rd1053, %rd1694;
	add.s64 	%rd1704, %rd1054, %rd1693;
	add.s64 	%rd1705, %rd1047, %rd1697;
	add.s64 	%rd1706, %rd1048, %rd1702;
	add.s64 	%rd1707, %rd1049, %rd1700;
	add.s64 	%rd1708, %rd1050, %rd1699;
	add.s64 	%rd1709, %rd1708, -72057594037927928;
	add.s64 	%rd1710, %rd1696, %rd1051;
	add.s64 	%rd1711, %rd1710, 11;
	add.s64 	%rd1712, %rd1703, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1939,%dummy}, %rd1704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1940}, %rd1704;
	}
	shf.r.wrap.b32 	%r1941, %r1940, %r1939, 25;
	shf.r.wrap.b32 	%r1942, %r1939, %r1940, 25;
	mov.b64 	%rd1713, {%r1942, %r1941};
	xor.b64  	%rd1714, %rd1713, %rd1712;
	add.s64 	%rd1715, %rd1705, %rd1706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd1706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1944,%dummy}, %rd1706;
	}
	shf.l.wrap.b32 	%r1945, %r1944, %r1943, 30;
	shf.l.wrap.b32 	%r1946, %r1943, %r1944, 30;
	mov.b64 	%rd1716, {%r1946, %r1945};
	xor.b64  	%rd1717, %rd1716, %rd1715;
	add.s64 	%rd1718, %rd1707, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1947,%dummy}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1948}, %rd1709;
	}
	shf.r.wrap.b32 	%r1949, %r1948, %r1947, 30;
	shf.r.wrap.b32 	%r1950, %r1947, %r1948, 30;
	mov.b64 	%rd1719, {%r1950, %r1949};
	xor.b64  	%rd1720, %rd1719, %rd1718;
	add.s64 	%rd1721, %rd1062, %rd1691;
	add.s64 	%rd1722, %rd1721, %rd1711;
	add.s64 	%rd1723, %rd1722, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1952,%dummy}, %rd1711;
	}
	shf.l.wrap.b32 	%r1953, %r1952, %r1951, 24;
	shf.l.wrap.b32 	%r1954, %r1951, %r1952, 24;
	mov.b64 	%rd1724, {%r1954, %r1953};
	xor.b64  	%rd1725, %rd1724, %rd1723;
	add.s64 	%rd1726, %rd1714, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1955}, %rd1714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd1714;
	}
	shf.l.wrap.b32 	%r1957, %r1956, %r1955, 13;
	shf.l.wrap.b32 	%r1958, %r1955, %r1956, 13;
	mov.b64 	%rd1727, {%r1958, %r1957};
	xor.b64  	%rd1728, %rd1727, %rd1726;
	add.s64 	%rd1729, %rd1725, %rd1718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1959,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1960}, %rd1725;
	}
	shf.r.wrap.b32 	%r1961, %r1960, %r1959, 14;
	shf.r.wrap.b32 	%r1962, %r1959, %r1960, 14;
	mov.b64 	%rd1730, {%r1962, %r1961};
	xor.b64  	%rd1731, %rd1730, %rd1729;
	add.s64 	%rd1732, %rd1720, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1963}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd1720;
	}
	shf.l.wrap.b32 	%r1965, %r1964, %r1963, 10;
	shf.l.wrap.b32 	%r1966, %r1963, %r1964, 10;
	mov.b64 	%rd1733, {%r1966, %r1965};
	xor.b64  	%rd1734, %rd1733, %rd1732;
	add.s64 	%rd1735, %rd1717, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1967}, %rd1717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd1717;
	}
	shf.l.wrap.b32 	%r1969, %r1968, %r1967, 17;
	shf.l.wrap.b32 	%r1970, %r1967, %r1968, 17;
	mov.b64 	%rd1736, {%r1970, %r1969};
	xor.b64  	%rd1737, %rd1736, %rd1735;
	add.s64 	%rd1738, %rd1729, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd1728;
	}
	shf.l.wrap.b32 	%r1973, %r1972, %r1971, 25;
	shf.l.wrap.b32 	%r1974, %r1971, %r1972, 25;
	mov.b64 	%rd1739, {%r1974, %r1973};
	xor.b64  	%rd1740, %rd1739, %rd1738;
	add.s64 	%rd1741, %rd1737, %rd1732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1975}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd1737;
	}
	shf.l.wrap.b32 	%r1977, %r1976, %r1975, 29;
	shf.l.wrap.b32 	%r1978, %r1975, %r1976, 29;
	mov.b64 	%rd1742, {%r1978, %r1977};
	xor.b64  	%rd1743, %rd1742, %rd1741;
	add.s64 	%rd1744, %rd1734, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd1734;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 25;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 25;
	mov.b64 	%rd1745, {%r1982, %r1981};
	xor.b64  	%rd1746, %rd1745, %rd1744;
	add.s64 	%rd1747, %rd1731, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1983,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1984}, %rd1731;
	}
	shf.r.wrap.b32 	%r1985, %r1984, %r1983, 21;
	shf.r.wrap.b32 	%r1986, %r1983, %r1984, 21;
	mov.b64 	%rd1748, {%r1986, %r1985};
	xor.b64  	%rd1749, %rd1748, %rd1747;
	add.s64 	%rd1750, %rd1741, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd1740;
	}
	shf.l.wrap.b32 	%r1989, %r1988, %r1987, 8;
	shf.l.wrap.b32 	%r1990, %r1987, %r1988, 8;
	mov.b64 	%rd1751, {%r1990, %r1989};
	xor.b64  	%rd1752, %rd1751, %rd1750;
	add.s64 	%rd1753, %rd1749, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1991,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1992}, %rd1749;
	}
	shf.r.wrap.b32 	%r1993, %r1992, %r1991, 29;
	shf.r.wrap.b32 	%r1994, %r1991, %r1992, 29;
	mov.b64 	%rd1754, {%r1994, %r1993};
	xor.b64  	%rd1755, %rd1754, %rd1753;
	add.s64 	%rd1756, %rd1746, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd1746;
	}
	shf.r.wrap.b32 	%r1997, %r1996, %r1995, 8;
	shf.r.wrap.b32 	%r1998, %r1995, %r1996, 8;
	mov.b64 	%rd1757, {%r1998, %r1997};
	xor.b64  	%rd1758, %rd1757, %rd1756;
	add.s64 	%rd1759, %rd1743, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1999}, %rd1743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd1743;
	}
	shf.l.wrap.b32 	%r2001, %r2000, %r1999, 22;
	shf.l.wrap.b32 	%r2002, %r1999, %r2000, 22;
	mov.b64 	%rd1760, {%r2002, %r2001};
	xor.b64  	%rd1761, %rd1760, %rd1759;
	add.s64 	%rd1762, %rd1054, %rd1753;
	add.s64 	%rd1763, %rd1047, %rd1752;
	add.s64 	%rd1764, %rd1048, %rd1756;
	add.s64 	%rd1765, %rd1049, %rd1761;
	add.s64 	%rd1766, %rd1050, %rd1759;
	add.s64 	%rd1767, %rd1062, %rd1758;
	add.s64 	%rd1768, %rd1767, 8;
	add.s64 	%rd1769, %rd1051, %rd1750;
	add.s64 	%rd1770, %rd1755, %rd1052;
	add.s64 	%rd1771, %rd1770, 12;
	add.s64 	%rd1772, %rd1769, %rd1771;
	add.s64 	%rd1773, %rd1762, %rd1763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd1763;
	}
	shf.r.wrap.b32 	%r2005, %r2004, %r2003, 18;
	shf.r.wrap.b32 	%r2006, %r2003, %r2004, 18;
	mov.b64 	%rd1774, {%r2006, %r2005};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	add.s64 	%rd1776, %rd1764, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2007,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2008}, %rd1765;
	}
	shf.r.wrap.b32 	%r2009, %r2008, %r2007, 28;
	shf.r.wrap.b32 	%r2010, %r2007, %r2008, 28;
	mov.b64 	%rd1777, {%r2010, %r2009};
	xor.b64  	%rd1778, %rd1777, %rd1776;
	add.s64 	%rd1779, %rd1766, %rd1768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd1768;
	}
	shf.l.wrap.b32 	%r2013, %r2012, %r2011, 19;
	shf.l.wrap.b32 	%r2014, %r2011, %r2012, 19;
	mov.b64 	%rd1780, {%r2014, %r2013};
	xor.b64  	%rd1781, %rd1780, %rd1779;
	add.s64 	%rd1782, %rd1772, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2015,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2016}, %rd1771;
	}
	shf.r.wrap.b32 	%r2017, %r2016, %r2015, 27;
	shf.r.wrap.b32 	%r2018, %r2015, %r2016, 27;
	mov.b64 	%rd1783, {%r2018, %r2017};
	xor.b64  	%rd1784, %rd1783, %rd1782;
	add.s64 	%rd1785, %rd1775, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd1775;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 31;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 31;
	mov.b64 	%rd1786, {%r2022, %r2021};
	xor.b64  	%rd1787, %rd1786, %rd1785;
	add.s64 	%rd1788, %rd1784, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2023}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2024,%dummy}, %rd1784;
	}
	shf.l.wrap.b32 	%r2025, %r2024, %r2023, 27;
	shf.l.wrap.b32 	%r2026, %r2023, %r2024, 27;
	mov.b64 	%rd1789, {%r2026, %r2025};
	xor.b64  	%rd1790, %rd1789, %rd1788;
	add.s64 	%rd1791, %rd1781, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2027}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd1781;
	}
	shf.l.wrap.b32 	%r2029, %r2028, %r2027, 14;
	shf.l.wrap.b32 	%r2030, %r2027, %r2028, 14;
	mov.b64 	%rd1792, {%r2030, %r2029};
	xor.b64  	%rd1793, %rd1792, %rd1791;
	add.s64 	%rd1794, %rd1778, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2031,%dummy}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2032}, %rd1778;
	}
	shf.r.wrap.b32 	%r2033, %r2032, %r2031, 22;
	shf.r.wrap.b32 	%r2034, %r2031, %r2032, 22;
	mov.b64 	%rd1795, {%r2034, %r2033};
	xor.b64  	%rd1796, %rd1795, %rd1794;
	add.s64 	%rd1797, %rd1788, %rd1787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd1787;
	}
	shf.l.wrap.b32 	%r2037, %r2036, %r2035, 17;
	shf.l.wrap.b32 	%r2038, %r2035, %r2036, 17;
	mov.b64 	%rd1798, {%r2038, %r2037};
	xor.b64  	%rd1799, %rd1798, %rd1797;
	add.s64 	%rd1800, %rd1796, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2039,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2040}, %rd1796;
	}
	shf.r.wrap.b32 	%r2041, %r2040, %r2039, 15;
	shf.r.wrap.b32 	%r2042, %r2039, %r2040, 15;
	mov.b64 	%rd1801, {%r2042, %r2041};
	xor.b64  	%rd1802, %rd1801, %rd1800;
	add.s64 	%rd1803, %rd1793, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2043,%dummy}, %rd1793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd1793;
	}
	shf.r.wrap.b32 	%r2045, %r2044, %r2043, 28;
	shf.r.wrap.b32 	%r2046, %r2043, %r2044, 28;
	mov.b64 	%rd1804, {%r2046, %r2045};
	xor.b64  	%rd1805, %rd1804, %rd1803;
	add.s64 	%rd1806, %rd1790, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2047,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2048}, %rd1790;
	}
	shf.r.wrap.b32 	%r2049, %r2048, %r2047, 25;
	shf.r.wrap.b32 	%r2050, %r2047, %r2048, 25;
	mov.b64 	%rd1807, {%r2050, %r2049};
	xor.b64  	%rd1808, %rd1807, %rd1806;
	add.s64 	%rd1809, %rd1800, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd1799;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 20;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 20;
	mov.b64 	%rd1810, {%r2054, %r2053};
	xor.b64  	%rd1811, %rd1810, %rd1809;
	add.s64 	%rd1812, %rd1808, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2056,%dummy}, %rd1808;
	}
	shf.l.wrap.b32 	%r2057, %r2056, %r2055, 9;
	shf.l.wrap.b32 	%r2058, %r2055, %r2056, 9;
	mov.b64 	%rd1813, {%r2058, %r2057};
	xor.b64  	%rd1814, %rd1813, %rd1812;
	add.s64 	%rd1815, %rd1805, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2059,%dummy}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd1805;
	}
	shf.r.wrap.b32 	%r2061, %r2060, %r2059, 10;
	shf.r.wrap.b32 	%r2062, %r2059, %r2060, 10;
	mov.b64 	%rd1816, {%r2062, %r2061};
	xor.b64  	%rd1817, %rd1816, %rd1815;
	add.s64 	%rd1818, %rd1802, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2063,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2064}, %rd1802;
	}
	shf.r.wrap.b32 	%r2065, %r2064, %r2063, 8;
	shf.r.wrap.b32 	%r2066, %r2063, %r2064, 8;
	mov.b64 	%rd1819, {%r2066, %r2065};
	xor.b64  	%rd1820, %rd1819, %rd1818;
	add.s64 	%rd1821, %rd1047, %rd1812;
	add.s64 	%rd1822, %rd1048, %rd1811;
	add.s64 	%rd1823, %rd1049, %rd1815;
	add.s64 	%rd1824, %rd1050, %rd1820;
	add.s64 	%rd1825, %rd1062, %rd1818;
	add.s64 	%rd1826, %rd1051, %rd1817;
	add.s64 	%rd1827, %rd1826, -72057594037927936;
	add.s64 	%rd1828, %rd1814, %rd1053;
	add.s64 	%rd1829, %rd1828, 13;
	add.s64 	%rd1830, %rd1821, %rd1822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd1822;
	}
	shf.r.wrap.b32 	%r2069, %r2068, %r2067, 25;
	shf.r.wrap.b32 	%r2070, %r2067, %r2068, 25;
	mov.b64 	%rd1831, {%r2070, %r2069};
	xor.b64  	%rd1832, %rd1831, %rd1830;
	add.s64 	%rd1833, %rd1823, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2072,%dummy}, %rd1824;
	}
	shf.l.wrap.b32 	%r2073, %r2072, %r2071, 30;
	shf.l.wrap.b32 	%r2074, %r2071, %r2072, 30;
	mov.b64 	%rd1834, {%r2074, %r2073};
	xor.b64  	%rd1835, %rd1834, %rd1833;
	add.s64 	%rd1836, %rd1825, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd1827;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 30;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 30;
	mov.b64 	%rd1837, {%r2078, %r2077};
	xor.b64  	%rd1838, %rd1837, %rd1836;
	add.s64 	%rd1839, %rd1052, %rd1809;
	add.s64 	%rd1840, %rd1839, %rd1829;
	add.s64 	%rd1841, %rd1840, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2079}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd1829;
	}
	shf.l.wrap.b32 	%r2081, %r2080, %r2079, 24;
	shf.l.wrap.b32 	%r2082, %r2079, %r2080, 24;
	mov.b64 	%rd1842, {%r2082, %r2081};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	add.s64 	%rd1844, %rd1832, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2083}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2084,%dummy}, %rd1832;
	}
	shf.l.wrap.b32 	%r2085, %r2084, %r2083, 13;
	shf.l.wrap.b32 	%r2086, %r2083, %r2084, 13;
	mov.b64 	%rd1845, {%r2086, %r2085};
	xor.b64  	%rd1846, %rd1845, %rd1844;
	add.s64 	%rd1847, %rd1843, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2087,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2088}, %rd1843;
	}
	shf.r.wrap.b32 	%r2089, %r2088, %r2087, 14;
	shf.r.wrap.b32 	%r2090, %r2087, %r2088, 14;
	mov.b64 	%rd1848, {%r2090, %r2089};
	xor.b64  	%rd1849, %rd1848, %rd1847;
	add.s64 	%rd1850, %rd1838, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd1838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2092,%dummy}, %rd1838;
	}
	shf.l.wrap.b32 	%r2093, %r2092, %r2091, 10;
	shf.l.wrap.b32 	%r2094, %r2091, %r2092, 10;
	mov.b64 	%rd1851, {%r2094, %r2093};
	xor.b64  	%rd1852, %rd1851, %rd1850;
	add.s64 	%rd1853, %rd1835, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2095}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2096,%dummy}, %rd1835;
	}
	shf.l.wrap.b32 	%r2097, %r2096, %r2095, 17;
	shf.l.wrap.b32 	%r2098, %r2095, %r2096, 17;
	mov.b64 	%rd1854, {%r2098, %r2097};
	xor.b64  	%rd1855, %rd1854, %rd1853;
	add.s64 	%rd1856, %rd1847, %rd1846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd1846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2100,%dummy}, %rd1846;
	}
	shf.l.wrap.b32 	%r2101, %r2100, %r2099, 25;
	shf.l.wrap.b32 	%r2102, %r2099, %r2100, 25;
	mov.b64 	%rd1857, {%r2102, %r2101};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	add.s64 	%rd1859, %rd1855, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2103}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2104,%dummy}, %rd1855;
	}
	shf.l.wrap.b32 	%r2105, %r2104, %r2103, 29;
	shf.l.wrap.b32 	%r2106, %r2103, %r2104, 29;
	mov.b64 	%rd1860, {%r2106, %r2105};
	xor.b64  	%rd1861, %rd1860, %rd1859;
	add.s64 	%rd1862, %rd1852, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2107,%dummy}, %rd1852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd1852;
	}
	shf.r.wrap.b32 	%r2109, %r2108, %r2107, 25;
	shf.r.wrap.b32 	%r2110, %r2107, %r2108, 25;
	mov.b64 	%rd1863, {%r2110, %r2109};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	add.s64 	%rd1865, %rd1849, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2111,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2112}, %rd1849;
	}
	shf.r.wrap.b32 	%r2113, %r2112, %r2111, 21;
	shf.r.wrap.b32 	%r2114, %r2111, %r2112, 21;
	mov.b64 	%rd1866, {%r2114, %r2113};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	add.s64 	%rd1868, %rd1859, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2116,%dummy}, %rd1858;
	}
	shf.l.wrap.b32 	%r2117, %r2116, %r2115, 8;
	shf.l.wrap.b32 	%r2118, %r2115, %r2116, 8;
	mov.b64 	%rd1869, {%r2118, %r2117};
	xor.b64  	%rd1870, %rd1869, %rd1868;
	add.s64 	%rd1871, %rd1867, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2119,%dummy}, %rd1867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2120}, %rd1867;
	}
	shf.r.wrap.b32 	%r2121, %r2120, %r2119, 29;
	shf.r.wrap.b32 	%r2122, %r2119, %r2120, 29;
	mov.b64 	%rd1872, {%r2122, %r2121};
	xor.b64  	%rd1873, %rd1872, %rd1871;
	add.s64 	%rd1874, %rd1864, %rd1865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2124}, %rd1864;
	}
	shf.r.wrap.b32 	%r2125, %r2124, %r2123, 8;
	shf.r.wrap.b32 	%r2126, %r2123, %r2124, 8;
	mov.b64 	%rd1875, {%r2126, %r2125};
	xor.b64  	%rd1876, %rd1875, %rd1874;
	add.s64 	%rd1877, %rd1861, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2127}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2128,%dummy}, %rd1861;
	}
	shf.l.wrap.b32 	%r2129, %r2128, %r2127, 22;
	shf.l.wrap.b32 	%r2130, %r2127, %r2128, 22;
	mov.b64 	%rd1878, {%r2130, %r2129};
	xor.b64  	%rd1879, %rd1878, %rd1877;
	add.s64 	%rd1880, %rd1048, %rd1871;
	add.s64 	%rd1881, %rd1049, %rd1870;
	add.s64 	%rd1882, %rd1050, %rd1874;
	add.s64 	%rd1883, %rd1062, %rd1879;
	add.s64 	%rd1884, %rd1051, %rd1877;
	add.s64 	%rd1885, %rd1052, %rd1876;
	add.s64 	%rd1886, %rd1885, -72057594037927928;
	add.s64 	%rd1887, %rd1053, %rd1868;
	add.s64 	%rd1888, %rd1873, %rd1054;
	add.s64 	%rd1889, %rd1888, 14;
	add.s64 	%rd1890, %rd1887, %rd1889;
	add.s64 	%rd1891, %rd1880, %rd1881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd1881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2132}, %rd1881;
	}
	shf.r.wrap.b32 	%r2133, %r2132, %r2131, 18;
	shf.r.wrap.b32 	%r2134, %r2131, %r2132, 18;
	mov.b64 	%rd1892, {%r2134, %r2133};
	xor.b64  	%rd1893, %rd1892, %rd1891;
	add.s64 	%rd1894, %rd1882, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2135,%dummy}, %rd1883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2136}, %rd1883;
	}
	shf.r.wrap.b32 	%r2137, %r2136, %r2135, 28;
	shf.r.wrap.b32 	%r2138, %r2135, %r2136, 28;
	mov.b64 	%rd1895, {%r2138, %r2137};
	xor.b64  	%rd1896, %rd1895, %rd1894;
	add.s64 	%rd1897, %rd1884, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2139}, %rd1886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd1886;
	}
	shf.l.wrap.b32 	%r2141, %r2140, %r2139, 19;
	shf.l.wrap.b32 	%r2142, %r2139, %r2140, 19;
	mov.b64 	%rd1898, {%r2142, %r2141};
	xor.b64  	%rd1899, %rd1898, %rd1897;
	add.s64 	%rd1900, %rd1890, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2143,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2144}, %rd1889;
	}
	shf.r.wrap.b32 	%r2145, %r2144, %r2143, 27;
	shf.r.wrap.b32 	%r2146, %r2143, %r2144, 27;
	mov.b64 	%rd1901, {%r2146, %r2145};
	xor.b64  	%rd1902, %rd1901, %rd1900;
	add.s64 	%rd1903, %rd1893, %rd1894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2147,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2148}, %rd1893;
	}
	shf.r.wrap.b32 	%r2149, %r2148, %r2147, 31;
	shf.r.wrap.b32 	%r2150, %r2147, %r2148, 31;
	mov.b64 	%rd1904, {%r2150, %r2149};
	xor.b64  	%rd1905, %rd1904, %rd1903;
	add.s64 	%rd1906, %rd1902, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd1902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2152,%dummy}, %rd1902;
	}
	shf.l.wrap.b32 	%r2153, %r2152, %r2151, 27;
	shf.l.wrap.b32 	%r2154, %r2151, %r2152, 27;
	mov.b64 	%rd1907, {%r2154, %r2153};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	add.s64 	%rd1909, %rd1899, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2155}, %rd1899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2156,%dummy}, %rd1899;
	}
	shf.l.wrap.b32 	%r2157, %r2156, %r2155, 14;
	shf.l.wrap.b32 	%r2158, %r2155, %r2156, 14;
	mov.b64 	%rd1910, {%r2158, %r2157};
	xor.b64  	%rd1911, %rd1910, %rd1909;
	add.s64 	%rd1912, %rd1896, %rd1891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2159,%dummy}, %rd1896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2160}, %rd1896;
	}
	shf.r.wrap.b32 	%r2161, %r2160, %r2159, 22;
	shf.r.wrap.b32 	%r2162, %r2159, %r2160, 22;
	mov.b64 	%rd1913, {%r2162, %r2161};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	add.s64 	%rd1915, %rd1906, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2163}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2164,%dummy}, %rd1905;
	}
	shf.l.wrap.b32 	%r2165, %r2164, %r2163, 17;
	shf.l.wrap.b32 	%r2166, %r2163, %r2164, 17;
	mov.b64 	%rd1916, {%r2166, %r2165};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	add.s64 	%rd1918, %rd1914, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2167,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2168}, %rd1914;
	}
	shf.r.wrap.b32 	%r2169, %r2168, %r2167, 15;
	shf.r.wrap.b32 	%r2170, %r2167, %r2168, 15;
	mov.b64 	%rd1919, {%r2170, %r2169};
	xor.b64  	%rd1920, %rd1919, %rd1918;
	add.s64 	%rd1921, %rd1911, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2171,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2172}, %rd1911;
	}
	shf.r.wrap.b32 	%r2173, %r2172, %r2171, 28;
	shf.r.wrap.b32 	%r2174, %r2171, %r2172, 28;
	mov.b64 	%rd1922, {%r2174, %r2173};
	xor.b64  	%rd1923, %rd1922, %rd1921;
	add.s64 	%rd1924, %rd1908, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2175,%dummy}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2176}, %rd1908;
	}
	shf.r.wrap.b32 	%r2177, %r2176, %r2175, 25;
	shf.r.wrap.b32 	%r2178, %r2175, %r2176, 25;
	mov.b64 	%rd1925, {%r2178, %r2177};
	xor.b64  	%rd1926, %rd1925, %rd1924;
	add.s64 	%rd1927, %rd1918, %rd1917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2180}, %rd1917;
	}
	shf.r.wrap.b32 	%r2181, %r2180, %r2179, 20;
	shf.r.wrap.b32 	%r2182, %r2179, %r2180, 20;
	mov.b64 	%rd1928, {%r2182, %r2181};
	xor.b64  	%rd1929, %rd1928, %rd1927;
	add.s64 	%rd1930, %rd1926, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd1926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2184,%dummy}, %rd1926;
	}
	shf.l.wrap.b32 	%r2185, %r2184, %r2183, 9;
	shf.l.wrap.b32 	%r2186, %r2183, %r2184, 9;
	mov.b64 	%rd1931, {%r2186, %r2185};
	xor.b64  	%rd1932, %rd1931, %rd1930;
	add.s64 	%rd1933, %rd1923, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2187,%dummy}, %rd1923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2188}, %rd1923;
	}
	shf.r.wrap.b32 	%r2189, %r2188, %r2187, 10;
	shf.r.wrap.b32 	%r2190, %r2187, %r2188, 10;
	mov.b64 	%rd1934, {%r2190, %r2189};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	add.s64 	%rd1936, %rd1920, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2191,%dummy}, %rd1920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2192}, %rd1920;
	}
	shf.r.wrap.b32 	%r2193, %r2192, %r2191, 8;
	shf.r.wrap.b32 	%r2194, %r2191, %r2192, 8;
	mov.b64 	%rd1937, {%r2194, %r2193};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	add.s64 	%rd1939, %rd1049, %rd1930;
	add.s64 	%rd1940, %rd1050, %rd1929;
	add.s64 	%rd1941, %rd1062, %rd1933;
	add.s64 	%rd1942, %rd1051, %rd1938;
	add.s64 	%rd1943, %rd1052, %rd1936;
	add.s64 	%rd1944, %rd1053, %rd1935;
	add.s64 	%rd1945, %rd1944, 8;
	add.s64 	%rd1946, %rd1932, %rd1047;
	add.s64 	%rd1947, %rd1946, 15;
	add.s64 	%rd1948, %rd1939, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2195,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2196}, %rd1940;
	}
	shf.r.wrap.b32 	%r2197, %r2196, %r2195, 25;
	shf.r.wrap.b32 	%r2198, %r2195, %r2196, 25;
	mov.b64 	%rd1949, {%r2198, %r2197};
	xor.b64  	%rd1950, %rd1949, %rd1948;
	add.s64 	%rd1951, %rd1941, %rd1942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd1942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2200,%dummy}, %rd1942;
	}
	shf.l.wrap.b32 	%r2201, %r2200, %r2199, 30;
	shf.l.wrap.b32 	%r2202, %r2199, %r2200, 30;
	mov.b64 	%rd1952, {%r2202, %r2201};
	xor.b64  	%rd1953, %rd1952, %rd1951;
	add.s64 	%rd1954, %rd1943, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd1945;
	}
	shf.r.wrap.b32 	%r2205, %r2204, %r2203, 30;
	shf.r.wrap.b32 	%r2206, %r2203, %r2204, 30;
	mov.b64 	%rd1955, {%r2206, %r2205};
	xor.b64  	%rd1956, %rd1955, %rd1954;
	add.s64 	%rd1957, %rd1054, %rd1927;
	add.s64 	%rd1958, %rd1957, %rd1947;
	add.s64 	%rd1959, %rd1958, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2208,%dummy}, %rd1947;
	}
	shf.l.wrap.b32 	%r2209, %r2208, %r2207, 24;
	shf.l.wrap.b32 	%r2210, %r2207, %r2208, 24;
	mov.b64 	%rd1960, {%r2210, %r2209};
	xor.b64  	%rd1961, %rd1960, %rd1959;
	add.s64 	%rd1962, %rd1950, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2212,%dummy}, %rd1950;
	}
	shf.l.wrap.b32 	%r2213, %r2212, %r2211, 13;
	shf.l.wrap.b32 	%r2214, %r2211, %r2212, 13;
	mov.b64 	%rd1963, {%r2214, %r2213};
	xor.b64  	%rd1964, %rd1963, %rd1962;
	add.s64 	%rd1965, %rd1961, %rd1954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2215,%dummy}, %rd1961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2216}, %rd1961;
	}
	shf.r.wrap.b32 	%r2217, %r2216, %r2215, 14;
	shf.r.wrap.b32 	%r2218, %r2215, %r2216, 14;
	mov.b64 	%rd1966, {%r2218, %r2217};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	add.s64 	%rd1968, %rd1956, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd1956;
	}
	shf.l.wrap.b32 	%r2221, %r2220, %r2219, 10;
	shf.l.wrap.b32 	%r2222, %r2219, %r2220, 10;
	mov.b64 	%rd1969, {%r2222, %r2221};
	xor.b64  	%rd1970, %rd1969, %rd1968;
	add.s64 	%rd1971, %rd1953, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2223}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2224,%dummy}, %rd1953;
	}
	shf.l.wrap.b32 	%r2225, %r2224, %r2223, 17;
	shf.l.wrap.b32 	%r2226, %r2223, %r2224, 17;
	mov.b64 	%rd1972, {%r2226, %r2225};
	xor.b64  	%rd1973, %rd1972, %rd1971;
	add.s64 	%rd1974, %rd1965, %rd1964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2228,%dummy}, %rd1964;
	}
	shf.l.wrap.b32 	%r2229, %r2228, %r2227, 25;
	shf.l.wrap.b32 	%r2230, %r2227, %r2228, 25;
	mov.b64 	%rd1975, {%r2230, %r2229};
	xor.b64  	%rd1976, %rd1975, %rd1974;
	add.s64 	%rd1977, %rd1973, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd1973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2232,%dummy}, %rd1973;
	}
	shf.l.wrap.b32 	%r2233, %r2232, %r2231, 29;
	shf.l.wrap.b32 	%r2234, %r2231, %r2232, 29;
	mov.b64 	%rd1978, {%r2234, %r2233};
	xor.b64  	%rd1979, %rd1978, %rd1977;
	add.s64 	%rd1980, %rd1970, %rd1971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2235,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd1970;
	}
	shf.r.wrap.b32 	%r2237, %r2236, %r2235, 25;
	shf.r.wrap.b32 	%r2238, %r2235, %r2236, 25;
	mov.b64 	%rd1981, {%r2238, %r2237};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	add.s64 	%rd1983, %rd1967, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2239,%dummy}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2240}, %rd1967;
	}
	shf.r.wrap.b32 	%r2241, %r2240, %r2239, 21;
	shf.r.wrap.b32 	%r2242, %r2239, %r2240, 21;
	mov.b64 	%rd1984, {%r2242, %r2241};
	xor.b64  	%rd1985, %rd1984, %rd1983;
	add.s64 	%rd1986, %rd1977, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2243}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd1976;
	}
	shf.l.wrap.b32 	%r2245, %r2244, %r2243, 8;
	shf.l.wrap.b32 	%r2246, %r2243, %r2244, 8;
	mov.b64 	%rd1987, {%r2246, %r2245};
	xor.b64  	%rd1988, %rd1987, %rd1986;
	add.s64 	%rd1989, %rd1985, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2247,%dummy}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2248}, %rd1985;
	}
	shf.r.wrap.b32 	%r2249, %r2248, %r2247, 29;
	shf.r.wrap.b32 	%r2250, %r2247, %r2248, 29;
	mov.b64 	%rd1990, {%r2250, %r2249};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	add.s64 	%rd1992, %rd1982, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2251,%dummy}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2252}, %rd1982;
	}
	shf.r.wrap.b32 	%r2253, %r2252, %r2251, 8;
	shf.r.wrap.b32 	%r2254, %r2251, %r2252, 8;
	mov.b64 	%rd1993, {%r2254, %r2253};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	add.s64 	%rd1995, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2256,%dummy}, %rd1979;
	}
	shf.l.wrap.b32 	%r2257, %r2256, %r2255, 22;
	shf.l.wrap.b32 	%r2258, %r2255, %r2256, 22;
	mov.b64 	%rd1996, {%r2258, %r2257};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	add.s64 	%rd1998, %rd1050, %rd1989;
	add.s64 	%rd1999, %rd1062, %rd1988;
	add.s64 	%rd2000, %rd1051, %rd1992;
	add.s64 	%rd2001, %rd1052, %rd1997;
	add.s64 	%rd2002, %rd1053, %rd1995;
	add.s64 	%rd2003, %rd1054, %rd1994;
	add.s64 	%rd2004, %rd2003, -72057594037927936;
	add.s64 	%rd2005, %rd1047, %rd1986;
	add.s64 	%rd2006, %rd1991, %rd1048;
	add.s64 	%rd2007, %rd2006, 16;
	add.s64 	%rd2008, %rd2005, %rd2007;
	add.s64 	%rd2009, %rd1998, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd1999;
	}
	shf.r.wrap.b32 	%r2261, %r2260, %r2259, 18;
	shf.r.wrap.b32 	%r2262, %r2259, %r2260, 18;
	mov.b64 	%rd2010, {%r2262, %r2261};
	xor.b64  	%rd2011, %rd2010, %rd2009;
	add.s64 	%rd2012, %rd2000, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2263,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2264}, %rd2001;
	}
	shf.r.wrap.b32 	%r2265, %r2264, %r2263, 28;
	shf.r.wrap.b32 	%r2266, %r2263, %r2264, 28;
	mov.b64 	%rd2013, {%r2266, %r2265};
	xor.b64  	%rd2014, %rd2013, %rd2012;
	add.s64 	%rd2015, %rd2002, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2267}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2268,%dummy}, %rd2004;
	}
	shf.l.wrap.b32 	%r2269, %r2268, %r2267, 19;
	shf.l.wrap.b32 	%r2270, %r2267, %r2268, 19;
	mov.b64 	%rd2016, {%r2270, %r2269};
	xor.b64  	%rd2017, %rd2016, %rd2015;
	add.s64 	%rd2018, %rd2008, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2271,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2272}, %rd2007;
	}
	shf.r.wrap.b32 	%r2273, %r2272, %r2271, 27;
	shf.r.wrap.b32 	%r2274, %r2271, %r2272, 27;
	mov.b64 	%rd2019, {%r2274, %r2273};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	add.s64 	%rd2021, %rd2011, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2275,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2276}, %rd2011;
	}
	shf.r.wrap.b32 	%r2277, %r2276, %r2275, 31;
	shf.r.wrap.b32 	%r2278, %r2275, %r2276, 31;
	mov.b64 	%rd2022, {%r2278, %r2277};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	add.s64 	%rd2024, %rd2020, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2280,%dummy}, %rd2020;
	}
	shf.l.wrap.b32 	%r2281, %r2280, %r2279, 27;
	shf.l.wrap.b32 	%r2282, %r2279, %r2280, 27;
	mov.b64 	%rd2025, {%r2282, %r2281};
	xor.b64  	%rd2026, %rd2025, %rd2024;
	add.s64 	%rd2027, %rd2017, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2283}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2284,%dummy}, %rd2017;
	}
	shf.l.wrap.b32 	%r2285, %r2284, %r2283, 14;
	shf.l.wrap.b32 	%r2286, %r2283, %r2284, 14;
	mov.b64 	%rd2028, {%r2286, %r2285};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	add.s64 	%rd2030, %rd2014, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2287,%dummy}, %rd2014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2288}, %rd2014;
	}
	shf.r.wrap.b32 	%r2289, %r2288, %r2287, 22;
	shf.r.wrap.b32 	%r2290, %r2287, %r2288, 22;
	mov.b64 	%rd2031, {%r2290, %r2289};
	xor.b64  	%rd2032, %rd2031, %rd2030;
	add.s64 	%rd2033, %rd2024, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2291}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2292,%dummy}, %rd2023;
	}
	shf.l.wrap.b32 	%r2293, %r2292, %r2291, 17;
	shf.l.wrap.b32 	%r2294, %r2291, %r2292, 17;
	mov.b64 	%rd2034, {%r2294, %r2293};
	xor.b64  	%rd2035, %rd2034, %rd2033;
	add.s64 	%rd2036, %rd2032, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2295,%dummy}, %rd2032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2296}, %rd2032;
	}
	shf.r.wrap.b32 	%r2297, %r2296, %r2295, 15;
	shf.r.wrap.b32 	%r2298, %r2295, %r2296, 15;
	mov.b64 	%rd2037, {%r2298, %r2297};
	xor.b64  	%rd2038, %rd2037, %rd2036;
	add.s64 	%rd2039, %rd2029, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2299,%dummy}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2300}, %rd2029;
	}
	shf.r.wrap.b32 	%r2301, %r2300, %r2299, 28;
	shf.r.wrap.b32 	%r2302, %r2299, %r2300, 28;
	mov.b64 	%rd2040, {%r2302, %r2301};
	xor.b64  	%rd2041, %rd2040, %rd2039;
	add.s64 	%rd2042, %rd2026, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2303,%dummy}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2304}, %rd2026;
	}
	shf.r.wrap.b32 	%r2305, %r2304, %r2303, 25;
	shf.r.wrap.b32 	%r2306, %r2303, %r2304, 25;
	mov.b64 	%rd2043, {%r2306, %r2305};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	add.s64 	%rd2045, %rd2036, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd2035;
	}
	shf.r.wrap.b32 	%r2309, %r2308, %r2307, 20;
	shf.r.wrap.b32 	%r2310, %r2307, %r2308, 20;
	mov.b64 	%rd2046, {%r2310, %r2309};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	add.s64 	%rd2048, %rd2044, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2312,%dummy}, %rd2044;
	}
	shf.l.wrap.b32 	%r2313, %r2312, %r2311, 9;
	shf.l.wrap.b32 	%r2314, %r2311, %r2312, 9;
	mov.b64 	%rd2049, {%r2314, %r2313};
	xor.b64  	%rd2050, %rd2049, %rd2048;
	add.s64 	%rd2051, %rd2041, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2315,%dummy}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2316}, %rd2041;
	}
	shf.r.wrap.b32 	%r2317, %r2316, %r2315, 10;
	shf.r.wrap.b32 	%r2318, %r2315, %r2316, 10;
	mov.b64 	%rd2052, {%r2318, %r2317};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	add.s64 	%rd2054, %rd2038, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd2038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd2038;
	}
	shf.r.wrap.b32 	%r2321, %r2320, %r2319, 8;
	shf.r.wrap.b32 	%r2322, %r2319, %r2320, 8;
	mov.b64 	%rd2055, {%r2322, %r2321};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	add.s64 	%rd2057, %rd1062, %rd2048;
	add.s64 	%rd2058, %rd1051, %rd2047;
	add.s64 	%rd2059, %rd1052, %rd2051;
	add.s64 	%rd2060, %rd1053, %rd2056;
	add.s64 	%rd2061, %rd1054, %rd2054;
	add.s64 	%rd2062, %rd1047, %rd2053;
	add.s64 	%rd2063, %rd2062, -72057594037927928;
	add.s64 	%rd2064, %rd2050, %rd1049;
	add.s64 	%rd2065, %rd2064, 17;
	add.s64 	%rd2066, %rd2057, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2323,%dummy}, %rd2058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2324}, %rd2058;
	}
	shf.r.wrap.b32 	%r2325, %r2324, %r2323, 25;
	shf.r.wrap.b32 	%r2326, %r2323, %r2324, 25;
	mov.b64 	%rd2067, {%r2326, %r2325};
	xor.b64  	%rd2068, %rd2067, %rd2066;
	add.s64 	%rd2069, %rd2059, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2328,%dummy}, %rd2060;
	}
	shf.l.wrap.b32 	%r2329, %r2328, %r2327, 30;
	shf.l.wrap.b32 	%r2330, %r2327, %r2328, 30;
	mov.b64 	%rd2070, {%r2330, %r2329};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	add.s64 	%rd2072, %rd2061, %rd2063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd2063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd2063;
	}
	shf.r.wrap.b32 	%r2333, %r2332, %r2331, 30;
	shf.r.wrap.b32 	%r2334, %r2331, %r2332, 30;
	mov.b64 	%rd2073, {%r2334, %r2333};
	xor.b64  	%rd2074, %rd2073, %rd2072;
	add.s64 	%rd2075, %rd1048, %rd2045;
	add.s64 	%rd2076, %rd2075, %rd2065;
	add.s64 	%rd2077, %rd2076, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2336,%dummy}, %rd2065;
	}
	shf.l.wrap.b32 	%r2337, %r2336, %r2335, 24;
	shf.l.wrap.b32 	%r2338, %r2335, %r2336, 24;
	mov.b64 	%rd2078, {%r2338, %r2337};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	add.s64 	%rd2080, %rd2068, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2339}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd2068;
	}
	shf.l.wrap.b32 	%r2341, %r2340, %r2339, 13;
	shf.l.wrap.b32 	%r2342, %r2339, %r2340, 13;
	mov.b64 	%rd2081, {%r2342, %r2341};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	add.s64 	%rd2083, %rd2079, %rd2072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd2079;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 14;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 14;
	mov.b64 	%rd2084, {%r2346, %r2345};
	xor.b64  	%rd2085, %rd2084, %rd2083;
	add.s64 	%rd2086, %rd2074, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2347}, %rd2074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd2074;
	}
	shf.l.wrap.b32 	%r2349, %r2348, %r2347, 10;
	shf.l.wrap.b32 	%r2350, %r2347, %r2348, 10;
	mov.b64 	%rd2087, {%r2350, %r2349};
	xor.b64  	%rd2088, %rd2087, %rd2086;
	add.s64 	%rd2089, %rd2071, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2352,%dummy}, %rd2071;
	}
	shf.l.wrap.b32 	%r2353, %r2352, %r2351, 17;
	shf.l.wrap.b32 	%r2354, %r2351, %r2352, 17;
	mov.b64 	%rd2090, {%r2354, %r2353};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	add.s64 	%rd2092, %rd2083, %rd2082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2355}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd2082;
	}
	shf.l.wrap.b32 	%r2357, %r2356, %r2355, 25;
	shf.l.wrap.b32 	%r2358, %r2355, %r2356, 25;
	mov.b64 	%rd2093, {%r2358, %r2357};
	xor.b64  	%rd2094, %rd2093, %rd2092;
	add.s64 	%rd2095, %rd2091, %rd2086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2360,%dummy}, %rd2091;
	}
	shf.l.wrap.b32 	%r2361, %r2360, %r2359, 29;
	shf.l.wrap.b32 	%r2362, %r2359, %r2360, 29;
	mov.b64 	%rd2096, {%r2362, %r2361};
	xor.b64  	%rd2097, %rd2096, %rd2095;
	add.s64 	%rd2098, %rd2088, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2363,%dummy}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2364}, %rd2088;
	}
	shf.r.wrap.b32 	%r2365, %r2364, %r2363, 25;
	shf.r.wrap.b32 	%r2366, %r2363, %r2364, 25;
	mov.b64 	%rd2099, {%r2366, %r2365};
	xor.b64  	%rd2100, %rd2099, %rd2098;
	add.s64 	%rd2101, %rd2085, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd2085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd2085;
	}
	shf.r.wrap.b32 	%r2369, %r2368, %r2367, 21;
	shf.r.wrap.b32 	%r2370, %r2367, %r2368, 21;
	mov.b64 	%rd2102, {%r2370, %r2369};
	xor.b64  	%rd2103, %rd2102, %rd2101;
	add.s64 	%rd2104, %rd2095, %rd2094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2371}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd2094;
	}
	shf.l.wrap.b32 	%r2373, %r2372, %r2371, 8;
	shf.l.wrap.b32 	%r2374, %r2371, %r2372, 8;
	mov.b64 	%rd2105, {%r2374, %r2373};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	add.s64 	%rd2107, %rd2103, %rd2098;
	add.s64 	%rd2108, %rd2100, %rd2101;
	add.s64 	%rd2109, %rd2097, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2376,%dummy}, %rd2097;
	}
	shf.l.wrap.b32 	%r2377, %r2376, %r2375, 22;
	shf.l.wrap.b32 	%r2378, %r2375, %r2376, 22;
	mov.b64 	%rd2110, {%r2378, %r2377};
	xor.b64  	%rd2111, %rd2110, %rd2109;
	add.s64 	%rd15, %rd1051, %rd2107;
	add.s64 	%rd16, %rd1052, %rd2106;
	add.s64 	%rd17, %rd1053, %rd2108;
	add.s64 	%rd18, %rd1054, %rd2111;
	bar.sync 	0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd12;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6666}, %rd12;
	}
	shf.r.wrap.b32 	%r6665, %r6666, %r6667, 28;
	shf.r.wrap.b32 	%r6664, %r6667, %r6666, 28;
	mov.b64 	%rd4247, {%r6664, %r6665};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6655,%dummy}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd10;
	}
	shf.r.wrap.b32 	%r6653, %r6654, %r6655, 25;
	shf.r.wrap.b32 	%r6652, %r6655, %r6654, 25;
	mov.b64 	%rd4246, {%r6652, %r6653};
	st.local.u64 	[%rd4], %rd15;
	st.local.u64 	[%rd4+8], %rd16;
	st.local.u64 	[%rd4+16], %rd17;
	st.local.u64 	[%rd4+24], %rd18;
	add.s64 	%rd2112, %rd7, -1714305546867594773;
	add.s64 	%rd2113, %rd8, %rd2112;
	add.s64 	%rd2114, %rd5, 3037510430686418139;
	add.s64 	%rd2115, %rd6, %rd2114;
	add.s64 	%rd2116, %rd2113, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2380}, %rd2112;
	}
	shf.r.wrap.b32 	%r2381, %r2380, %r2379, 18;
	shf.r.wrap.b32 	%r2382, %r2379, %r2380, 18;
	mov.b64 	%rd2117, {%r2382, %r2381};
	xor.b64  	%rd2118, %rd2117, %rd2116;
	add.s64 	%rd2119, %rd2115, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2383,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2384}, %rd2114;
	}
	shf.r.wrap.b32 	%r2385, %r2384, %r2383, 28;
	shf.r.wrap.b32 	%r2386, %r2383, %r2384, 28;
	mov.b64 	%rd2120, {%r2386, %r2385};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	add.s64 	%rd2122, %rd2118, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd2118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd2118;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 31;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 31;
	mov.b64 	%rd2123, {%r2390, %r2389};
	xor.b64  	%rd2124, %rd2123, %rd2122;
	add.s64 	%rd2125, %rd2121, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2391,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2392}, %rd2121;
	}
	shf.r.wrap.b32 	%r2393, %r2392, %r2391, 22;
	shf.r.wrap.b32 	%r2394, %r2391, %r2392, 22;
	mov.b64 	%rd2126, {%r2394, %r2393};
	xor.b64  	%rd2127, %rd2126, %rd2125;
	add.s64 	%rd2128, %rd9, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2395}, %rd2124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2396,%dummy}, %rd2124;
	}
	shf.l.wrap.b32 	%r2397, %r2396, %r2395, 17;
	shf.l.wrap.b32 	%r2398, %r2395, %r2396, 17;
	mov.b64 	%rd2129, {%r2398, %r2397};
	xor.b64  	%rd2130, %rd2129, %rd2128;
	add.s64 	%rd2131, %rd2127, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2399,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2400}, %rd2127;
	}
	shf.r.wrap.b32 	%r2401, %r2400, %r2399, 15;
	shf.r.wrap.b32 	%r2402, %r2399, %r2400, 15;
	mov.b64 	%rd2132, {%r2402, %r2401};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	add.s64 	%rd2134, %rd12, %rd2125;
	xor.b64  	%rd2135, %rd4247, %rd2134;
	add.s64 	%rd2136, %rd10, %rd2122;
	xor.b64  	%rd2137, %rd4246, %rd2136;
	add.s64 	%rd2138, %rd2131, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2403,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2404}, %rd2130;
	}
	shf.r.wrap.b32 	%r2405, %r2404, %r2403, 20;
	shf.r.wrap.b32 	%r2406, %r2403, %r2404, 20;
	mov.b64 	%rd2139, {%r2406, %r2405};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	add.s64 	%rd2141, %rd2137, %rd2134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2408,%dummy}, %rd2137;
	}
	shf.l.wrap.b32 	%r2409, %r2408, %r2407, 9;
	shf.l.wrap.b32 	%r2410, %r2407, %r2408, 9;
	mov.b64 	%rd2142, {%r2410, %r2409};
	xor.b64  	%rd2143, %rd2142, %rd2141;
	add.s64 	%rd2144, %rd2135, %rd2136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2411,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2412}, %rd2135;
	}
	shf.r.wrap.b32 	%r2413, %r2412, %r2411, 10;
	shf.r.wrap.b32 	%r2414, %r2411, %r2412, 10;
	mov.b64 	%rd2145, {%r2414, %r2413};
	xor.b64  	%rd2146, %rd2145, %rd2144;
	add.s64 	%rd2147, %rd2133, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2415,%dummy}, %rd2133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd2133;
	}
	shf.r.wrap.b32 	%r2417, %r2416, %r2415, 8;
	shf.r.wrap.b32 	%r2418, %r2415, %r2416, 8;
	mov.b64 	%rd2148, {%r2418, %r2417};
	xor.b64  	%rd2149, %rd2148, %rd2147;
	add.s64 	%rd2150, %rd2140, 6174048478977683055;
	add.s64 	%rd2151, %rd2141, %rd2150;
	add.s64 	%rd2152, %rd2149, -1439460426187442557;
	add.s64 	%rd2153, %rd2144, %rd2152;
	add.s64 	%rd2154, %rd2146, -5516985438935789179;
	add.s64 	%rd2155, %rd2147, %rd2154;
	add.s64 	%rd2156, %rd2143, -5288003331091182037;
	add.s64 	%rd2157, %rd2151, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2419,%dummy}, %rd2150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2420}, %rd2150;
	}
	shf.r.wrap.b32 	%r2421, %r2420, %r2419, 25;
	shf.r.wrap.b32 	%r2422, %r2419, %r2420, 25;
	mov.b64 	%rd2158, {%r2422, %r2421};
	xor.b64  	%rd2159, %rd2158, %rd2157;
	add.s64 	%rd2160, %rd2153, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2423}, %rd2152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2424,%dummy}, %rd2152;
	}
	shf.l.wrap.b32 	%r2425, %r2424, %r2423, 30;
	shf.l.wrap.b32 	%r2426, %r2423, %r2424, 30;
	mov.b64 	%rd2161, {%r2426, %r2425};
	xor.b64  	%rd2162, %rd2161, %rd2160;
	add.s64 	%rd2163, %rd2155, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2427,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd2154;
	}
	shf.r.wrap.b32 	%r2429, %r2428, %r2427, 30;
	shf.r.wrap.b32 	%r2430, %r2427, %r2428, 30;
	mov.b64 	%rd2164, {%r2430, %r2429};
	xor.b64  	%rd2165, %rd2164, %rd2163;
	add.s64 	%rd2166, %rd2138, %rd2156;
	add.s64 	%rd2167, %rd2166, 3381563508338326579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2431}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2432,%dummy}, %rd2156;
	}
	shf.l.wrap.b32 	%r2433, %r2432, %r2431, 24;
	shf.l.wrap.b32 	%r2434, %r2431, %r2432, 24;
	mov.b64 	%rd2168, {%r2434, %r2433};
	xor.b64  	%rd2169, %rd2168, %rd2167;
	add.s64 	%rd2170, %rd2159, %rd2160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2435}, %rd2159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd2159;
	}
	shf.l.wrap.b32 	%r2437, %r2436, %r2435, 13;
	shf.l.wrap.b32 	%r2438, %r2435, %r2436, 13;
	mov.b64 	%rd2171, {%r2438, %r2437};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	add.s64 	%rd2173, %rd2169, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2439,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2440}, %rd2169;
	}
	shf.r.wrap.b32 	%r2441, %r2440, %r2439, 14;
	shf.r.wrap.b32 	%r2442, %r2439, %r2440, 14;
	mov.b64 	%rd2174, {%r2442, %r2441};
	xor.b64  	%rd2175, %rd2174, %rd2173;
	add.s64 	%rd2176, %rd2165, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2443}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd2165;
	}
	shf.l.wrap.b32 	%r2445, %r2444, %r2443, 10;
	shf.l.wrap.b32 	%r2446, %r2443, %r2444, 10;
	mov.b64 	%rd2177, {%r2446, %r2445};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	add.s64 	%rd2179, %rd2162, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2447}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2448,%dummy}, %rd2162;
	}
	shf.l.wrap.b32 	%r2449, %r2448, %r2447, 17;
	shf.l.wrap.b32 	%r2450, %r2447, %r2448, 17;
	mov.b64 	%rd2180, {%r2450, %r2449};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	add.s64 	%rd2182, %rd2173, %rd2172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2451}, %rd2172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd2172;
	}
	shf.l.wrap.b32 	%r2453, %r2452, %r2451, 25;
	shf.l.wrap.b32 	%r2454, %r2451, %r2452, 25;
	mov.b64 	%rd2183, {%r2454, %r2453};
	xor.b64  	%rd2184, %rd2183, %rd2182;
	add.s64 	%rd2185, %rd2181, %rd2176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2455}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd2181;
	}
	shf.l.wrap.b32 	%r2457, %r2456, %r2455, 29;
	shf.l.wrap.b32 	%r2458, %r2455, %r2456, 29;
	mov.b64 	%rd2186, {%r2458, %r2457};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	add.s64 	%rd2188, %rd2178, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2459,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd2178;
	}
	shf.r.wrap.b32 	%r2461, %r2460, %r2459, 25;
	shf.r.wrap.b32 	%r2462, %r2459, %r2460, 25;
	mov.b64 	%rd2189, {%r2462, %r2461};
	xor.b64  	%rd2190, %rd2189, %rd2188;
	add.s64 	%rd2191, %rd2175, %rd2170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2463,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2464}, %rd2175;
	}
	shf.r.wrap.b32 	%r2465, %r2464, %r2463, 21;
	shf.r.wrap.b32 	%r2466, %r2463, %r2464, 21;
	mov.b64 	%rd2192, {%r2466, %r2465};
	xor.b64  	%rd2193, %rd2192, %rd2191;
	add.s64 	%rd2194, %rd2185, %rd2184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2468,%dummy}, %rd2184;
	}
	shf.l.wrap.b32 	%r2469, %r2468, %r2467, 8;
	shf.l.wrap.b32 	%r2470, %r2467, %r2468, 8;
	mov.b64 	%rd2195, {%r2470, %r2469};
	xor.b64  	%rd2196, %rd2195, %rd2194;
	add.s64 	%rd2197, %rd2193, %rd2188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2471,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2472}, %rd2193;
	}
	shf.r.wrap.b32 	%r2473, %r2472, %r2471, 29;
	shf.r.wrap.b32 	%r2474, %r2471, %r2472, 29;
	mov.b64 	%rd2198, {%r2474, %r2473};
	xor.b64  	%rd2199, %rd2198, %rd2197;
	add.s64 	%rd2200, %rd2190, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2475,%dummy}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd2190;
	}
	shf.r.wrap.b32 	%r2477, %r2476, %r2475, 8;
	shf.r.wrap.b32 	%r2478, %r2475, %r2476, 8;
	mov.b64 	%rd2201, {%r2478, %r2477};
	xor.b64  	%rd2202, %rd2201, %rd2200;
	add.s64 	%rd2203, %rd2187, %rd2182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2479}, %rd2187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2480,%dummy}, %rd2187;
	}
	shf.l.wrap.b32 	%r2481, %r2480, %r2479, 22;
	shf.l.wrap.b32 	%r2482, %r2479, %r2480, 22;
	mov.b64 	%rd2204, {%r2482, %r2481};
	xor.b64  	%rd2205, %rd2204, %rd2203;
	add.s64 	%rd2206, %rd2196, 3037510430686418139;
	add.s64 	%rd2207, %rd2197, %rd2206;
	add.s64 	%rd2208, %rd2205, -1755217697375493551;
	add.s64 	%rd2209, %rd2200, %rd2208;
	add.s64 	%rd2210, %rd2202, 3381563508338326579;
	add.s64 	%rd2211, %rd2203, %rd2210;
	add.s64 	%rd2212, %rd2199, -3688372635733115371;
	add.s64 	%rd2213, %rd2194, %rd2212;
	add.s64 	%rd2214, %rd2207, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd2206;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 18;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 18;
	mov.b64 	%rd2215, {%r2486, %r2485};
	xor.b64  	%rd2216, %rd2215, %rd2214;
	add.s64 	%rd2217, %rd2209, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd2208;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 28;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 28;
	mov.b64 	%rd2218, {%r2490, %r2489};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	add.s64 	%rd2220, %rd2211, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2491}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2492,%dummy}, %rd2210;
	}
	shf.l.wrap.b32 	%r2493, %r2492, %r2491, 19;
	shf.l.wrap.b32 	%r2494, %r2491, %r2492, 19;
	mov.b64 	%rd2221, {%r2494, %r2493};
	xor.b64  	%rd2222, %rd2221, %rd2220;
	add.s64 	%rd2223, %rd2213, -5288003331091182006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd2212;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 27;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 27;
	mov.b64 	%rd2224, {%r2498, %r2497};
	xor.b64  	%rd2225, %rd2224, %rd2223;
	add.s64 	%rd2226, %rd2216, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2499,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2500}, %rd2216;
	}
	shf.r.wrap.b32 	%r2501, %r2500, %r2499, 31;
	shf.r.wrap.b32 	%r2502, %r2499, %r2500, 31;
	mov.b64 	%rd2227, {%r2502, %r2501};
	xor.b64  	%rd2228, %rd2227, %rd2226;
	add.s64 	%rd2229, %rd2225, %rd2220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2503}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd2225;
	}
	shf.l.wrap.b32 	%r2505, %r2504, %r2503, 27;
	shf.l.wrap.b32 	%r2506, %r2503, %r2504, 27;
	mov.b64 	%rd2230, {%r2506, %r2505};
	xor.b64  	%rd2231, %rd2230, %rd2229;
	add.s64 	%rd2232, %rd2222, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2507}, %rd2222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2508,%dummy}, %rd2222;
	}
	shf.l.wrap.b32 	%r2509, %r2508, %r2507, 14;
	shf.l.wrap.b32 	%r2510, %r2507, %r2508, 14;
	mov.b64 	%rd2233, {%r2510, %r2509};
	xor.b64  	%rd2234, %rd2233, %rd2232;
	add.s64 	%rd2235, %rd2219, %rd2214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd2219;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 22;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 22;
	mov.b64 	%rd2236, {%r2514, %r2513};
	xor.b64  	%rd2237, %rd2236, %rd2235;
	add.s64 	%rd2238, %rd2229, %rd2228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2515}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd2228;
	}
	shf.l.wrap.b32 	%r2517, %r2516, %r2515, 17;
	shf.l.wrap.b32 	%r2518, %r2515, %r2516, 17;
	mov.b64 	%rd2239, {%r2518, %r2517};
	xor.b64  	%rd2240, %rd2239, %rd2238;
	add.s64 	%rd2241, %rd2237, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd2237;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 15;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 15;
	mov.b64 	%rd2242, {%r2522, %r2521};
	xor.b64  	%rd2243, %rd2242, %rd2241;
	add.s64 	%rd2244, %rd2234, %rd2235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd2234;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 28;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 28;
	mov.b64 	%rd2245, {%r2526, %r2525};
	xor.b64  	%rd2246, %rd2245, %rd2244;
	add.s64 	%rd2247, %rd2231, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2527,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2528}, %rd2231;
	}
	shf.r.wrap.b32 	%r2529, %r2528, %r2527, 25;
	shf.r.wrap.b32 	%r2530, %r2527, %r2528, 25;
	mov.b64 	%rd2248, {%r2530, %r2529};
	xor.b64  	%rd2249, %rd2248, %rd2247;
	add.s64 	%rd2250, %rd2241, %rd2240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2531,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd2240;
	}
	shf.r.wrap.b32 	%r2533, %r2532, %r2531, 20;
	shf.r.wrap.b32 	%r2534, %r2531, %r2532, 20;
	mov.b64 	%rd2251, {%r2534, %r2533};
	xor.b64  	%rd2252, %rd2251, %rd2250;
	add.s64 	%rd2253, %rd2249, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2535}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd2249;
	}
	shf.l.wrap.b32 	%r2537, %r2536, %r2535, 9;
	shf.l.wrap.b32 	%r2538, %r2535, %r2536, 9;
	mov.b64 	%rd2254, {%r2538, %r2537};
	xor.b64  	%rd2255, %rd2254, %rd2253;
	add.s64 	%rd2256, %rd2246, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2539,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2540}, %rd2246;
	}
	shf.r.wrap.b32 	%r2541, %r2540, %r2539, 10;
	shf.r.wrap.b32 	%r2542, %r2539, %r2540, 10;
	mov.b64 	%rd2257, {%r2542, %r2541};
	xor.b64  	%rd2258, %rd2257, %rd2256;
	add.s64 	%rd2259, %rd2243, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd2243;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 8;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 8;
	mov.b64 	%rd2260, {%r2546, %r2545};
	xor.b64  	%rd2261, %rd2260, %rd2259;
	add.s64 	%rd2262, %rd2252, -1439460426187442557;
	add.s64 	%rd2263, %rd2253, %rd2262;
	add.s64 	%rd2264, %rd2261, -4364063934328942203;
	add.s64 	%rd2265, %rd2256, %rd2264;
	add.s64 	%rd2266, %rd2258, -5288003331091182006;
	add.s64 	%rd2267, %rd2259, %rd2266;
	add.s64 	%rd2268, %rd2255, -1714305546867594770;
	add.s64 	%rd2269, %rd2263, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2547,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2548}, %rd2262;
	}
	shf.r.wrap.b32 	%r2549, %r2548, %r2547, 25;
	shf.r.wrap.b32 	%r2550, %r2547, %r2548, 25;
	mov.b64 	%rd2270, {%r2550, %r2549};
	xor.b64  	%rd2271, %rd2270, %rd2269;
	add.s64 	%rd2272, %rd2265, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2551}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd2264;
	}
	shf.l.wrap.b32 	%r2553, %r2552, %r2551, 30;
	shf.l.wrap.b32 	%r2554, %r2551, %r2552, 30;
	mov.b64 	%rd2273, {%r2554, %r2553};
	xor.b64  	%rd2274, %rd2273, %rd2272;
	add.s64 	%rd2275, %rd2267, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2555,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2556}, %rd2266;
	}
	shf.r.wrap.b32 	%r2557, %r2556, %r2555, 30;
	shf.r.wrap.b32 	%r2558, %r2555, %r2556, 30;
	mov.b64 	%rd2276, {%r2558, %r2557};
	xor.b64  	%rd2277, %rd2276, %rd2275;
	add.s64 	%rd2278, %rd2250, %rd2268;
	add.s64 	%rd2279, %rd2278, -4841294140339962349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2559}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd2268;
	}
	shf.l.wrap.b32 	%r2561, %r2560, %r2559, 24;
	shf.l.wrap.b32 	%r2562, %r2559, %r2560, 24;
	mov.b64 	%rd2280, {%r2562, %r2561};
	xor.b64  	%rd2281, %rd2280, %rd2279;
	add.s64 	%rd2282, %rd2271, %rd2272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2563}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2564,%dummy}, %rd2271;
	}
	shf.l.wrap.b32 	%r2565, %r2564, %r2563, 13;
	shf.l.wrap.b32 	%r2566, %r2563, %r2564, 13;
	mov.b64 	%rd2283, {%r2566, %r2565};
	xor.b64  	%rd2284, %rd2283, %rd2282;
	add.s64 	%rd2285, %rd2281, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd2281;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 14;
	mov.b64 	%rd2286, {%r2570, %r2569};
	xor.b64  	%rd2287, %rd2286, %rd2285;
	add.s64 	%rd2288, %rd2277, %rd2279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2571}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2572,%dummy}, %rd2277;
	}
	shf.l.wrap.b32 	%r2573, %r2572, %r2571, 10;
	shf.l.wrap.b32 	%r2574, %r2571, %r2572, 10;
	mov.b64 	%rd2289, {%r2574, %r2573};
	xor.b64  	%rd2290, %rd2289, %rd2288;
	add.s64 	%rd2291, %rd2274, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd2274;
	}
	shf.l.wrap.b32 	%r2577, %r2576, %r2575, 17;
	shf.l.wrap.b32 	%r2578, %r2575, %r2576, 17;
	mov.b64 	%rd2292, {%r2578, %r2577};
	xor.b64  	%rd2293, %rd2292, %rd2291;
	add.s64 	%rd2294, %rd2285, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2579}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd2284;
	}
	shf.l.wrap.b32 	%r2581, %r2580, %r2579, 25;
	shf.l.wrap.b32 	%r2582, %r2579, %r2580, 25;
	mov.b64 	%rd2295, {%r2582, %r2581};
	xor.b64  	%rd2296, %rd2295, %rd2294;
	add.s64 	%rd2297, %rd2293, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2583}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd2293;
	}
	shf.l.wrap.b32 	%r2585, %r2584, %r2583, 29;
	shf.l.wrap.b32 	%r2586, %r2583, %r2584, 29;
	mov.b64 	%rd2298, {%r2586, %r2585};
	xor.b64  	%rd2299, %rd2298, %rd2297;
	add.s64 	%rd2300, %rd2290, %rd2291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2587,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2588}, %rd2290;
	}
	shf.r.wrap.b32 	%r2589, %r2588, %r2587, 25;
	shf.r.wrap.b32 	%r2590, %r2587, %r2588, 25;
	mov.b64 	%rd2301, {%r2590, %r2589};
	xor.b64  	%rd2302, %rd2301, %rd2300;
	add.s64 	%rd2303, %rd2287, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd2287;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 21;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 21;
	mov.b64 	%rd2304, {%r2594, %r2593};
	xor.b64  	%rd2305, %rd2304, %rd2303;
	add.s64 	%rd2306, %rd2297, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2595}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd2296;
	}
	shf.l.wrap.b32 	%r2597, %r2596, %r2595, 8;
	shf.l.wrap.b32 	%r2598, %r2595, %r2596, 8;
	mov.b64 	%rd2307, {%r2598, %r2597};
	xor.b64  	%rd2308, %rd2307, %rd2306;
	add.s64 	%rd2309, %rd2305, %rd2300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2599,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd2305;
	}
	shf.r.wrap.b32 	%r2601, %r2600, %r2599, 29;
	shf.r.wrap.b32 	%r2602, %r2599, %r2600, 29;
	mov.b64 	%rd2310, {%r2602, %r2601};
	xor.b64  	%rd2311, %rd2310, %rd2309;
	add.s64 	%rd2312, %rd2302, %rd2303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2603,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2604}, %rd2302;
	}
	shf.r.wrap.b32 	%r2605, %r2604, %r2603, 8;
	shf.r.wrap.b32 	%r2606, %r2603, %r2604, 8;
	mov.b64 	%rd2313, {%r2606, %r2605};
	xor.b64  	%rd2314, %rd2313, %rd2312;
	add.s64 	%rd2315, %rd2299, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2607}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd2299;
	}
	shf.l.wrap.b32 	%r2609, %r2608, %r2607, 22;
	shf.l.wrap.b32 	%r2610, %r2607, %r2608, 22;
	mov.b64 	%rd2316, {%r2610, %r2609};
	xor.b64  	%rd2317, %rd2316, %rd2315;
	add.s64 	%rd2318, %rd2308, -1755217697375493551;
	add.s64 	%rd2319, %rd2309, %rd2318;
	add.s64 	%rd2320, %rd2317, 4534485012945173523;
	add.s64 	%rd2321, %rd2312, %rd2320;
	add.s64 	%rd2322, %rd2314, -4841294140339962349;
	add.s64 	%rd2323, %rd2315, %rd2322;
	add.s64 	%rd2324, %rd2311, 6174048478977683059;
	add.s64 	%rd2325, %rd2306, %rd2324;
	add.s64 	%rd2326, %rd2319, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2611,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2612}, %rd2318;
	}
	shf.r.wrap.b32 	%r2613, %r2612, %r2611, 18;
	shf.r.wrap.b32 	%r2614, %r2611, %r2612, 18;
	mov.b64 	%rd2327, {%r2614, %r2613};
	xor.b64  	%rd2328, %rd2327, %rd2326;
	add.s64 	%rd2329, %rd2321, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd2320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd2320;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 28;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 28;
	mov.b64 	%rd2330, {%r2618, %r2617};
	xor.b64  	%rd2331, %rd2330, %rd2329;
	add.s64 	%rd2332, %rd2323, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2619}, %rd2322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2620,%dummy}, %rd2322;
	}
	shf.l.wrap.b32 	%r2621, %r2620, %r2619, 19;
	shf.l.wrap.b32 	%r2622, %r2619, %r2620, 19;
	mov.b64 	%rd2333, {%r2622, %r2621};
	xor.b64  	%rd2334, %rd2333, %rd2332;
	add.s64 	%rd2335, %rd2325, -2867227051474441717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd2324;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 27;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 27;
	mov.b64 	%rd2336, {%r2626, %r2625};
	xor.b64  	%rd2337, %rd2336, %rd2335;
	add.s64 	%rd2338, %rd2328, %rd2329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2627,%dummy}, %rd2328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2628}, %rd2328;
	}
	shf.r.wrap.b32 	%r2629, %r2628, %r2627, 31;
	shf.r.wrap.b32 	%r2630, %r2627, %r2628, 31;
	mov.b64 	%rd2339, {%r2630, %r2629};
	xor.b64  	%rd2340, %rd2339, %rd2338;
	add.s64 	%rd2341, %rd2337, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2631}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd2337;
	}
	shf.l.wrap.b32 	%r2633, %r2632, %r2631, 27;
	shf.l.wrap.b32 	%r2634, %r2631, %r2632, 27;
	mov.b64 	%rd2342, {%r2634, %r2633};
	xor.b64  	%rd2343, %rd2342, %rd2341;
	add.s64 	%rd2344, %rd2334, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2635}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd2334;
	}
	shf.l.wrap.b32 	%r2637, %r2636, %r2635, 14;
	shf.l.wrap.b32 	%r2638, %r2635, %r2636, 14;
	mov.b64 	%rd2345, {%r2638, %r2637};
	xor.b64  	%rd2346, %rd2345, %rd2344;
	add.s64 	%rd2347, %rd2331, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd2331;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 22;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 22;
	mov.b64 	%rd2348, {%r2642, %r2641};
	xor.b64  	%rd2349, %rd2348, %rd2347;
	add.s64 	%rd2350, %rd2341, %rd2340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2643}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd2340;
	}
	shf.l.wrap.b32 	%r2645, %r2644, %r2643, 17;
	shf.l.wrap.b32 	%r2646, %r2643, %r2644, 17;
	mov.b64 	%rd2351, {%r2646, %r2645};
	xor.b64  	%rd2352, %rd2351, %rd2350;
	add.s64 	%rd2353, %rd2349, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2647,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd2349;
	}
	shf.r.wrap.b32 	%r2649, %r2648, %r2647, 15;
	shf.r.wrap.b32 	%r2650, %r2647, %r2648, 15;
	mov.b64 	%rd2354, {%r2650, %r2649};
	xor.b64  	%rd2355, %rd2354, %rd2353;
	add.s64 	%rd2356, %rd2346, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2651,%dummy}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2652}, %rd2346;
	}
	shf.r.wrap.b32 	%r2653, %r2652, %r2651, 28;
	shf.r.wrap.b32 	%r2654, %r2651, %r2652, 28;
	mov.b64 	%rd2357, {%r2654, %r2653};
	xor.b64  	%rd2358, %rd2357, %rd2356;
	add.s64 	%rd2359, %rd2343, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd2343;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 25;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 25;
	mov.b64 	%rd2360, {%r2658, %r2657};
	xor.b64  	%rd2361, %rd2360, %rd2359;
	add.s64 	%rd2362, %rd2353, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2659,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2660}, %rd2352;
	}
	shf.r.wrap.b32 	%r2661, %r2660, %r2659, 20;
	shf.r.wrap.b32 	%r2662, %r2659, %r2660, 20;
	mov.b64 	%rd2363, {%r2662, %r2661};
	xor.b64  	%rd2364, %rd2363, %rd2362;
	add.s64 	%rd2365, %rd2361, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2663}, %rd2361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd2361;
	}
	shf.l.wrap.b32 	%r2665, %r2664, %r2663, 9;
	shf.l.wrap.b32 	%r2666, %r2663, %r2664, 9;
	mov.b64 	%rd2366, {%r2666, %r2665};
	xor.b64  	%rd2367, %rd2366, %rd2365;
	add.s64 	%rd2368, %rd2358, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2667,%dummy}, %rd2358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2668}, %rd2358;
	}
	shf.r.wrap.b32 	%r2669, %r2668, %r2667, 10;
	shf.r.wrap.b32 	%r2670, %r2667, %r2668, 10;
	mov.b64 	%rd2369, {%r2670, %r2669};
	xor.b64  	%rd2370, %rd2369, %rd2368;
	add.s64 	%rd2371, %rd2355, %rd2350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd2355;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 8;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 8;
	mov.b64 	%rd2372, {%r2674, %r2673};
	xor.b64  	%rd2373, %rd2372, %rd2371;
	add.s64 	%rd2374, %rd2364, -4364063934328942203;
	add.s64 	%rd2375, %rd2365, %rd2374;
	add.s64 	%rd2376, %rd2373, -5288003331091182038;
	add.s64 	%rd2377, %rd2368, %rd2376;
	add.s64 	%rd2378, %rd2370, -2867227051474441717;
	add.s64 	%rd2379, %rd2371, %rd2378;
	add.s64 	%rd2380, %rd2367, 3037510430686418144;
	add.s64 	%rd2381, %rd2375, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2675,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2676}, %rd2374;
	}
	shf.r.wrap.b32 	%r2677, %r2676, %r2675, 25;
	shf.r.wrap.b32 	%r2678, %r2675, %r2676, 25;
	mov.b64 	%rd2382, {%r2678, %r2677};
	xor.b64  	%rd2383, %rd2382, %rd2381;
	add.s64 	%rd2384, %rd2377, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2680,%dummy}, %rd2376;
	}
	shf.l.wrap.b32 	%r2681, %r2680, %r2679, 30;
	shf.l.wrap.b32 	%r2682, %r2679, %r2680, 30;
	mov.b64 	%rd2385, {%r2682, %r2681};
	xor.b64  	%rd2386, %rd2385, %rd2384;
	add.s64 	%rd2387, %rd2379, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2683,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2684}, %rd2378;
	}
	shf.r.wrap.b32 	%r2685, %r2684, %r2683, 30;
	shf.r.wrap.b32 	%r2686, %r2683, %r2684, 30;
	mov.b64 	%rd2388, {%r2686, %r2685};
	xor.b64  	%rd2389, %rd2388, %rd2387;
	add.s64 	%rd2390, %rd2362, %rd2380;
	add.s64 	%rd2391, %rd2390, 6174048478977683087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2687}, %rd2380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2688,%dummy}, %rd2380;
	}
	shf.l.wrap.b32 	%r2689, %r2688, %r2687, 24;
	shf.l.wrap.b32 	%r2690, %r2687, %r2688, 24;
	mov.b64 	%rd2392, {%r2690, %r2689};
	xor.b64  	%rd2393, %rd2392, %rd2391;
	add.s64 	%rd2394, %rd2383, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2691}, %rd2383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2692,%dummy}, %rd2383;
	}
	shf.l.wrap.b32 	%r2693, %r2692, %r2691, 13;
	shf.l.wrap.b32 	%r2694, %r2691, %r2692, 13;
	mov.b64 	%rd2395, {%r2694, %r2693};
	xor.b64  	%rd2396, %rd2395, %rd2394;
	add.s64 	%rd2397, %rd2393, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2695,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2696}, %rd2393;
	}
	shf.r.wrap.b32 	%r2697, %r2696, %r2695, 14;
	shf.r.wrap.b32 	%r2698, %r2695, %r2696, 14;
	mov.b64 	%rd2398, {%r2698, %r2697};
	xor.b64  	%rd2399, %rd2398, %rd2397;
	add.s64 	%rd2400, %rd2389, %rd2391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2699}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2700,%dummy}, %rd2389;
	}
	shf.l.wrap.b32 	%r2701, %r2700, %r2699, 10;
	shf.l.wrap.b32 	%r2702, %r2699, %r2700, 10;
	mov.b64 	%rd2401, {%r2702, %r2701};
	xor.b64  	%rd2402, %rd2401, %rd2400;
	add.s64 	%rd2403, %rd2386, %rd2381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2703}, %rd2386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd2386;
	}
	shf.l.wrap.b32 	%r2705, %r2704, %r2703, 17;
	shf.l.wrap.b32 	%r2706, %r2703, %r2704, 17;
	mov.b64 	%rd2404, {%r2706, %r2705};
	xor.b64  	%rd2405, %rd2404, %rd2403;
	add.s64 	%rd2406, %rd2397, %rd2396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd2396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2708,%dummy}, %rd2396;
	}
	shf.l.wrap.b32 	%r2709, %r2708, %r2707, 25;
	shf.l.wrap.b32 	%r2710, %r2707, %r2708, 25;
	mov.b64 	%rd2407, {%r2710, %r2709};
	xor.b64  	%rd2408, %rd2407, %rd2406;
	add.s64 	%rd2409, %rd2405, %rd2400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2711}, %rd2405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd2405;
	}
	shf.l.wrap.b32 	%r2713, %r2712, %r2711, 29;
	shf.l.wrap.b32 	%r2714, %r2711, %r2712, 29;
	mov.b64 	%rd2410, {%r2714, %r2713};
	xor.b64  	%rd2411, %rd2410, %rd2409;
	add.s64 	%rd2412, %rd2402, %rd2403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2715,%dummy}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2716}, %rd2402;
	}
	shf.r.wrap.b32 	%r2717, %r2716, %r2715, 25;
	shf.r.wrap.b32 	%r2718, %r2715, %r2716, 25;
	mov.b64 	%rd2413, {%r2718, %r2717};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	add.s64 	%rd2415, %rd2399, %rd2394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd2399;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 21;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 21;
	mov.b64 	%rd2416, {%r2722, %r2721};
	xor.b64  	%rd2417, %rd2416, %rd2415;
	add.s64 	%rd2418, %rd2409, %rd2408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2723}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2724,%dummy}, %rd2408;
	}
	shf.l.wrap.b32 	%r2725, %r2724, %r2723, 8;
	shf.l.wrap.b32 	%r2726, %r2723, %r2724, 8;
	mov.b64 	%rd2419, {%r2726, %r2725};
	xor.b64  	%rd2420, %rd2419, %rd2418;
	add.s64 	%rd2421, %rd2417, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2727,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2728}, %rd2417;
	}
	shf.r.wrap.b32 	%r2729, %r2728, %r2727, 29;
	shf.r.wrap.b32 	%r2730, %r2727, %r2728, 29;
	mov.b64 	%rd2422, {%r2730, %r2729};
	xor.b64  	%rd2423, %rd2422, %rd2421;
	add.s64 	%rd2424, %rd2414, %rd2415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2731,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2732}, %rd2414;
	}
	shf.r.wrap.b32 	%r2733, %r2732, %r2731, 8;
	shf.r.wrap.b32 	%r2734, %r2731, %r2732, 8;
	mov.b64 	%rd2425, {%r2734, %r2733};
	xor.b64  	%rd2426, %rd2425, %rd2424;
	add.s64 	%rd2427, %rd2411, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2735}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd2411;
	}
	shf.l.wrap.b32 	%r2737, %r2736, %r2735, 22;
	shf.l.wrap.b32 	%r2738, %r2735, %r2736, 22;
	mov.b64 	%rd2428, {%r2738, %r2737};
	xor.b64  	%rd2429, %rd2428, %rd2427;
	add.s64 	%rd2430, %rd2420, 4534485012945173523;
	add.s64 	%rd2431, %rd2421, %rd2430;
	add.s64 	%rd2432, %rd2429, -3688372635733115373;
	add.s64 	%rd2433, %rd2424, %rd2432;
	add.s64 	%rd2434, %rd2426, 6174048478977683087;
	add.s64 	%rd2435, %rd2427, %rd2434;
	add.s64 	%rd2436, %rd2423, -1439460426187442551;
	add.s64 	%rd2437, %rd2418, %rd2436;
	add.s64 	%rd2438, %rd2431, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2739,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2740}, %rd2430;
	}
	shf.r.wrap.b32 	%r2741, %r2740, %r2739, 18;
	shf.r.wrap.b32 	%r2742, %r2739, %r2740, 18;
	mov.b64 	%rd2439, {%r2742, %r2741};
	xor.b64  	%rd2440, %rd2439, %rd2438;
	add.s64 	%rd2441, %rd2433, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2743,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2744}, %rd2432;
	}
	shf.r.wrap.b32 	%r2745, %r2744, %r2743, 28;
	shf.r.wrap.b32 	%r2746, %r2743, %r2744, 28;
	mov.b64 	%rd2442, {%r2746, %r2745};
	xor.b64  	%rd2443, %rd2442, %rd2441;
	add.s64 	%rd2444, %rd2435, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2747}, %rd2434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2748,%dummy}, %rd2434;
	}
	shf.l.wrap.b32 	%r2749, %r2748, %r2747, 19;
	shf.l.wrap.b32 	%r2750, %r2747, %r2748, 19;
	mov.b64 	%rd2445, {%r2750, %r2749};
	xor.b64  	%rd2446, %rd2445, %rd2444;
	add.s64 	%rd2447, %rd2437, 1884588926079571163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2751,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2752}, %rd2436;
	}
	shf.r.wrap.b32 	%r2753, %r2752, %r2751, 27;
	shf.r.wrap.b32 	%r2754, %r2751, %r2752, 27;
	mov.b64 	%rd2448, {%r2754, %r2753};
	xor.b64  	%rd2449, %rd2448, %rd2447;
	add.s64 	%rd2450, %rd2440, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2755,%dummy}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2756}, %rd2440;
	}
	shf.r.wrap.b32 	%r2757, %r2756, %r2755, 31;
	shf.r.wrap.b32 	%r2758, %r2755, %r2756, 31;
	mov.b64 	%rd2451, {%r2758, %r2757};
	xor.b64  	%rd2452, %rd2451, %rd2450;
	add.s64 	%rd2453, %rd2449, %rd2444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2759}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd2449;
	}
	shf.l.wrap.b32 	%r2761, %r2760, %r2759, 27;
	shf.l.wrap.b32 	%r2762, %r2759, %r2760, 27;
	mov.b64 	%rd2454, {%r2762, %r2761};
	xor.b64  	%rd2455, %rd2454, %rd2453;
	add.s64 	%rd2456, %rd2446, %rd2447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd2446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2764,%dummy}, %rd2446;
	}
	shf.l.wrap.b32 	%r2765, %r2764, %r2763, 14;
	shf.l.wrap.b32 	%r2766, %r2763, %r2764, 14;
	mov.b64 	%rd2457, {%r2766, %r2765};
	xor.b64  	%rd2458, %rd2457, %rd2456;
	add.s64 	%rd2459, %rd2443, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2767,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2768}, %rd2443;
	}
	shf.r.wrap.b32 	%r2769, %r2768, %r2767, 22;
	shf.r.wrap.b32 	%r2770, %r2767, %r2768, 22;
	mov.b64 	%rd2460, {%r2770, %r2769};
	xor.b64  	%rd2461, %rd2460, %rd2459;
	add.s64 	%rd2462, %rd2453, %rd2452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd2452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2772,%dummy}, %rd2452;
	}
	shf.l.wrap.b32 	%r2773, %r2772, %r2771, 17;
	shf.l.wrap.b32 	%r2774, %r2771, %r2772, 17;
	mov.b64 	%rd2463, {%r2774, %r2773};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	add.s64 	%rd2465, %rd2461, %rd2456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2775,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd2461;
	}
	shf.r.wrap.b32 	%r2777, %r2776, %r2775, 15;
	shf.r.wrap.b32 	%r2778, %r2775, %r2776, 15;
	mov.b64 	%rd2466, {%r2778, %r2777};
	xor.b64  	%rd2467, %rd2466, %rd2465;
	add.s64 	%rd2468, %rd2458, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2779,%dummy}, %rd2458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2780}, %rd2458;
	}
	shf.r.wrap.b32 	%r2781, %r2780, %r2779, 28;
	shf.r.wrap.b32 	%r2782, %r2779, %r2780, 28;
	mov.b64 	%rd2469, {%r2782, %r2781};
	xor.b64  	%rd2470, %rd2469, %rd2468;
	add.s64 	%rd2471, %rd2455, %rd2450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2783,%dummy}, %rd2455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2784}, %rd2455;
	}
	shf.r.wrap.b32 	%r2785, %r2784, %r2783, 25;
	shf.r.wrap.b32 	%r2786, %r2783, %r2784, 25;
	mov.b64 	%rd2472, {%r2786, %r2785};
	xor.b64  	%rd2473, %rd2472, %rd2471;
	add.s64 	%rd2474, %rd2465, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2787,%dummy}, %rd2464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2788}, %rd2464;
	}
	shf.r.wrap.b32 	%r2789, %r2788, %r2787, 20;
	shf.r.wrap.b32 	%r2790, %r2787, %r2788, 20;
	mov.b64 	%rd2475, {%r2790, %r2789};
	xor.b64  	%rd2476, %rd2475, %rd2474;
	add.s64 	%rd2477, %rd2473, %rd2468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2792,%dummy}, %rd2473;
	}
	shf.l.wrap.b32 	%r2793, %r2792, %r2791, 9;
	shf.l.wrap.b32 	%r2794, %r2791, %r2792, 9;
	mov.b64 	%rd2478, {%r2794, %r2793};
	xor.b64  	%rd2479, %rd2478, %rd2477;
	add.s64 	%rd2480, %rd2470, %rd2471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2795,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2796}, %rd2470;
	}
	shf.r.wrap.b32 	%r2797, %r2796, %r2795, 10;
	shf.r.wrap.b32 	%r2798, %r2795, %r2796, 10;
	mov.b64 	%rd2481, {%r2798, %r2797};
	xor.b64  	%rd2482, %rd2481, %rd2480;
	add.s64 	%rd2483, %rd2467, %rd2462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2799,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2800}, %rd2467;
	}
	shf.r.wrap.b32 	%r2801, %r2800, %r2799, 8;
	shf.r.wrap.b32 	%r2802, %r2799, %r2800, 8;
	mov.b64 	%rd2484, {%r2802, %r2801};
	xor.b64  	%rd2485, %rd2484, %rd2483;
	add.s64 	%rd2486, %rd2476, -5288003331091182038;
	add.s64 	%rd2487, %rd2477, %rd2486;
	add.s64 	%rd2488, %rd2485, -1714305546867594773;
	add.s64 	%rd2489, %rd2480, %rd2488;
	add.s64 	%rd2490, %rd2482, 1884588926079571163;
	add.s64 	%rd2491, %rd2483, %rd2490;
	add.s64 	%rd2492, %rd2479, -1755217697375493544;
	add.s64 	%rd2493, %rd2487, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2803,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2804}, %rd2486;
	}
	shf.r.wrap.b32 	%r2805, %r2804, %r2803, 25;
	shf.r.wrap.b32 	%r2806, %r2803, %r2804, 25;
	mov.b64 	%rd2494, {%r2806, %r2805};
	xor.b64  	%rd2495, %rd2494, %rd2493;
	add.s64 	%rd2496, %rd2489, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2807}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd2488;
	}
	shf.l.wrap.b32 	%r2809, %r2808, %r2807, 30;
	shf.l.wrap.b32 	%r2810, %r2807, %r2808, 30;
	mov.b64 	%rd2497, {%r2810, %r2809};
	xor.b64  	%rd2498, %rd2497, %rd2496;
	add.s64 	%rd2499, %rd2491, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2811,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2812}, %rd2490;
	}
	shf.r.wrap.b32 	%r2813, %r2812, %r2811, 30;
	shf.r.wrap.b32 	%r2814, %r2811, %r2812, 30;
	mov.b64 	%rd2500, {%r2814, %r2813};
	xor.b64  	%rd2501, %rd2500, %rd2499;
	add.s64 	%rd2502, %rd2474, %rd2492;
	add.s64 	%rd2503, %rd2502, -2592381930794289501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2815}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2816,%dummy}, %rd2492;
	}
	shf.l.wrap.b32 	%r2817, %r2816, %r2815, 24;
	shf.l.wrap.b32 	%r2818, %r2815, %r2816, 24;
	mov.b64 	%rd2504, {%r2818, %r2817};
	xor.b64  	%rd2505, %rd2504, %rd2503;
	add.s64 	%rd2506, %rd2495, %rd2496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd2495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2820,%dummy}, %rd2495;
	}
	shf.l.wrap.b32 	%r2821, %r2820, %r2819, 13;
	shf.l.wrap.b32 	%r2822, %r2819, %r2820, 13;
	mov.b64 	%rd2507, {%r2822, %r2821};
	xor.b64  	%rd2508, %rd2507, %rd2506;
	add.s64 	%rd2509, %rd2505, %rd2499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2823,%dummy}, %rd2505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2824}, %rd2505;
	}
	shf.r.wrap.b32 	%r2825, %r2824, %r2823, 14;
	shf.r.wrap.b32 	%r2826, %r2823, %r2824, 14;
	mov.b64 	%rd2510, {%r2826, %r2825};
	xor.b64  	%rd2511, %rd2510, %rd2509;
	add.s64 	%rd2512, %rd2501, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2827}, %rd2501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2828,%dummy}, %rd2501;
	}
	shf.l.wrap.b32 	%r2829, %r2828, %r2827, 10;
	shf.l.wrap.b32 	%r2830, %r2827, %r2828, 10;
	mov.b64 	%rd2513, {%r2830, %r2829};
	xor.b64  	%rd2514, %rd2513, %rd2512;
	add.s64 	%rd2515, %rd2498, %rd2493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2831}, %rd2498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd2498;
	}
	shf.l.wrap.b32 	%r2833, %r2832, %r2831, 17;
	shf.l.wrap.b32 	%r2834, %r2831, %r2832, 17;
	mov.b64 	%rd2516, {%r2834, %r2833};
	xor.b64  	%rd2517, %rd2516, %rd2515;
	add.s64 	%rd2518, %rd2509, %rd2508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd2508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2836,%dummy}, %rd2508;
	}
	shf.l.wrap.b32 	%r2837, %r2836, %r2835, 25;
	shf.l.wrap.b32 	%r2838, %r2835, %r2836, 25;
	mov.b64 	%rd2519, {%r2838, %r2837};
	xor.b64  	%rd2520, %rd2519, %rd2518;
	add.s64 	%rd2521, %rd2517, %rd2512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2839}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd2517;
	}
	shf.l.wrap.b32 	%r2841, %r2840, %r2839, 29;
	shf.l.wrap.b32 	%r2842, %r2839, %r2840, 29;
	mov.b64 	%rd2522, {%r2842, %r2841};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	add.s64 	%rd2524, %rd2514, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2843,%dummy}, %rd2514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2844}, %rd2514;
	}
	shf.r.wrap.b32 	%r2845, %r2844, %r2843, 25;
	shf.r.wrap.b32 	%r2846, %r2843, %r2844, 25;
	mov.b64 	%rd2525, {%r2846, %r2845};
	xor.b64  	%rd2526, %rd2525, %rd2524;
	add.s64 	%rd2527, %rd2511, %rd2506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2847,%dummy}, %rd2511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2848}, %rd2511;
	}
	shf.r.wrap.b32 	%r2849, %r2848, %r2847, 21;
	shf.r.wrap.b32 	%r2850, %r2847, %r2848, 21;
	mov.b64 	%rd2528, {%r2850, %r2849};
	xor.b64  	%rd2529, %rd2528, %rd2527;
	add.s64 	%rd2530, %rd2521, %rd2520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2852,%dummy}, %rd2520;
	}
	shf.l.wrap.b32 	%r2853, %r2852, %r2851, 8;
	shf.l.wrap.b32 	%r2854, %r2851, %r2852, 8;
	mov.b64 	%rd2531, {%r2854, %r2853};
	xor.b64  	%rd2532, %rd2531, %rd2530;
	add.s64 	%rd2533, %rd2529, %rd2524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2855,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2856}, %rd2529;
	}
	shf.r.wrap.b32 	%r2857, %r2856, %r2855, 29;
	shf.r.wrap.b32 	%r2858, %r2855, %r2856, 29;
	mov.b64 	%rd2534, {%r2858, %r2857};
	xor.b64  	%rd2535, %rd2534, %rd2533;
	add.s64 	%rd2536, %rd2526, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2859,%dummy}, %rd2526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2860}, %rd2526;
	}
	shf.r.wrap.b32 	%r2861, %r2860, %r2859, 8;
	shf.r.wrap.b32 	%r2862, %r2859, %r2860, 8;
	mov.b64 	%rd2537, {%r2862, %r2861};
	xor.b64  	%rd2538, %rd2537, %rd2536;
	add.s64 	%rd2539, %rd2523, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2863}, %rd2523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2864,%dummy}, %rd2523;
	}
	shf.l.wrap.b32 	%r2865, %r2864, %r2863, 22;
	shf.l.wrap.b32 	%r2866, %r2863, %r2864, 22;
	mov.b64 	%rd2540, {%r2866, %r2865};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	add.s64 	%rd2542, %rd2532, -3688372635733115373;
	add.s64 	%rd2543, %rd2533, %rd2542;
	add.s64 	%rd2544, %rd2541, 6174048478977683055;
	add.s64 	%rd2545, %rd2536, %rd2544;
	add.s64 	%rd2546, %rd2538, -2592381930794289501;
	add.s64 	%rd2547, %rd2539, %rd2546;
	add.s64 	%rd2548, %rd2535, -4364063934328942195;
	add.s64 	%rd2549, %rd2530, %rd2548;
	add.s64 	%rd2550, %rd2543, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2867,%dummy}, %rd2542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2868}, %rd2542;
	}
	shf.r.wrap.b32 	%r2869, %r2868, %r2867, 18;
	shf.r.wrap.b32 	%r2870, %r2867, %r2868, 18;
	mov.b64 	%rd2551, {%r2870, %r2869};
	xor.b64  	%rd2552, %rd2551, %rd2550;
	add.s64 	%rd2553, %rd2545, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2871,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2872}, %rd2544;
	}
	shf.r.wrap.b32 	%r2873, %r2872, %r2871, 28;
	shf.r.wrap.b32 	%r2874, %r2871, %r2872, 28;
	mov.b64 	%rd2554, {%r2874, %r2873};
	xor.b64  	%rd2555, %rd2554, %rd2553;
	add.s64 	%rd2556, %rd2547, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd2546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2876,%dummy}, %rd2546;
	}
	shf.l.wrap.b32 	%r2877, %r2876, %r2875, 19;
	shf.l.wrap.b32 	%r2878, %r2875, %r2876, 19;
	mov.b64 	%rd2557, {%r2878, %r2877};
	xor.b64  	%rd2558, %rd2557, %rd2556;
	add.s64 	%rd2559, %rd2549, -1755217697375493519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2879,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2880}, %rd2548;
	}
	shf.r.wrap.b32 	%r2881, %r2880, %r2879, 27;
	shf.r.wrap.b32 	%r2882, %r2879, %r2880, 27;
	mov.b64 	%rd2560, {%r2882, %r2881};
	xor.b64  	%rd2561, %rd2560, %rd2559;
	add.s64 	%rd2562, %rd2552, %rd2553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2883,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2884}, %rd2552;
	}
	shf.r.wrap.b32 	%r2885, %r2884, %r2883, 31;
	shf.r.wrap.b32 	%r2886, %r2883, %r2884, 31;
	mov.b64 	%rd2563, {%r2886, %r2885};
	xor.b64  	%rd2564, %rd2563, %rd2562;
	add.s64 	%rd2565, %rd2561, %rd2556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2887}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2888,%dummy}, %rd2561;
	}
	shf.l.wrap.b32 	%r2889, %r2888, %r2887, 27;
	shf.l.wrap.b32 	%r2890, %r2887, %r2888, 27;
	mov.b64 	%rd2566, {%r2890, %r2889};
	xor.b64  	%rd2567, %rd2566, %rd2565;
	add.s64 	%rd2568, %rd2558, %rd2559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2892,%dummy}, %rd2558;
	}
	shf.l.wrap.b32 	%r2893, %r2892, %r2891, 14;
	shf.l.wrap.b32 	%r2894, %r2891, %r2892, 14;
	mov.b64 	%rd2569, {%r2894, %r2893};
	xor.b64  	%rd2570, %rd2569, %rd2568;
	add.s64 	%rd2571, %rd2555, %rd2550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2895,%dummy}, %rd2555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2896}, %rd2555;
	}
	shf.r.wrap.b32 	%r2897, %r2896, %r2895, 22;
	shf.r.wrap.b32 	%r2898, %r2895, %r2896, 22;
	mov.b64 	%rd2572, {%r2898, %r2897};
	xor.b64  	%rd2573, %rd2572, %rd2571;
	add.s64 	%rd2574, %rd2565, %rd2564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2900,%dummy}, %rd2564;
	}
	shf.l.wrap.b32 	%r2901, %r2900, %r2899, 17;
	shf.l.wrap.b32 	%r2902, %r2899, %r2900, 17;
	mov.b64 	%rd2575, {%r2902, %r2901};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	add.s64 	%rd2577, %rd2573, %rd2568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2903,%dummy}, %rd2573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2904}, %rd2573;
	}
	shf.r.wrap.b32 	%r2905, %r2904, %r2903, 15;
	shf.r.wrap.b32 	%r2906, %r2903, %r2904, 15;
	mov.b64 	%rd2578, {%r2906, %r2905};
	xor.b64  	%rd2579, %rd2578, %rd2577;
	add.s64 	%rd2580, %rd2570, %rd2571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2907,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2908}, %rd2570;
	}
	shf.r.wrap.b32 	%r2909, %r2908, %r2907, 28;
	shf.r.wrap.b32 	%r2910, %r2907, %r2908, 28;
	mov.b64 	%rd2581, {%r2910, %r2909};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	add.s64 	%rd2583, %rd2567, %rd2562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2911,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2912}, %rd2567;
	}
	shf.r.wrap.b32 	%r2913, %r2912, %r2911, 25;
	shf.r.wrap.b32 	%r2914, %r2911, %r2912, 25;
	mov.b64 	%rd2584, {%r2914, %r2913};
	xor.b64  	%rd2585, %rd2584, %rd2583;
	add.s64 	%rd2586, %rd2577, %rd2576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2915,%dummy}, %rd2576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2916}, %rd2576;
	}
	shf.r.wrap.b32 	%r2917, %r2916, %r2915, 20;
	shf.r.wrap.b32 	%r2918, %r2915, %r2916, 20;
	mov.b64 	%rd2587, {%r2918, %r2917};
	xor.b64  	%rd2588, %rd2587, %rd2586;
	add.s64 	%rd2589, %rd2585, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2919}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2920,%dummy}, %rd2585;
	}
	shf.l.wrap.b32 	%r2921, %r2920, %r2919, 9;
	shf.l.wrap.b32 	%r2922, %r2919, %r2920, 9;
	mov.b64 	%rd2590, {%r2922, %r2921};
	xor.b64  	%rd2591, %rd2590, %rd2589;
	add.s64 	%rd2592, %rd2582, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2923,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2924}, %rd2582;
	}
	shf.r.wrap.b32 	%r2925, %r2924, %r2923, 10;
	shf.r.wrap.b32 	%r2926, %r2923, %r2924, 10;
	mov.b64 	%rd2593, {%r2926, %r2925};
	xor.b64  	%rd2594, %rd2593, %rd2592;
	add.s64 	%rd2595, %rd2579, %rd2574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2927,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2928}, %rd2579;
	}
	shf.r.wrap.b32 	%r2929, %r2928, %r2927, 8;
	shf.r.wrap.b32 	%r2930, %r2927, %r2928, 8;
	mov.b64 	%rd2596, {%r2930, %r2929};
	xor.b64  	%rd2597, %rd2596, %rd2595;
	add.s64 	%rd2598, %rd2588, -1714305546867594773;
	add.s64 	%rd2599, %rd2589, %rd2598;
	add.s64 	%rd2600, %rd2597, 3037510430686418139;
	add.s64 	%rd2601, %rd2592, %rd2600;
	add.s64 	%rd2602, %rd2594, -1755217697375493519;
	add.s64 	%rd2603, %rd2595, %rd2602;
	add.s64 	%rd2604, %rd2591, 4534485012945173532;
	add.s64 	%rd2605, %rd2599, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2931,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2932}, %rd2598;
	}
	shf.r.wrap.b32 	%r2933, %r2932, %r2931, 25;
	shf.r.wrap.b32 	%r2934, %r2931, %r2932, 25;
	mov.b64 	%rd2606, {%r2934, %r2933};
	xor.b64  	%rd2607, %rd2606, %rd2605;
	add.s64 	%rd2608, %rd2601, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2935}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd2600;
	}
	shf.l.wrap.b32 	%r2937, %r2936, %r2935, 30;
	shf.l.wrap.b32 	%r2938, %r2935, %r2936, 30;
	mov.b64 	%rd2609, {%r2938, %r2937};
	xor.b64  	%rd2610, %rd2609, %rd2608;
	add.s64 	%rd2611, %rd2603, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2939,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2940}, %rd2602;
	}
	shf.r.wrap.b32 	%r2941, %r2940, %r2939, 30;
	shf.r.wrap.b32 	%r2942, %r2939, %r2940, 30;
	mov.b64 	%rd2612, {%r2942, %r2941};
	xor.b64  	%rd2613, %rd2612, %rd2611;
	add.s64 	%rd2614, %rd2586, %rd2604;
	add.s64 	%rd2615, %rd2614, -5516985438935789179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2943}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd2604;
	}
	shf.l.wrap.b32 	%r2945, %r2944, %r2943, 24;
	shf.l.wrap.b32 	%r2946, %r2943, %r2944, 24;
	mov.b64 	%rd2616, {%r2946, %r2945};
	xor.b64  	%rd2617, %rd2616, %rd2615;
	add.s64 	%rd2618, %rd2607, %rd2608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd2607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2948,%dummy}, %rd2607;
	}
	shf.l.wrap.b32 	%r2949, %r2948, %r2947, 13;
	shf.l.wrap.b32 	%r2950, %r2947, %r2948, 13;
	mov.b64 	%rd2619, {%r2950, %r2949};
	xor.b64  	%rd2620, %rd2619, %rd2618;
	add.s64 	%rd2621, %rd2617, %rd2611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2951,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2952}, %rd2617;
	}
	shf.r.wrap.b32 	%r2953, %r2952, %r2951, 14;
	shf.r.wrap.b32 	%r2954, %r2951, %r2952, 14;
	mov.b64 	%rd2622, {%r2954, %r2953};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	add.s64 	%rd2624, %rd2613, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2956,%dummy}, %rd2613;
	}
	shf.l.wrap.b32 	%r2957, %r2956, %r2955, 10;
	shf.l.wrap.b32 	%r2958, %r2955, %r2956, 10;
	mov.b64 	%rd2625, {%r2958, %r2957};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	add.s64 	%rd2627, %rd2610, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2959}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2960,%dummy}, %rd2610;
	}
	shf.l.wrap.b32 	%r2961, %r2960, %r2959, 17;
	shf.l.wrap.b32 	%r2962, %r2959, %r2960, 17;
	mov.b64 	%rd2628, {%r2962, %r2961};
	xor.b64  	%rd2629, %rd2628, %rd2627;
	add.s64 	%rd2630, %rd2621, %rd2620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd2620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2964,%dummy}, %rd2620;
	}
	shf.l.wrap.b32 	%r2965, %r2964, %r2963, 25;
	shf.l.wrap.b32 	%r2966, %r2963, %r2964, 25;
	mov.b64 	%rd2631, {%r2966, %r2965};
	xor.b64  	%rd2632, %rd2631, %rd2630;
	add.s64 	%rd2633, %rd2629, %rd2624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2967}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2968,%dummy}, %rd2629;
	}
	shf.l.wrap.b32 	%r2969, %r2968, %r2967, 29;
	shf.l.wrap.b32 	%r2970, %r2967, %r2968, 29;
	mov.b64 	%rd2634, {%r2970, %r2969};
	xor.b64  	%rd2635, %rd2634, %rd2633;
	add.s64 	%rd2636, %rd2626, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2971,%dummy}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2972}, %rd2626;
	}
	shf.r.wrap.b32 	%r2973, %r2972, %r2971, 25;
	shf.r.wrap.b32 	%r2974, %r2971, %r2972, 25;
	mov.b64 	%rd2637, {%r2974, %r2973};
	xor.b64  	%rd2638, %rd2637, %rd2636;
	add.s64 	%rd2639, %rd2623, %rd2618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2975,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2976}, %rd2623;
	}
	shf.r.wrap.b32 	%r2977, %r2976, %r2975, 21;
	shf.r.wrap.b32 	%r2978, %r2975, %r2976, 21;
	mov.b64 	%rd2640, {%r2978, %r2977};
	xor.b64  	%rd2641, %rd2640, %rd2639;
	add.s64 	%rd2642, %rd2633, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd2632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd2632;
	}
	shf.l.wrap.b32 	%r2981, %r2980, %r2979, 8;
	shf.l.wrap.b32 	%r2982, %r2979, %r2980, 8;
	mov.b64 	%rd2643, {%r2982, %r2981};
	xor.b64  	%rd2644, %rd2643, %rd2642;
	add.s64 	%rd2645, %rd2641, %rd2636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2983,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2984}, %rd2641;
	}
	shf.r.wrap.b32 	%r2985, %r2984, %r2983, 29;
	shf.r.wrap.b32 	%r2986, %r2983, %r2984, 29;
	mov.b64 	%rd2646, {%r2986, %r2985};
	xor.b64  	%rd2647, %rd2646, %rd2645;
	add.s64 	%rd2648, %rd2638, %rd2639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd2638;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 8;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 8;
	mov.b64 	%rd2649, {%r2990, %r2989};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	add.s64 	%rd2651, %rd2635, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2992,%dummy}, %rd2635;
	}
	shf.l.wrap.b32 	%r2993, %r2992, %r2991, 22;
	shf.l.wrap.b32 	%r2994, %r2991, %r2992, 22;
	mov.b64 	%rd2652, {%r2994, %r2993};
	xor.b64  	%rd2653, %rd2652, %rd2651;
	add.s64 	%rd2654, %rd2644, 6174048478977683055;
	add.s64 	%rd2655, %rd2645, %rd2654;
	add.s64 	%rd2656, %rd2653, -1439460426187442557;
	add.s64 	%rd2657, %rd2648, %rd2656;
	add.s64 	%rd2658, %rd2650, -5516985438935789179;
	add.s64 	%rd2659, %rd2651, %rd2658;
	add.s64 	%rd2660, %rd2647, -5288003331091182028;
	add.s64 	%rd2661, %rd2642, %rd2660;
	add.s64 	%rd2662, %rd2655, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2995,%dummy}, %rd2654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2996}, %rd2654;
	}
	shf.r.wrap.b32 	%r2997, %r2996, %r2995, 18;
	shf.r.wrap.b32 	%r2998, %r2995, %r2996, 18;
	mov.b64 	%rd2663, {%r2998, %r2997};
	xor.b64  	%rd2664, %rd2663, %rd2662;
	add.s64 	%rd2665, %rd2657, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2999,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3000}, %rd2656;
	}
	shf.r.wrap.b32 	%r3001, %r3000, %r2999, 28;
	shf.r.wrap.b32 	%r3002, %r2999, %r3000, 28;
	mov.b64 	%rd2666, {%r3002, %r3001};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	add.s64 	%rd2668, %rd2659, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3004,%dummy}, %rd2658;
	}
	shf.l.wrap.b32 	%r3005, %r3004, %r3003, 19;
	shf.l.wrap.b32 	%r3006, %r3003, %r3004, 19;
	mov.b64 	%rd2669, {%r3006, %r3005};
	xor.b64  	%rd2670, %rd2669, %rd2668;
	add.s64 	%rd2671, %rd2661, 3381563508338326579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3007,%dummy}, %rd2660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3008}, %rd2660;
	}
	shf.r.wrap.b32 	%r3009, %r3008, %r3007, 27;
	shf.r.wrap.b32 	%r3010, %r3007, %r3008, 27;
	mov.b64 	%rd2672, {%r3010, %r3009};
	xor.b64  	%rd2673, %rd2672, %rd2671;
	add.s64 	%rd2674, %rd2664, %rd2665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3011,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3012}, %rd2664;
	}
	shf.r.wrap.b32 	%r3013, %r3012, %r3011, 31;
	shf.r.wrap.b32 	%r3014, %r3011, %r3012, 31;
	mov.b64 	%rd2675, {%r3014, %r3013};
	xor.b64  	%rd2676, %rd2675, %rd2674;
	add.s64 	%rd2677, %rd2673, %rd2668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd2673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3016,%dummy}, %rd2673;
	}
	shf.l.wrap.b32 	%r3017, %r3016, %r3015, 27;
	shf.l.wrap.b32 	%r3018, %r3015, %r3016, 27;
	mov.b64 	%rd2678, {%r3018, %r3017};
	xor.b64  	%rd2679, %rd2678, %rd2677;
	add.s64 	%rd2680, %rd2670, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd2670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3020,%dummy}, %rd2670;
	}
	shf.l.wrap.b32 	%r3021, %r3020, %r3019, 14;
	shf.l.wrap.b32 	%r3022, %r3019, %r3020, 14;
	mov.b64 	%rd2681, {%r3022, %r3021};
	xor.b64  	%rd2682, %rd2681, %rd2680;
	add.s64 	%rd2683, %rd2667, %rd2662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3023,%dummy}, %rd2667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3024}, %rd2667;
	}
	shf.r.wrap.b32 	%r3025, %r3024, %r3023, 22;
	shf.r.wrap.b32 	%r3026, %r3023, %r3024, 22;
	mov.b64 	%rd2684, {%r3026, %r3025};
	xor.b64  	%rd2685, %rd2684, %rd2683;
	add.s64 	%rd2686, %rd2677, %rd2676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd2676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3028,%dummy}, %rd2676;
	}
	shf.l.wrap.b32 	%r3029, %r3028, %r3027, 17;
	shf.l.wrap.b32 	%r3030, %r3027, %r3028, 17;
	mov.b64 	%rd2687, {%r3030, %r3029};
	xor.b64  	%rd2688, %rd2687, %rd2686;
	add.s64 	%rd2689, %rd2685, %rd2680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3031,%dummy}, %rd2685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3032}, %rd2685;
	}
	shf.r.wrap.b32 	%r3033, %r3032, %r3031, 15;
	shf.r.wrap.b32 	%r3034, %r3031, %r3032, 15;
	mov.b64 	%rd2690, {%r3034, %r3033};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	add.s64 	%rd2692, %rd2682, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3035,%dummy}, %rd2682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3036}, %rd2682;
	}
	shf.r.wrap.b32 	%r3037, %r3036, %r3035, 28;
	shf.r.wrap.b32 	%r3038, %r3035, %r3036, 28;
	mov.b64 	%rd2693, {%r3038, %r3037};
	xor.b64  	%rd2694, %rd2693, %rd2692;
	add.s64 	%rd2695, %rd2679, %rd2674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3039,%dummy}, %rd2679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3040}, %rd2679;
	}
	shf.r.wrap.b32 	%r3041, %r3040, %r3039, 25;
	shf.r.wrap.b32 	%r3042, %r3039, %r3040, 25;
	mov.b64 	%rd2696, {%r3042, %r3041};
	xor.b64  	%rd2697, %rd2696, %rd2695;
	add.s64 	%rd2698, %rd2689, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3043,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3044}, %rd2688;
	}
	shf.r.wrap.b32 	%r3045, %r3044, %r3043, 20;
	shf.r.wrap.b32 	%r3046, %r3043, %r3044, 20;
	mov.b64 	%rd2699, {%r3046, %r3045};
	xor.b64  	%rd2700, %rd2699, %rd2698;
	add.s64 	%rd2701, %rd2697, %rd2692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3047}, %rd2697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd2697;
	}
	shf.l.wrap.b32 	%r3049, %r3048, %r3047, 9;
	shf.l.wrap.b32 	%r3050, %r3047, %r3048, 9;
	mov.b64 	%rd2702, {%r3050, %r3049};
	xor.b64  	%rd2703, %rd2702, %rd2701;
	add.s64 	%rd2704, %rd2694, %rd2695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3051,%dummy}, %rd2694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3052}, %rd2694;
	}
	shf.r.wrap.b32 	%r3053, %r3052, %r3051, 10;
	shf.r.wrap.b32 	%r3054, %r3051, %r3052, 10;
	mov.b64 	%rd2705, {%r3054, %r3053};
	xor.b64  	%rd2706, %rd2705, %rd2704;
	add.s64 	%rd2707, %rd2691, %rd2686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3055,%dummy}, %rd2691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3056}, %rd2691;
	}
	shf.r.wrap.b32 	%r3057, %r3056, %r3055, 8;
	shf.r.wrap.b32 	%r3058, %r3055, %r3056, 8;
	mov.b64 	%rd2708, {%r3058, %r3057};
	xor.b64  	%rd2709, %rd2708, %rd2707;
	add.s64 	%rd2710, %rd2700, 3037510430686418139;
	add.s64 	%rd2711, %rd2701, %rd2710;
	add.s64 	%rd2712, %rd2709, -1755217697375493551;
	add.s64 	%rd2713, %rd2704, %rd2712;
	add.s64 	%rd2714, %rd2706, 3381563508338326579;
	add.s64 	%rd2715, %rd2707, %rd2714;
	add.s64 	%rd2716, %rd2703, -3688372635733115362;
	add.s64 	%rd2717, %rd2711, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3059,%dummy}, %rd2710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3060}, %rd2710;
	}
	shf.r.wrap.b32 	%r3061, %r3060, %r3059, 25;
	shf.r.wrap.b32 	%r3062, %r3059, %r3060, 25;
	mov.b64 	%rd2718, {%r3062, %r3061};
	xor.b64  	%rd2719, %rd2718, %rd2717;
	add.s64 	%rd2720, %rd2713, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3063}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3064,%dummy}, %rd2712;
	}
	shf.l.wrap.b32 	%r3065, %r3064, %r3063, 30;
	shf.l.wrap.b32 	%r3066, %r3063, %r3064, 30;
	mov.b64 	%rd2721, {%r3066, %r3065};
	xor.b64  	%rd2722, %rd2721, %rd2720;
	add.s64 	%rd2723, %rd2715, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3067,%dummy}, %rd2714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3068}, %rd2714;
	}
	shf.r.wrap.b32 	%r3069, %r3068, %r3067, 30;
	shf.r.wrap.b32 	%r3070, %r3067, %r3068, 30;
	mov.b64 	%rd2724, {%r3070, %r3069};
	xor.b64  	%rd2725, %rd2724, %rd2723;
	add.s64 	%rd2726, %rd2698, %rd2716;
	add.s64 	%rd2727, %rd2726, -5288003331091182006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3071}, %rd2716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3072,%dummy}, %rd2716;
	}
	shf.l.wrap.b32 	%r3073, %r3072, %r3071, 24;
	shf.l.wrap.b32 	%r3074, %r3071, %r3072, 24;
	mov.b64 	%rd2728, {%r3074, %r3073};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	add.s64 	%rd2730, %rd2719, %rd2720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd2719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3076,%dummy}, %rd2719;
	}
	shf.l.wrap.b32 	%r3077, %r3076, %r3075, 13;
	shf.l.wrap.b32 	%r3078, %r3075, %r3076, 13;
	mov.b64 	%rd2731, {%r3078, %r3077};
	xor.b64  	%rd2732, %rd2731, %rd2730;
	add.s64 	%rd2733, %rd2729, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3079,%dummy}, %rd2729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3080}, %rd2729;
	}
	shf.r.wrap.b32 	%r3081, %r3080, %r3079, 14;
	shf.r.wrap.b32 	%r3082, %r3079, %r3080, 14;
	mov.b64 	%rd2734, {%r3082, %r3081};
	xor.b64  	%rd2735, %rd2734, %rd2733;
	add.s64 	%rd2736, %rd2725, %rd2727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3083}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3084,%dummy}, %rd2725;
	}
	shf.l.wrap.b32 	%r3085, %r3084, %r3083, 10;
	shf.l.wrap.b32 	%r3086, %r3083, %r3084, 10;
	mov.b64 	%rd2737, {%r3086, %r3085};
	xor.b64  	%rd2738, %rd2737, %rd2736;
	add.s64 	%rd2739, %rd2722, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3087}, %rd2722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3088,%dummy}, %rd2722;
	}
	shf.l.wrap.b32 	%r3089, %r3088, %r3087, 17;
	shf.l.wrap.b32 	%r3090, %r3087, %r3088, 17;
	mov.b64 	%rd2740, {%r3090, %r3089};
	xor.b64  	%rd2741, %rd2740, %rd2739;
	add.s64 	%rd2742, %rd2733, %rd2732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3091}, %rd2732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3092,%dummy}, %rd2732;
	}
	shf.l.wrap.b32 	%r3093, %r3092, %r3091, 25;
	shf.l.wrap.b32 	%r3094, %r3091, %r3092, 25;
	mov.b64 	%rd2743, {%r3094, %r3093};
	xor.b64  	%rd2744, %rd2743, %rd2742;
	add.s64 	%rd2745, %rd2741, %rd2736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3095}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3096,%dummy}, %rd2741;
	}
	shf.l.wrap.b32 	%r3097, %r3096, %r3095, 29;
	shf.l.wrap.b32 	%r3098, %r3095, %r3096, 29;
	mov.b64 	%rd2746, {%r3098, %r3097};
	xor.b64  	%rd2747, %rd2746, %rd2745;
	add.s64 	%rd2748, %rd2738, %rd2739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3099,%dummy}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3100}, %rd2738;
	}
	shf.r.wrap.b32 	%r3101, %r3100, %r3099, 25;
	shf.r.wrap.b32 	%r3102, %r3099, %r3100, 25;
	mov.b64 	%rd2749, {%r3102, %r3101};
	xor.b64  	%rd2750, %rd2749, %rd2748;
	add.s64 	%rd2751, %rd2735, %rd2730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3103,%dummy}, %rd2735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3104}, %rd2735;
	}
	shf.r.wrap.b32 	%r3105, %r3104, %r3103, 21;
	shf.r.wrap.b32 	%r3106, %r3103, %r3104, 21;
	mov.b64 	%rd2752, {%r3106, %r3105};
	xor.b64  	%rd2753, %rd2752, %rd2751;
	add.s64 	%rd2754, %rd2745, %rd2744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd2744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3108,%dummy}, %rd2744;
	}
	shf.l.wrap.b32 	%r3109, %r3108, %r3107, 8;
	shf.l.wrap.b32 	%r3110, %r3107, %r3108, 8;
	mov.b64 	%rd2755, {%r3110, %r3109};
	xor.b64  	%rd2756, %rd2755, %rd2754;
	add.s64 	%rd2757, %rd2753, %rd2748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3111,%dummy}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3112}, %rd2753;
	}
	shf.r.wrap.b32 	%r3113, %r3112, %r3111, 29;
	shf.r.wrap.b32 	%r3114, %r3111, %r3112, 29;
	mov.b64 	%rd2758, {%r3114, %r3113};
	xor.b64  	%rd2759, %rd2758, %rd2757;
	add.s64 	%rd2760, %rd2750, %rd2751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3115,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3116}, %rd2750;
	}
	shf.r.wrap.b32 	%r3117, %r3116, %r3115, 8;
	shf.r.wrap.b32 	%r3118, %r3115, %r3116, 8;
	mov.b64 	%rd2761, {%r3118, %r3117};
	xor.b64  	%rd2762, %rd2761, %rd2760;
	add.s64 	%rd2763, %rd2747, %rd2742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3120,%dummy}, %rd2747;
	}
	shf.l.wrap.b32 	%r3121, %r3120, %r3119, 22;
	shf.l.wrap.b32 	%r3122, %r3119, %r3120, 22;
	mov.b64 	%rd2764, {%r3122, %r3121};
	xor.b64  	%rd2765, %rd2764, %rd2763;
	add.s64 	%rd2766, %rd2756, -1439460426187442557;
	add.s64 	%rd2767, %rd2757, %rd2766;
	add.s64 	%rd2768, %rd2765, -4364063934328942203;
	add.s64 	%rd2769, %rd2760, %rd2768;
	add.s64 	%rd2770, %rd2762, -5288003331091182006;
	add.s64 	%rd2771, %rd2763, %rd2770;
	add.s64 	%rd2772, %rd2759, -1714305546867594761;
	add.s64 	%rd2773, %rd2754, %rd2772;
	add.s64 	%rd2774, %rd2767, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3123,%dummy}, %rd2766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3124}, %rd2766;
	}
	shf.r.wrap.b32 	%r3125, %r3124, %r3123, 18;
	shf.r.wrap.b32 	%r3126, %r3123, %r3124, 18;
	mov.b64 	%rd2775, {%r3126, %r3125};
	xor.b64  	%rd2776, %rd2775, %rd2774;
	add.s64 	%rd2777, %rd2769, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3127,%dummy}, %rd2768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3128}, %rd2768;
	}
	shf.r.wrap.b32 	%r3129, %r3128, %r3127, 28;
	shf.r.wrap.b32 	%r3130, %r3127, %r3128, 28;
	mov.b64 	%rd2778, {%r3130, %r3129};
	xor.b64  	%rd2779, %rd2778, %rd2777;
	add.s64 	%rd2780, %rd2771, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3131}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3132,%dummy}, %rd2770;
	}
	shf.l.wrap.b32 	%r3133, %r3132, %r3131, 19;
	shf.l.wrap.b32 	%r3134, %r3131, %r3132, 19;
	mov.b64 	%rd2781, {%r3134, %r3133};
	xor.b64  	%rd2782, %rd2781, %rd2780;
	add.s64 	%rd2783, %rd2773, -4841294140339962349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3135,%dummy}, %rd2772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3136}, %rd2772;
	}
	shf.r.wrap.b32 	%r3137, %r3136, %r3135, 27;
	shf.r.wrap.b32 	%r3138, %r3135, %r3136, 27;
	mov.b64 	%rd2784, {%r3138, %r3137};
	xor.b64  	%rd2785, %rd2784, %rd2783;
	add.s64 	%rd2786, %rd2776, %rd2777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3139,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3140}, %rd2776;
	}
	shf.r.wrap.b32 	%r3141, %r3140, %r3139, 31;
	shf.r.wrap.b32 	%r3142, %r3139, %r3140, 31;
	mov.b64 	%rd2787, {%r3142, %r3141};
	xor.b64  	%rd2788, %rd2787, %rd2786;
	add.s64 	%rd2789, %rd2785, %rd2780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3143}, %rd2785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3144,%dummy}, %rd2785;
	}
	shf.l.wrap.b32 	%r3145, %r3144, %r3143, 27;
	shf.l.wrap.b32 	%r3146, %r3143, %r3144, 27;
	mov.b64 	%rd2790, {%r3146, %r3145};
	xor.b64  	%rd2791, %rd2790, %rd2789;
	add.s64 	%rd2792, %rd2782, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd2782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3148,%dummy}, %rd2782;
	}
	shf.l.wrap.b32 	%r3149, %r3148, %r3147, 14;
	shf.l.wrap.b32 	%r3150, %r3147, %r3148, 14;
	mov.b64 	%rd2793, {%r3150, %r3149};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	add.s64 	%rd2795, %rd2779, %rd2774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3151,%dummy}, %rd2779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3152}, %rd2779;
	}
	shf.r.wrap.b32 	%r3153, %r3152, %r3151, 22;
	shf.r.wrap.b32 	%r3154, %r3151, %r3152, 22;
	mov.b64 	%rd2796, {%r3154, %r3153};
	xor.b64  	%rd2797, %rd2796, %rd2795;
	add.s64 	%rd2798, %rd2789, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3155}, %rd2788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3156,%dummy}, %rd2788;
	}
	shf.l.wrap.b32 	%r3157, %r3156, %r3155, 17;
	shf.l.wrap.b32 	%r3158, %r3155, %r3156, 17;
	mov.b64 	%rd2799, {%r3158, %r3157};
	xor.b64  	%rd2800, %rd2799, %rd2798;
	add.s64 	%rd2801, %rd2797, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3159,%dummy}, %rd2797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3160}, %rd2797;
	}
	shf.r.wrap.b32 	%r3161, %r3160, %r3159, 15;
	shf.r.wrap.b32 	%r3162, %r3159, %r3160, 15;
	mov.b64 	%rd2802, {%r3162, %r3161};
	xor.b64  	%rd2803, %rd2802, %rd2801;
	add.s64 	%rd2804, %rd2794, %rd2795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3163,%dummy}, %rd2794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3164}, %rd2794;
	}
	shf.r.wrap.b32 	%r3165, %r3164, %r3163, 28;
	shf.r.wrap.b32 	%r3166, %r3163, %r3164, 28;
	mov.b64 	%rd2805, {%r3166, %r3165};
	xor.b64  	%rd2806, %rd2805, %rd2804;
	add.s64 	%rd2807, %rd2791, %rd2786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3167,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3168}, %rd2791;
	}
	shf.r.wrap.b32 	%r3169, %r3168, %r3167, 25;
	shf.r.wrap.b32 	%r3170, %r3167, %r3168, 25;
	mov.b64 	%rd2808, {%r3170, %r3169};
	xor.b64  	%rd2809, %rd2808, %rd2807;
	add.s64 	%rd2810, %rd2801, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3171,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3172}, %rd2800;
	}
	shf.r.wrap.b32 	%r3173, %r3172, %r3171, 20;
	shf.r.wrap.b32 	%r3174, %r3171, %r3172, 20;
	mov.b64 	%rd2811, {%r3174, %r3173};
	xor.b64  	%rd2812, %rd2811, %rd2810;
	add.s64 	%rd2813, %rd2809, %rd2804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd2809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3176,%dummy}, %rd2809;
	}
	shf.l.wrap.b32 	%r3177, %r3176, %r3175, 9;
	shf.l.wrap.b32 	%r3178, %r3175, %r3176, 9;
	mov.b64 	%rd2814, {%r3178, %r3177};
	xor.b64  	%rd2815, %rd2814, %rd2813;
	add.s64 	%rd2816, %rd2806, %rd2807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3179,%dummy}, %rd2806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3180}, %rd2806;
	}
	shf.r.wrap.b32 	%r3181, %r3180, %r3179, 10;
	shf.r.wrap.b32 	%r3182, %r3179, %r3180, 10;
	mov.b64 	%rd2817, {%r3182, %r3181};
	xor.b64  	%rd2818, %rd2817, %rd2816;
	add.s64 	%rd2819, %rd2803, %rd2798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3183,%dummy}, %rd2803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3184}, %rd2803;
	}
	shf.r.wrap.b32 	%r3185, %r3184, %r3183, 8;
	shf.r.wrap.b32 	%r3186, %r3183, %r3184, 8;
	mov.b64 	%rd2820, {%r3186, %r3185};
	xor.b64  	%rd2821, %rd2820, %rd2819;
	add.s64 	%rd2822, %rd2812, -1755217697375493551;
	add.s64 	%rd2823, %rd2813, %rd2822;
	add.s64 	%rd2824, %rd2821, 4534485012945173523;
	add.s64 	%rd2825, %rd2816, %rd2824;
	add.s64 	%rd2826, %rd2818, -4841294140339962349;
	add.s64 	%rd2827, %rd2819, %rd2826;
	add.s64 	%rd2828, %rd2815, 6174048478977683068;
	add.s64 	%rd2829, %rd2823, -1439460426187442557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3187,%dummy}, %rd2822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3188}, %rd2822;
	}
	shf.r.wrap.b32 	%r3189, %r3188, %r3187, 25;
	shf.r.wrap.b32 	%r3190, %r3187, %r3188, 25;
	mov.b64 	%rd2830, {%r3190, %r3189};
	xor.b64  	%rd2831, %rd2830, %rd2829;
	add.s64 	%rd2832, %rd2825, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3191}, %rd2824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3192,%dummy}, %rd2824;
	}
	shf.l.wrap.b32 	%r3193, %r3192, %r3191, 30;
	shf.l.wrap.b32 	%r3194, %r3191, %r3192, 30;
	mov.b64 	%rd2833, {%r3194, %r3193};
	xor.b64  	%rd2834, %rd2833, %rd2832;
	add.s64 	%rd2835, %rd2827, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3195,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3196}, %rd2826;
	}
	shf.r.wrap.b32 	%r3197, %r3196, %r3195, 30;
	shf.r.wrap.b32 	%r3198, %r3195, %r3196, 30;
	mov.b64 	%rd2836, {%r3198, %r3197};
	xor.b64  	%rd2837, %rd2836, %rd2835;
	add.s64 	%rd2838, %rd2810, %rd2828;
	add.s64 	%rd2839, %rd2838, -2867227051474441717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd2828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3200,%dummy}, %rd2828;
	}
	shf.l.wrap.b32 	%r3201, %r3200, %r3199, 24;
	shf.l.wrap.b32 	%r3202, %r3199, %r3200, 24;
	mov.b64 	%rd2840, {%r3202, %r3201};
	xor.b64  	%rd2841, %rd2840, %rd2839;
	add.s64 	%rd2842, %rd2831, %rd2832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3203}, %rd2831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd2831;
	}
	shf.l.wrap.b32 	%r3205, %r3204, %r3203, 13;
	shf.l.wrap.b32 	%r3206, %r3203, %r3204, 13;
	mov.b64 	%rd2843, {%r3206, %r3205};
	xor.b64  	%rd2844, %rd2843, %rd2842;
	add.s64 	%rd2845, %rd2841, %rd2835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3207,%dummy}, %rd2841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3208}, %rd2841;
	}
	shf.r.wrap.b32 	%r3209, %r3208, %r3207, 14;
	shf.r.wrap.b32 	%r3210, %r3207, %r3208, 14;
	mov.b64 	%rd2846, {%r3210, %r3209};
	xor.b64  	%rd2847, %rd2846, %rd2845;
	add.s64 	%rd2848, %rd2837, %rd2839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3212,%dummy}, %rd2837;
	}
	shf.l.wrap.b32 	%r3213, %r3212, %r3211, 10;
	shf.l.wrap.b32 	%r3214, %r3211, %r3212, 10;
	mov.b64 	%rd2849, {%r3214, %r3213};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	add.s64 	%rd2851, %rd2834, %rd2829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3215}, %rd2834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3216,%dummy}, %rd2834;
	}
	shf.l.wrap.b32 	%r3217, %r3216, %r3215, 17;
	shf.l.wrap.b32 	%r3218, %r3215, %r3216, 17;
	mov.b64 	%rd2852, {%r3218, %r3217};
	xor.b64  	%rd2853, %rd2852, %rd2851;
	add.s64 	%rd2854, %rd2845, %rd2844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd2844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3220,%dummy}, %rd2844;
	}
	shf.l.wrap.b32 	%r3221, %r3220, %r3219, 25;
	shf.l.wrap.b32 	%r3222, %r3219, %r3220, 25;
	mov.b64 	%rd2855, {%r3222, %r3221};
	xor.b64  	%rd2856, %rd2855, %rd2854;
	add.s64 	%rd2857, %rd2853, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd2853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3224,%dummy}, %rd2853;
	}
	shf.l.wrap.b32 	%r3225, %r3224, %r3223, 29;
	shf.l.wrap.b32 	%r3226, %r3223, %r3224, 29;
	mov.b64 	%rd2858, {%r3226, %r3225};
	xor.b64  	%rd2859, %rd2858, %rd2857;
	add.s64 	%rd2860, %rd2850, %rd2851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3227,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3228}, %rd2850;
	}
	shf.r.wrap.b32 	%r3229, %r3228, %r3227, 25;
	shf.r.wrap.b32 	%r3230, %r3227, %r3228, 25;
	mov.b64 	%rd2861, {%r3230, %r3229};
	xor.b64  	%rd2862, %rd2861, %rd2860;
	add.s64 	%rd2863, %rd2847, %rd2842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3231,%dummy}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3232}, %rd2847;
	}
	shf.r.wrap.b32 	%r3233, %r3232, %r3231, 21;
	shf.r.wrap.b32 	%r3234, %r3231, %r3232, 21;
	mov.b64 	%rd2864, {%r3234, %r3233};
	xor.b64  	%rd2865, %rd2864, %rd2863;
	add.s64 	%rd2866, %rd2857, %rd2856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd2856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd2856;
	}
	shf.l.wrap.b32 	%r3237, %r3236, %r3235, 8;
	shf.l.wrap.b32 	%r3238, %r3235, %r3236, 8;
	mov.b64 	%rd2867, {%r3238, %r3237};
	xor.b64  	%rd2868, %rd2867, %rd2866;
	add.s64 	%rd2869, %rd2865, %rd2860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3239,%dummy}, %rd2865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3240}, %rd2865;
	}
	shf.r.wrap.b32 	%r3241, %r3240, %r3239, 29;
	shf.r.wrap.b32 	%r3242, %r3239, %r3240, 29;
	mov.b64 	%rd2870, {%r3242, %r3241};
	xor.b64  	%rd2871, %rd2870, %rd2869;
	add.s64 	%rd2872, %rd2862, %rd2863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3243,%dummy}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3244}, %rd2862;
	}
	shf.r.wrap.b32 	%r3245, %r3244, %r3243, 8;
	shf.r.wrap.b32 	%r3246, %r3243, %r3244, 8;
	mov.b64 	%rd2873, {%r3246, %r3245};
	xor.b64  	%rd2874, %rd2873, %rd2872;
	add.s64 	%rd2875, %rd2859, %rd2854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3247}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd2859;
	}
	shf.l.wrap.b32 	%r3249, %r3248, %r3247, 22;
	shf.l.wrap.b32 	%r3250, %r3247, %r3248, 22;
	mov.b64 	%rd2876, {%r3250, %r3249};
	xor.b64  	%rd2877, %rd2876, %rd2875;
	add.s64 	%rd2878, %rd2868, -4364063934328942203;
	add.s64 	%rd2879, %rd2869, %rd2878;
	add.s64 	%rd2880, %rd2877, -5288003331091182038;
	add.s64 	%rd2881, %rd2872, %rd2880;
	add.s64 	%rd2882, %rd2874, -2867227051474441717;
	add.s64 	%rd2883, %rd2875, %rd2882;
	add.s64 	%rd2884, %rd2871, 3037510430686418153;
	add.s64 	%rd2885, %rd2866, %rd2884;
	add.s64 	%rd2886, %rd2879, -1755217697375493551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3251,%dummy}, %rd2878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3252}, %rd2878;
	}
	shf.r.wrap.b32 	%r3253, %r3252, %r3251, 18;
	shf.r.wrap.b32 	%r3254, %r3251, %r3252, 18;
	mov.b64 	%rd2887, {%r3254, %r3253};
	xor.b64  	%rd2888, %rd2887, %rd2886;
	add.s64 	%rd2889, %rd2881, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3255,%dummy}, %rd2880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3256}, %rd2880;
	}
	shf.r.wrap.b32 	%r3257, %r3256, %r3255, 28;
	shf.r.wrap.b32 	%r3258, %r3255, %r3256, 28;
	mov.b64 	%rd2890, {%r3258, %r3257};
	xor.b64  	%rd2891, %rd2890, %rd2889;
	add.s64 	%rd2892, %rd2883, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd2882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3260,%dummy}, %rd2882;
	}
	shf.l.wrap.b32 	%r3261, %r3260, %r3259, 19;
	shf.l.wrap.b32 	%r3262, %r3259, %r3260, 19;
	mov.b64 	%rd2893, {%r3262, %r3261};
	xor.b64  	%rd2894, %rd2893, %rd2892;
	add.s64 	%rd2895, %rd2885, 6174048478977683087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3263,%dummy}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3264}, %rd2884;
	}
	shf.r.wrap.b32 	%r3265, %r3264, %r3263, 27;
	shf.r.wrap.b32 	%r3266, %r3263, %r3264, 27;
	mov.b64 	%rd2896, {%r3266, %r3265};
	xor.b64  	%rd2897, %rd2896, %rd2895;
	add.s64 	%rd2898, %rd2888, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3267,%dummy}, %rd2888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3268}, %rd2888;
	}
	shf.r.wrap.b32 	%r3269, %r3268, %r3267, 31;
	shf.r.wrap.b32 	%r3270, %r3267, %r3268, 31;
	mov.b64 	%rd2899, {%r3270, %r3269};
	xor.b64  	%rd2900, %rd2899, %rd2898;
	add.s64 	%rd2901, %rd2897, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3271}, %rd2897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3272,%dummy}, %rd2897;
	}
	shf.l.wrap.b32 	%r3273, %r3272, %r3271, 27;
	shf.l.wrap.b32 	%r3274, %r3271, %r3272, 27;
	mov.b64 	%rd2902, {%r3274, %r3273};
	xor.b64  	%rd2903, %rd2902, %rd2901;
	add.s64 	%rd2904, %rd2894, %rd2895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3276,%dummy}, %rd2894;
	}
	shf.l.wrap.b32 	%r3277, %r3276, %r3275, 14;
	shf.l.wrap.b32 	%r3278, %r3275, %r3276, 14;
	mov.b64 	%rd2905, {%r3278, %r3277};
	xor.b64  	%rd2906, %rd2905, %rd2904;
	add.s64 	%rd2907, %rd2891, %rd2886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3279,%dummy}, %rd2891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3280}, %rd2891;
	}
	shf.r.wrap.b32 	%r3281, %r3280, %r3279, 22;
	shf.r.wrap.b32 	%r3282, %r3279, %r3280, 22;
	mov.b64 	%rd2908, {%r3282, %r3281};
	xor.b64  	%rd2909, %rd2908, %rd2907;
	add.s64 	%rd2910, %rd2901, %rd2900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3284,%dummy}, %rd2900;
	}
	shf.l.wrap.b32 	%r3285, %r3284, %r3283, 17;
	shf.l.wrap.b32 	%r3286, %r3283, %r3284, 17;
	mov.b64 	%rd2911, {%r3286, %r3285};
	xor.b64  	%rd2912, %rd2911, %rd2910;
	add.s64 	%rd2913, %rd2909, %rd2904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3287,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3288}, %rd2909;
	}
	shf.r.wrap.b32 	%r3289, %r3288, %r3287, 15;
	shf.r.wrap.b32 	%r3290, %r3287, %r3288, 15;
	mov.b64 	%rd2914, {%r3290, %r3289};
	xor.b64  	%rd2915, %rd2914, %rd2913;
	add.s64 	%rd2916, %rd2906, %rd2907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3291,%dummy}, %rd2906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3292}, %rd2906;
	}
	shf.r.wrap.b32 	%r3293, %r3292, %r3291, 28;
	shf.r.wrap.b32 	%r3294, %r3291, %r3292, 28;
	mov.b64 	%rd2917, {%r3294, %r3293};
	xor.b64  	%rd2918, %rd2917, %rd2916;
	add.s64 	%rd2919, %rd2903, %rd2898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3295,%dummy}, %rd2903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3296}, %rd2903;
	}
	shf.r.wrap.b32 	%r3297, %r3296, %r3295, 25;
	shf.r.wrap.b32 	%r3298, %r3295, %r3296, 25;
	mov.b64 	%rd2920, {%r3298, %r3297};
	xor.b64  	%rd2921, %rd2920, %rd2919;
	add.s64 	%rd2922, %rd2913, %rd2912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3299,%dummy}, %rd2912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3300}, %rd2912;
	}
	shf.r.wrap.b32 	%r3301, %r3300, %r3299, 20;
	shf.r.wrap.b32 	%r3302, %r3299, %r3300, 20;
	mov.b64 	%rd2923, {%r3302, %r3301};
	xor.b64  	%rd2924, %rd2923, %rd2922;
	add.s64 	%rd2925, %rd2921, %rd2916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3303}, %rd2921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3304,%dummy}, %rd2921;
	}
	shf.l.wrap.b32 	%r3305, %r3304, %r3303, 9;
	shf.l.wrap.b32 	%r3306, %r3303, %r3304, 9;
	mov.b64 	%rd2926, {%r3306, %r3305};
	xor.b64  	%rd2927, %rd2926, %rd2925;
	add.s64 	%rd2928, %rd2918, %rd2919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3307,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3308}, %rd2918;
	}
	shf.r.wrap.b32 	%r3309, %r3308, %r3307, 10;
	shf.r.wrap.b32 	%r3310, %r3307, %r3308, 10;
	mov.b64 	%rd2929, {%r3310, %r3309};
	xor.b64  	%rd2930, %rd2929, %rd2928;
	add.s64 	%rd2931, %rd2915, %rd2910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3311,%dummy}, %rd2915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3312}, %rd2915;
	}
	shf.r.wrap.b32 	%r3313, %r3312, %r3311, 8;
	shf.r.wrap.b32 	%r3314, %r3311, %r3312, 8;
	mov.b64 	%rd2932, {%r3314, %r3313};
	xor.b64  	%rd2933, %rd2932, %rd2931;
	add.s64 	%rd2934, %rd2924, 4534485012945173523;
	add.s64 	%rd2935, %rd2925, %rd2934;
	add.s64 	%rd2936, %rd2933, -3688372635733115373;
	add.s64 	%rd2937, %rd2928, %rd2936;
	add.s64 	%rd2938, %rd2930, 6174048478977683087;
	add.s64 	%rd2939, %rd2931, %rd2938;
	add.s64 	%rd2940, %rd2927, -1439460426187442542;
	add.s64 	%rd2941, %rd2935, -4364063934328942203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3315,%dummy}, %rd2934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3316}, %rd2934;
	}
	shf.r.wrap.b32 	%r3317, %r3316, %r3315, 25;
	shf.r.wrap.b32 	%r3318, %r3315, %r3316, 25;
	mov.b64 	%rd2942, {%r3318, %r3317};
	xor.b64  	%rd2943, %rd2942, %rd2941;
	add.s64 	%rd2944, %rd2937, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3319}, %rd2936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3320,%dummy}, %rd2936;
	}
	shf.l.wrap.b32 	%r3321, %r3320, %r3319, 30;
	shf.l.wrap.b32 	%r3322, %r3319, %r3320, 30;
	mov.b64 	%rd2945, {%r3322, %r3321};
	xor.b64  	%rd2946, %rd2945, %rd2944;
	add.s64 	%rd2947, %rd2939, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3323,%dummy}, %rd2938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3324}, %rd2938;
	}
	shf.r.wrap.b32 	%r3325, %r3324, %r3323, 30;
	shf.r.wrap.b32 	%r3326, %r3323, %r3324, 30;
	mov.b64 	%rd2948, {%r3326, %r3325};
	xor.b64  	%rd2949, %rd2948, %rd2947;
	add.s64 	%rd2950, %rd2922, %rd2940;
	add.s64 	%rd2951, %rd2950, 1884588926079571163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3327}, %rd2940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3328,%dummy}, %rd2940;
	}
	shf.l.wrap.b32 	%r3329, %r3328, %r3327, 24;
	shf.l.wrap.b32 	%r3330, %r3327, %r3328, 24;
	mov.b64 	%rd2952, {%r3330, %r3329};
	xor.b64  	%rd2953, %rd2952, %rd2951;
	add.s64 	%rd2954, %rd2943, %rd2944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd2943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3332,%dummy}, %rd2943;
	}
	shf.l.wrap.b32 	%r3333, %r3332, %r3331, 13;
	shf.l.wrap.b32 	%r3334, %r3331, %r3332, 13;
	mov.b64 	%rd2955, {%r3334, %r3333};
	xor.b64  	%rd2956, %rd2955, %rd2954;
	add.s64 	%rd2957, %rd2953, %rd2947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3335,%dummy}, %rd2953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3336}, %rd2953;
	}
	shf.r.wrap.b32 	%r3337, %r3336, %r3335, 14;
	shf.r.wrap.b32 	%r3338, %r3335, %r3336, 14;
	mov.b64 	%rd2958, {%r3338, %r3337};
	xor.b64  	%rd2959, %rd2958, %rd2957;
	add.s64 	%rd2960, %rd2949, %rd2951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd2949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3340,%dummy}, %rd2949;
	}
	shf.l.wrap.b32 	%r3341, %r3340, %r3339, 10;
	shf.l.wrap.b32 	%r3342, %r3339, %r3340, 10;
	mov.b64 	%rd2961, {%r3342, %r3341};
	xor.b64  	%rd2962, %rd2961, %rd2960;
	add.s64 	%rd2963, %rd2946, %rd2941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3343}, %rd2946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd2946;
	}
	shf.l.wrap.b32 	%r3345, %r3344, %r3343, 17;
	shf.l.wrap.b32 	%r3346, %r3343, %r3344, 17;
	mov.b64 	%rd2964, {%r3346, %r3345};
	xor.b64  	%rd2965, %rd2964, %rd2963;
	add.s64 	%rd2966, %rd2957, %rd2956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3347}, %rd2956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd2956;
	}
	shf.l.wrap.b32 	%r3349, %r3348, %r3347, 25;
	shf.l.wrap.b32 	%r3350, %r3347, %r3348, 25;
	mov.b64 	%rd2967, {%r3350, %r3349};
	xor.b64  	%rd2968, %rd2967, %rd2966;
	add.s64 	%rd2969, %rd2965, %rd2960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3351}, %rd2965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3352,%dummy}, %rd2965;
	}
	shf.l.wrap.b32 	%r3353, %r3352, %r3351, 29;
	shf.l.wrap.b32 	%r3354, %r3351, %r3352, 29;
	mov.b64 	%rd2970, {%r3354, %r3353};
	xor.b64  	%rd2971, %rd2970, %rd2969;
	add.s64 	%rd2972, %rd2962, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3355,%dummy}, %rd2962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3356}, %rd2962;
	}
	shf.r.wrap.b32 	%r3357, %r3356, %r3355, 25;
	shf.r.wrap.b32 	%r3358, %r3355, %r3356, 25;
	mov.b64 	%rd2973, {%r3358, %r3357};
	xor.b64  	%rd2974, %rd2973, %rd2972;
	add.s64 	%rd2975, %rd2959, %rd2954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3359,%dummy}, %rd2959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3360}, %rd2959;
	}
	shf.r.wrap.b32 	%r3361, %r3360, %r3359, 21;
	shf.r.wrap.b32 	%r3362, %r3359, %r3360, 21;
	mov.b64 	%rd2976, {%r3362, %r3361};
	xor.b64  	%rd2977, %rd2976, %rd2975;
	add.s64 	%rd2978, %rd2969, %rd2968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd2968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3364,%dummy}, %rd2968;
	}
	shf.l.wrap.b32 	%r3365, %r3364, %r3363, 8;
	shf.l.wrap.b32 	%r3366, %r3363, %r3364, 8;
	mov.b64 	%rd2979, {%r3366, %r3365};
	xor.b64  	%rd2980, %rd2979, %rd2978;
	add.s64 	%rd2981, %rd2977, %rd2972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3367,%dummy}, %rd2977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3368}, %rd2977;
	}
	shf.r.wrap.b32 	%r3369, %r3368, %r3367, 29;
	shf.r.wrap.b32 	%r3370, %r3367, %r3368, 29;
	mov.b64 	%rd2982, {%r3370, %r3369};
	xor.b64  	%rd2983, %rd2982, %rd2981;
	add.s64 	%rd2984, %rd2974, %rd2975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3371,%dummy}, %rd2974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3372}, %rd2974;
	}
	shf.r.wrap.b32 	%r3373, %r3372, %r3371, 8;
	shf.r.wrap.b32 	%r3374, %r3371, %r3372, 8;
	mov.b64 	%rd2985, {%r3374, %r3373};
	xor.b64  	%rd2986, %rd2985, %rd2984;
	add.s64 	%rd2987, %rd2971, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3375}, %rd2971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3376,%dummy}, %rd2971;
	}
	shf.l.wrap.b32 	%r3377, %r3376, %r3375, 22;
	shf.l.wrap.b32 	%r3378, %r3375, %r3376, 22;
	mov.b64 	%rd2988, {%r3378, %r3377};
	xor.b64  	%rd2989, %rd2988, %rd2987;
	add.s64 	%rd2990, %rd2980, -5288003331091182038;
	add.s64 	%rd2991, %rd2981, %rd2990;
	add.s64 	%rd2992, %rd2989, -1714305546867594773;
	add.s64 	%rd2993, %rd2984, %rd2992;
	add.s64 	%rd2994, %rd2986, 1884588926079571163;
	add.s64 	%rd2995, %rd2987, %rd2994;
	add.s64 	%rd2996, %rd2983, -1755217697375493535;
	add.s64 	%rd2997, %rd2978, %rd2996;
	add.s64 	%rd2998, %rd2991, 4534485012945173523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3379,%dummy}, %rd2990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3380}, %rd2990;
	}
	shf.r.wrap.b32 	%r3381, %r3380, %r3379, 18;
	shf.r.wrap.b32 	%r3382, %r3379, %r3380, 18;
	mov.b64 	%rd2999, {%r3382, %r3381};
	xor.b64  	%rd3000, %rd2999, %rd2998;
	add.s64 	%rd3001, %rd2993, -3688372635733115373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3383,%dummy}, %rd2992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3384}, %rd2992;
	}
	shf.r.wrap.b32 	%r3385, %r3384, %r3383, 28;
	shf.r.wrap.b32 	%r3386, %r3383, %r3384, 28;
	mov.b64 	%rd3002, {%r3386, %r3385};
	xor.b64  	%rd3003, %rd3002, %rd3001;
	add.s64 	%rd3004, %rd2995, 6174048478977683055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd2994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3388,%dummy}, %rd2994;
	}
	shf.l.wrap.b32 	%r3389, %r3388, %r3387, 19;
	shf.l.wrap.b32 	%r3390, %r3387, %r3388, 19;
	mov.b64 	%rd3005, {%r3390, %r3389};
	xor.b64  	%rd3006, %rd3005, %rd3004;
	add.s64 	%rd3007, %rd2997, -2592381930794289501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3391,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3392}, %rd2996;
	}
	shf.r.wrap.b32 	%r3393, %r3392, %r3391, 27;
	shf.r.wrap.b32 	%r3394, %r3391, %r3392, 27;
	mov.b64 	%rd3008, {%r3394, %r3393};
	xor.b64  	%rd3009, %rd3008, %rd3007;
	add.s64 	%rd3010, %rd3000, %rd3001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3395,%dummy}, %rd3000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3396}, %rd3000;
	}
	shf.r.wrap.b32 	%r3397, %r3396, %r3395, 31;
	shf.r.wrap.b32 	%r3398, %r3395, %r3396, 31;
	mov.b64 	%rd3011, {%r3398, %r3397};
	xor.b64  	%rd3012, %rd3011, %rd3010;
	add.s64 	%rd3013, %rd3009, %rd3004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3399}, %rd3009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3400,%dummy}, %rd3009;
	}
	shf.l.wrap.b32 	%r3401, %r3400, %r3399, 27;
	shf.l.wrap.b32 	%r3402, %r3399, %r3400, 27;
	mov.b64 	%rd3014, {%r3402, %r3401};
	xor.b64  	%rd3015, %rd3014, %rd3013;
	add.s64 	%rd3016, %rd3006, %rd3007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3403}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3404,%dummy}, %rd3006;
	}
	shf.l.wrap.b32 	%r3405, %r3404, %r3403, 14;
	shf.l.wrap.b32 	%r3406, %r3403, %r3404, 14;
	mov.b64 	%rd3017, {%r3406, %r3405};
	xor.b64  	%rd3018, %rd3017, %rd3016;
	add.s64 	%rd3019, %rd3003, %rd2998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd3003;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 22;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 22;
	mov.b64 	%rd3020, {%r3410, %r3409};
	xor.b64  	%rd3021, %rd3020, %rd3019;
	add.s64 	%rd3022, %rd3013, %rd3012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3411}, %rd3012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3412,%dummy}, %rd3012;
	}
	shf.l.wrap.b32 	%r3413, %r3412, %r3411, 17;
	shf.l.wrap.b32 	%r3414, %r3411, %r3412, 17;
	mov.b64 	%rd3023, {%r3414, %r3413};
	xor.b64  	%rd3024, %rd3023, %rd3022;
	add.s64 	%rd3025, %rd3021, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3415,%dummy}, %rd3021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3416}, %rd3021;
	}
	shf.r.wrap.b32 	%r3417, %r3416, %r3415, 15;
	shf.r.wrap.b32 	%r3418, %r3415, %r3416, 15;
	mov.b64 	%rd3026, {%r3418, %r3417};
	xor.b64  	%rd3027, %rd3026, %rd3025;
	add.s64 	%rd3028, %rd3018, %rd3019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3419,%dummy}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3420}, %rd3018;
	}
	shf.r.wrap.b32 	%r3421, %r3420, %r3419, 28;
	shf.r.wrap.b32 	%r3422, %r3419, %r3420, 28;
	mov.b64 	%rd3029, {%r3422, %r3421};
	xor.b64  	%rd3030, %rd3029, %rd3028;
	add.s64 	%rd3031, %rd3015, %rd3010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3423,%dummy}, %rd3015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3424}, %rd3015;
	}
	shf.r.wrap.b32 	%r3425, %r3424, %r3423, 25;
	shf.r.wrap.b32 	%r3426, %r3423, %r3424, 25;
	mov.b64 	%rd3032, {%r3426, %r3425};
	xor.b64  	%rd3033, %rd3032, %rd3031;
	add.s64 	%rd3034, %rd3025, %rd3024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3427,%dummy}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3428}, %rd3024;
	}
	shf.r.wrap.b32 	%r3429, %r3428, %r3427, 20;
	shf.r.wrap.b32 	%r3430, %r3427, %r3428, 20;
	mov.b64 	%rd3035, {%r3430, %r3429};
	xor.b64  	%rd3036, %rd3035, %rd3034;
	add.s64 	%rd3037, %rd3033, %rd3028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3431}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3432,%dummy}, %rd3033;
	}
	shf.l.wrap.b32 	%r3433, %r3432, %r3431, 9;
	shf.l.wrap.b32 	%r3434, %r3431, %r3432, 9;
	mov.b64 	%rd3038, {%r3434, %r3433};
	xor.b64  	%rd3039, %rd3038, %rd3037;
	add.s64 	%rd3040, %rd3030, %rd3031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3435,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3436}, %rd3030;
	}
	shf.r.wrap.b32 	%r3437, %r3436, %r3435, 10;
	shf.r.wrap.b32 	%r3438, %r3435, %r3436, 10;
	mov.b64 	%rd3041, {%r3438, %r3437};
	xor.b64  	%rd3042, %rd3041, %rd3040;
	add.s64 	%rd3043, %rd3027, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3439,%dummy}, %rd3027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3440}, %rd3027;
	}
	shf.r.wrap.b32 	%r3441, %r3440, %r3439, 8;
	shf.r.wrap.b32 	%r3442, %r3439, %r3440, 8;
	mov.b64 	%rd3044, {%r3442, %r3441};
	xor.b64  	%rd3045, %rd3044, %rd3043;
	add.s64 	%rd3046, %rd3036, -3688372635733115373;
	add.s64 	%rd3047, %rd3037, %rd3046;
	add.s64 	%rd3048, %rd3045, 6174048478977683055;
	add.s64 	%rd3049, %rd3040, %rd3048;
	add.s64 	%rd3050, %rd3042, -2592381930794289501;
	add.s64 	%rd3051, %rd3043, %rd3050;
	add.s64 	%rd3052, %rd3039, -4364063934328942186;
	add.s64 	%rd3053, %rd3047, -5288003331091182038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3443,%dummy}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3444}, %rd3046;
	}
	shf.r.wrap.b32 	%r3445, %r3444, %r3443, 25;
	shf.r.wrap.b32 	%r3446, %r3443, %r3444, 25;
	mov.b64 	%rd3054, {%r3446, %r3445};
	xor.b64  	%rd3055, %rd3054, %rd3053;
	add.s64 	%rd3056, %rd3049, -1714305546867594773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3447}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3448,%dummy}, %rd3048;
	}
	shf.l.wrap.b32 	%r3449, %r3448, %r3447, 30;
	shf.l.wrap.b32 	%r3450, %r3447, %r3448, 30;
	mov.b64 	%rd3057, {%r3450, %r3449};
	xor.b64  	%rd3058, %rd3057, %rd3056;
	add.s64 	%rd3059, %rd3051, 3037510430686418139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3451,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3452}, %rd3050;
	}
	shf.r.wrap.b32 	%r3453, %r3452, %r3451, 30;
	shf.r.wrap.b32 	%r3454, %r3451, %r3452, 30;
	mov.b64 	%rd3060, {%r3454, %r3453};
	xor.b64  	%rd3061, %rd3060, %rd3059;
	add.s64 	%rd3062, %rd3034, %rd3052;
	add.s64 	%rd3063, %rd3062, -1755217697375493519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3455}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd3052;
	}
	shf.l.wrap.b32 	%r3457, %r3456, %r3455, 24;
	shf.l.wrap.b32 	%r3458, %r3455, %r3456, 24;
	mov.b64 	%rd3064, {%r3458, %r3457};
	xor.b64  	%rd3065, %rd3064, %rd3063;
	add.s64 	%rd3066, %rd3055, %rd3056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3459}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3460,%dummy}, %rd3055;
	}
	shf.l.wrap.b32 	%r3461, %r3460, %r3459, 13;
	shf.l.wrap.b32 	%r3462, %r3459, %r3460, 13;
	mov.b64 	%rd3067, {%r3462, %r3461};
	xor.b64  	%rd3068, %rd3067, %rd3066;
	add.s64 	%rd3069, %rd3065, %rd3059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3463,%dummy}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3464}, %rd3065;
	}
	shf.r.wrap.b32 	%r3465, %r3464, %r3463, 14;
	shf.r.wrap.b32 	%r3466, %r3463, %r3464, 14;
	mov.b64 	%rd3070, {%r3466, %r3465};
	xor.b64  	%rd3071, %rd3070, %rd3069;
	add.s64 	%rd3072, %rd3061, %rd3063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3467}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3468,%dummy}, %rd3061;
	}
	shf.l.wrap.b32 	%r3469, %r3468, %r3467, 10;
	shf.l.wrap.b32 	%r3470, %r3467, %r3468, 10;
	mov.b64 	%rd3073, {%r3470, %r3469};
	xor.b64  	%rd3074, %rd3073, %rd3072;
	add.s64 	%rd3075, %rd3058, %rd3053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3471}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd3058;
	}
	shf.l.wrap.b32 	%r3473, %r3472, %r3471, 17;
	shf.l.wrap.b32 	%r3474, %r3471, %r3472, 17;
	mov.b64 	%rd3076, {%r3474, %r3473};
	xor.b64  	%rd3077, %rd3076, %rd3075;
	add.s64 	%rd3078, %rd3069, %rd3068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3475}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3476,%dummy}, %rd3068;
	}
	shf.l.wrap.b32 	%r3477, %r3476, %r3475, 25;
	shf.l.wrap.b32 	%r3478, %r3475, %r3476, 25;
	mov.b64 	%rd3079, {%r3478, %r3477};
	xor.b64  	%rd3080, %rd3079, %rd3078;
	add.s64 	%rd3081, %rd3077, %rd3072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3479}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3480,%dummy}, %rd3077;
	}
	shf.l.wrap.b32 	%r3481, %r3480, %r3479, 29;
	shf.l.wrap.b32 	%r3482, %r3479, %r3480, 29;
	mov.b64 	%rd3082, {%r3482, %r3481};
	xor.b64  	%rd3083, %rd3082, %rd3081;
	add.s64 	%rd3084, %rd3074, %rd3075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3483,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3484}, %rd3074;
	}
	shf.r.wrap.b32 	%r3485, %r3484, %r3483, 25;
	shf.r.wrap.b32 	%r3486, %r3483, %r3484, 25;
	mov.b64 	%rd3085, {%r3486, %r3485};
	xor.b64  	%rd3086, %rd3085, %rd3084;
	add.s64 	%rd3087, %rd3071, %rd3066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3487,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3488}, %rd3071;
	}
	shf.r.wrap.b32 	%r3489, %r3488, %r3487, 21;
	shf.r.wrap.b32 	%r3490, %r3487, %r3488, 21;
	mov.b64 	%rd3088, {%r3490, %r3489};
	xor.b64  	%rd3089, %rd3088, %rd3087;
	add.s64 	%rd3090, %rd3081, %rd3080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3491}, %rd3080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3492,%dummy}, %rd3080;
	}
	shf.l.wrap.b32 	%r3493, %r3492, %r3491, 8;
	shf.l.wrap.b32 	%r3494, %r3491, %r3492, 8;
	mov.b64 	%rd3091, {%r3494, %r3493};
	xor.b64  	%rd3092, %rd3091, %rd3090;
	add.s64 	%rd3093, %rd3089, %rd3084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3495,%dummy}, %rd3089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3496}, %rd3089;
	}
	shf.r.wrap.b32 	%r3497, %r3496, %r3495, 29;
	shf.r.wrap.b32 	%r3498, %r3495, %r3496, 29;
	mov.b64 	%rd3094, {%r3498, %r3497};
	xor.b64  	%rd3095, %rd3094, %rd3093;
	add.s64 	%rd3096, %rd3086, %rd3087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3499,%dummy}, %rd3086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3500}, %rd3086;
	}
	shf.r.wrap.b32 	%r3501, %r3500, %r3499, 8;
	shf.r.wrap.b32 	%r3502, %r3499, %r3500, 8;
	mov.b64 	%rd3097, {%r3502, %r3501};
	xor.b64  	%rd3098, %rd3097, %rd3096;
	add.s64 	%rd3099, %rd3083, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3503}, %rd3083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd3083;
	}
	shf.l.wrap.b32 	%r3505, %r3504, %r3503, 22;
	shf.l.wrap.b32 	%r3506, %r3503, %r3504, 22;
	mov.b64 	%rd3100, {%r3506, %r3505};
	xor.b64  	%rd3101, %rd3100, %rd3099;
	add.s64 	%rd3102, %rd3093, -3688372635733115373;
	add.s64 	%rd3103, %rd3092, -1714305546867594773;
	add.s64 	%rd3104, %rd3096, 6174048478977683055;
	add.s64 	%rd3105, %rd3101, 3037510430686418139;
	add.s64 	%rd3106, %rd3099, -1439460426187442557;
	add.s64 	%rd3107, %rd3098, -1755217697375493519;
	add.s64 	%rd3108, %rd3090, -5516985438935789179;
	add.s64 	%rd3109, %rd3095, 4534485012945173541;
	xor.b64  	%rd3110, %rd3102, %rd8;
	xor.b64  	%rd3111, %rd3103, %rd7;
	xor.b64  	%rd3112, %rd3104, %rd6;
	xor.b64  	%rd3113, %rd3105, %rd5;
	xor.b64  	%rd3114, %rd3110, %rd3111;
	xor.b64  	%rd3115, %rd3114, %rd3112;
	xor.b64  	%rd3116, %rd3115, %rd3113;
	xor.b64  	%rd3117, %rd3116, %rd3106;
	xor.b64  	%rd3118, %rd3117, %rd3107;
	xor.b64  	%rd3119, %rd3118, %rd3108;
	xor.b64  	%rd3120, %rd3119, %rd3109;
	xor.b64  	%rd3121, %rd3120, 2004413935125273122;
	add.s64 	%rd3122, %rd3098, -1755217697375493511;
	add.s64 	%rd3123, %rd3090, %rd3109;
	add.s64 	%rd3124, %rd3110, %rd3111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3507,%dummy}, %rd3111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3508}, %rd3111;
	}
	shf.r.wrap.b32 	%r3509, %r3508, %r3507, 18;
	shf.r.wrap.b32 	%r3510, %r3507, %r3508, 18;
	mov.b64 	%rd3125, {%r3510, %r3509};
	xor.b64  	%rd3126, %rd3125, %rd3124;
	add.s64 	%rd3127, %rd3112, %rd3113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3511,%dummy}, %rd3113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3512}, %rd3113;
	}
	shf.r.wrap.b32 	%r3513, %r3512, %r3511, 28;
	shf.r.wrap.b32 	%r3514, %r3511, %r3512, 28;
	mov.b64 	%rd3128, {%r3514, %r3513};
	xor.b64  	%rd3129, %rd3128, %rd3127;
	add.s64 	%rd3130, %rd3106, %rd3122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3515}, %rd3122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd3122;
	}
	shf.l.wrap.b32 	%r3517, %r3516, %r3515, 19;
	shf.l.wrap.b32 	%r3518, %r3515, %r3516, 19;
	mov.b64 	%rd3131, {%r3518, %r3517};
	xor.b64  	%rd3132, %rd3131, %rd3130;
	add.s64 	%rd3133, %rd3123, -5589043032973717115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3519,%dummy}, %rd3109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3520}, %rd3109;
	}
	shf.r.wrap.b32 	%r3521, %r3520, %r3519, 27;
	shf.r.wrap.b32 	%r3522, %r3519, %r3520, 27;
	mov.b64 	%rd3134, {%r3522, %r3521};
	xor.b64  	%rd3135, %rd3134, %rd3133;
	add.s64 	%rd3136, %rd3126, %rd3127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3523,%dummy}, %rd3126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3524}, %rd3126;
	}
	shf.r.wrap.b32 	%r3525, %r3524, %r3523, 31;
	shf.r.wrap.b32 	%r3526, %r3523, %r3524, 31;
	mov.b64 	%rd3137, {%r3526, %r3525};
	xor.b64  	%rd3138, %rd3137, %rd3136;
	add.s64 	%rd3139, %rd3135, %rd3130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3527}, %rd3135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3528,%dummy}, %rd3135;
	}
	shf.l.wrap.b32 	%r3529, %r3528, %r3527, 27;
	shf.l.wrap.b32 	%r3530, %r3527, %r3528, 27;
	mov.b64 	%rd3140, {%r3530, %r3529};
	xor.b64  	%rd3141, %rd3140, %rd3139;
	add.s64 	%rd3142, %rd3132, %rd3133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3531}, %rd3132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3532,%dummy}, %rd3132;
	}
	shf.l.wrap.b32 	%r3533, %r3532, %r3531, 14;
	shf.l.wrap.b32 	%r3534, %r3531, %r3532, 14;
	mov.b64 	%rd3143, {%r3534, %r3533};
	xor.b64  	%rd3144, %rd3143, %rd3142;
	add.s64 	%rd3145, %rd3129, %rd3124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3535,%dummy}, %rd3129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3536}, %rd3129;
	}
	shf.r.wrap.b32 	%r3537, %r3536, %r3535, 22;
	shf.r.wrap.b32 	%r3538, %r3535, %r3536, 22;
	mov.b64 	%rd3146, {%r3538, %r3537};
	xor.b64  	%rd3147, %rd3146, %rd3145;
	add.s64 	%rd3148, %rd3139, %rd3138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3539}, %rd3138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3540,%dummy}, %rd3138;
	}
	shf.l.wrap.b32 	%r3541, %r3540, %r3539, 17;
	shf.l.wrap.b32 	%r3542, %r3539, %r3540, 17;
	mov.b64 	%rd3149, {%r3542, %r3541};
	xor.b64  	%rd3150, %rd3149, %rd3148;
	add.s64 	%rd3151, %rd3147, %rd3142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3543,%dummy}, %rd3147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3544}, %rd3147;
	}
	shf.r.wrap.b32 	%r3545, %r3544, %r3543, 15;
	shf.r.wrap.b32 	%r3546, %r3543, %r3544, 15;
	mov.b64 	%rd3152, {%r3546, %r3545};
	xor.b64  	%rd3153, %rd3152, %rd3151;
	add.s64 	%rd3154, %rd3144, %rd3145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3547,%dummy}, %rd3144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3548}, %rd3144;
	}
	shf.r.wrap.b32 	%r3549, %r3548, %r3547, 28;
	shf.r.wrap.b32 	%r3550, %r3547, %r3548, 28;
	mov.b64 	%rd3155, {%r3550, %r3549};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	add.s64 	%rd3157, %rd3141, %rd3136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3551,%dummy}, %rd3141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3552}, %rd3141;
	}
	shf.r.wrap.b32 	%r3553, %r3552, %r3551, 25;
	shf.r.wrap.b32 	%r3554, %r3551, %r3552, 25;
	mov.b64 	%rd3158, {%r3554, %r3553};
	xor.b64  	%rd3159, %rd3158, %rd3157;
	add.s64 	%rd3160, %rd3151, %rd3150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3555,%dummy}, %rd3150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3556}, %rd3150;
	}
	shf.r.wrap.b32 	%r3557, %r3556, %r3555, 20;
	shf.r.wrap.b32 	%r3558, %r3555, %r3556, 20;
	mov.b64 	%rd3161, {%r3558, %r3557};
	xor.b64  	%rd3162, %rd3161, %rd3160;
	add.s64 	%rd3163, %rd3159, %rd3154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3559}, %rd3159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd3159;
	}
	shf.l.wrap.b32 	%r3561, %r3560, %r3559, 9;
	shf.l.wrap.b32 	%r3562, %r3559, %r3560, 9;
	mov.b64 	%rd3164, {%r3562, %r3561};
	xor.b64  	%rd3165, %rd3164, %rd3163;
	add.s64 	%rd3166, %rd3156, %rd3157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd3156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd3156;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 10;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 10;
	mov.b64 	%rd3167, {%r3566, %r3565};
	xor.b64  	%rd3168, %rd3167, %rd3166;
	add.s64 	%rd3169, %rd3153, %rd3148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3567,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3568}, %rd3153;
	}
	shf.r.wrap.b32 	%r3569, %r3568, %r3567, 8;
	shf.r.wrap.b32 	%r3570, %r3567, %r3568, 8;
	mov.b64 	%rd3170, {%r3570, %r3569};
	xor.b64  	%rd3171, %rd3170, %rd3169;
	add.s64 	%rd3172, %rd3111, %rd3163;
	add.s64 	%rd3173, %rd3112, %rd3162;
	add.s64 	%rd3174, %rd3113, %rd3166;
	add.s64 	%rd3175, %rd3106, %rd3171;
	add.s64 	%rd3176, %rd3107, %rd3169;
	add.s64 	%rd3177, %rd3108, %rd3168;
	add.s64 	%rd3178, %rd3177, -72057594037927936;
	add.s64 	%rd3179, %rd3165, %rd3121;
	add.s64 	%rd3180, %rd3179, 1;
	add.s64 	%rd3181, %rd3172, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd3173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd3173;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 25;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 25;
	mov.b64 	%rd3182, {%r3574, %r3573};
	xor.b64  	%rd3183, %rd3182, %rd3181;
	add.s64 	%rd3184, %rd3174, %rd3175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3575}, %rd3175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3576,%dummy}, %rd3175;
	}
	shf.l.wrap.b32 	%r3577, %r3576, %r3575, 30;
	shf.l.wrap.b32 	%r3578, %r3575, %r3576, 30;
	mov.b64 	%rd3185, {%r3578, %r3577};
	xor.b64  	%rd3186, %rd3185, %rd3184;
	add.s64 	%rd3187, %rd3176, %rd3178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3579,%dummy}, %rd3178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3580}, %rd3178;
	}
	shf.r.wrap.b32 	%r3581, %r3580, %r3579, 30;
	shf.r.wrap.b32 	%r3582, %r3579, %r3580, 30;
	mov.b64 	%rd3188, {%r3582, %r3581};
	xor.b64  	%rd3189, %rd3188, %rd3187;
	add.s64 	%rd3190, %rd3109, %rd3160;
	add.s64 	%rd3191, %rd3190, %rd3180;
	add.s64 	%rd3192, %rd3191, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3583}, %rd3180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3584,%dummy}, %rd3180;
	}
	shf.l.wrap.b32 	%r3585, %r3584, %r3583, 24;
	shf.l.wrap.b32 	%r3586, %r3583, %r3584, 24;
	mov.b64 	%rd3193, {%r3586, %r3585};
	xor.b64  	%rd3194, %rd3193, %rd3192;
	add.s64 	%rd3195, %rd3183, %rd3184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd3183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3588,%dummy}, %rd3183;
	}
	shf.l.wrap.b32 	%r3589, %r3588, %r3587, 13;
	shf.l.wrap.b32 	%r3590, %r3587, %r3588, 13;
	mov.b64 	%rd3196, {%r3590, %r3589};
	xor.b64  	%rd3197, %rd3196, %rd3195;
	add.s64 	%rd3198, %rd3194, %rd3187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3591,%dummy}, %rd3194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3592}, %rd3194;
	}
	shf.r.wrap.b32 	%r3593, %r3592, %r3591, 14;
	shf.r.wrap.b32 	%r3594, %r3591, %r3592, 14;
	mov.b64 	%rd3199, {%r3594, %r3593};
	xor.b64  	%rd3200, %rd3199, %rd3198;
	add.s64 	%rd3201, %rd3189, %rd3192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd3189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3596,%dummy}, %rd3189;
	}
	shf.l.wrap.b32 	%r3597, %r3596, %r3595, 10;
	shf.l.wrap.b32 	%r3598, %r3595, %r3596, 10;
	mov.b64 	%rd3202, {%r3598, %r3597};
	xor.b64  	%rd3203, %rd3202, %rd3201;
	add.s64 	%rd3204, %rd3186, %rd3181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3599}, %rd3186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3600,%dummy}, %rd3186;
	}
	shf.l.wrap.b32 	%r3601, %r3600, %r3599, 17;
	shf.l.wrap.b32 	%r3602, %r3599, %r3600, 17;
	mov.b64 	%rd3205, {%r3602, %r3601};
	xor.b64  	%rd3206, %rd3205, %rd3204;
	add.s64 	%rd3207, %rd3198, %rd3197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd3197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3604,%dummy}, %rd3197;
	}
	shf.l.wrap.b32 	%r3605, %r3604, %r3603, 25;
	shf.l.wrap.b32 	%r3606, %r3603, %r3604, 25;
	mov.b64 	%rd3208, {%r3606, %r3605};
	xor.b64  	%rd3209, %rd3208, %rd3207;
	add.s64 	%rd3210, %rd3206, %rd3201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3607}, %rd3206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3608,%dummy}, %rd3206;
	}
	shf.l.wrap.b32 	%r3609, %r3608, %r3607, 29;
	shf.l.wrap.b32 	%r3610, %r3607, %r3608, 29;
	mov.b64 	%rd3211, {%r3610, %r3609};
	xor.b64  	%rd3212, %rd3211, %rd3210;
	add.s64 	%rd3213, %rd3203, %rd3204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd3203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd3203;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 25;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 25;
	mov.b64 	%rd3214, {%r3614, %r3613};
	xor.b64  	%rd3215, %rd3214, %rd3213;
	add.s64 	%rd3216, %rd3200, %rd3195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3615,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3616}, %rd3200;
	}
	shf.r.wrap.b32 	%r3617, %r3616, %r3615, 21;
	shf.r.wrap.b32 	%r3618, %r3615, %r3616, 21;
	mov.b64 	%rd3217, {%r3618, %r3617};
	xor.b64  	%rd3218, %rd3217, %rd3216;
	add.s64 	%rd3219, %rd3210, %rd3209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3619}, %rd3209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3620,%dummy}, %rd3209;
	}
	shf.l.wrap.b32 	%r3621, %r3620, %r3619, 8;
	shf.l.wrap.b32 	%r3622, %r3619, %r3620, 8;
	mov.b64 	%rd3220, {%r3622, %r3621};
	xor.b64  	%rd3221, %rd3220, %rd3219;
	add.s64 	%rd3222, %rd3218, %rd3213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3623,%dummy}, %rd3218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3624}, %rd3218;
	}
	shf.r.wrap.b32 	%r3625, %r3624, %r3623, 29;
	shf.r.wrap.b32 	%r3626, %r3623, %r3624, 29;
	mov.b64 	%rd3223, {%r3626, %r3625};
	xor.b64  	%rd3224, %rd3223, %rd3222;
	add.s64 	%rd3225, %rd3215, %rd3216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3627,%dummy}, %rd3215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3628}, %rd3215;
	}
	shf.r.wrap.b32 	%r3629, %r3628, %r3627, 8;
	shf.r.wrap.b32 	%r3630, %r3627, %r3628, 8;
	mov.b64 	%rd3226, {%r3630, %r3629};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	add.s64 	%rd3228, %rd3212, %rd3207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3631}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3632,%dummy}, %rd3212;
	}
	shf.l.wrap.b32 	%r3633, %r3632, %r3631, 22;
	shf.l.wrap.b32 	%r3634, %r3631, %r3632, 22;
	mov.b64 	%rd3229, {%r3634, %r3633};
	xor.b64  	%rd3230, %rd3229, %rd3228;
	add.s64 	%rd3231, %rd3112, %rd3222;
	add.s64 	%rd3232, %rd3113, %rd3221;
	add.s64 	%rd3233, %rd3106, %rd3225;
	add.s64 	%rd3234, %rd3107, %rd3230;
	add.s64 	%rd3235, %rd3108, %rd3228;
	add.s64 	%rd3236, %rd3109, %rd3227;
	add.s64 	%rd3237, %rd3236, -72057594037927928;
	add.s64 	%rd3238, %rd3121, %rd3219;
	add.s64 	%rd3239, %rd3224, %rd3110;
	add.s64 	%rd3240, %rd3239, 2;
	add.s64 	%rd3241, %rd3238, %rd3240;
	add.s64 	%rd3242, %rd3231, %rd3232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3635,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3636}, %rd3232;
	}
	shf.r.wrap.b32 	%r3637, %r3636, %r3635, 18;
	shf.r.wrap.b32 	%r3638, %r3635, %r3636, 18;
	mov.b64 	%rd3243, {%r3638, %r3637};
	xor.b64  	%rd3244, %rd3243, %rd3242;
	add.s64 	%rd3245, %rd3233, %rd3234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3639,%dummy}, %rd3234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3640}, %rd3234;
	}
	shf.r.wrap.b32 	%r3641, %r3640, %r3639, 28;
	shf.r.wrap.b32 	%r3642, %r3639, %r3640, 28;
	mov.b64 	%rd3246, {%r3642, %r3641};
	xor.b64  	%rd3247, %rd3246, %rd3245;
	add.s64 	%rd3248, %rd3235, %rd3237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3644,%dummy}, %rd3237;
	}
	shf.l.wrap.b32 	%r3645, %r3644, %r3643, 19;
	shf.l.wrap.b32 	%r3646, %r3643, %r3644, 19;
	mov.b64 	%rd3249, {%r3646, %r3645};
	xor.b64  	%rd3250, %rd3249, %rd3248;
	add.s64 	%rd3251, %rd3241, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3647,%dummy}, %rd3240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3648}, %rd3240;
	}
	shf.r.wrap.b32 	%r3649, %r3648, %r3647, 27;
	shf.r.wrap.b32 	%r3650, %r3647, %r3648, 27;
	mov.b64 	%rd3252, {%r3650, %r3649};
	xor.b64  	%rd3253, %rd3252, %rd3251;
	add.s64 	%rd3254, %rd3244, %rd3245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3651,%dummy}, %rd3244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3652}, %rd3244;
	}
	shf.r.wrap.b32 	%r3653, %r3652, %r3651, 31;
	shf.r.wrap.b32 	%r3654, %r3651, %r3652, 31;
	mov.b64 	%rd3255, {%r3654, %r3653};
	xor.b64  	%rd3256, %rd3255, %rd3254;
	add.s64 	%rd3257, %rd3253, %rd3248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3655}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd3253;
	}
	shf.l.wrap.b32 	%r3657, %r3656, %r3655, 27;
	shf.l.wrap.b32 	%r3658, %r3655, %r3656, 27;
	mov.b64 	%rd3258, {%r3658, %r3657};
	xor.b64  	%rd3259, %rd3258, %rd3257;
	add.s64 	%rd3260, %rd3250, %rd3251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3660,%dummy}, %rd3250;
	}
	shf.l.wrap.b32 	%r3661, %r3660, %r3659, 14;
	shf.l.wrap.b32 	%r3662, %r3659, %r3660, 14;
	mov.b64 	%rd3261, {%r3662, %r3661};
	xor.b64  	%rd3262, %rd3261, %rd3260;
	add.s64 	%rd3263, %rd3247, %rd3242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3663,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3664}, %rd3247;
	}
	shf.r.wrap.b32 	%r3665, %r3664, %r3663, 22;
	shf.r.wrap.b32 	%r3666, %r3663, %r3664, 22;
	mov.b64 	%rd3264, {%r3666, %r3665};
	xor.b64  	%rd3265, %rd3264, %rd3263;
	add.s64 	%rd3266, %rd3257, %rd3256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3667}, %rd3256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3668,%dummy}, %rd3256;
	}
	shf.l.wrap.b32 	%r3669, %r3668, %r3667, 17;
	shf.l.wrap.b32 	%r3670, %r3667, %r3668, 17;
	mov.b64 	%rd3267, {%r3670, %r3669};
	xor.b64  	%rd3268, %rd3267, %rd3266;
	add.s64 	%rd3269, %rd3265, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3671,%dummy}, %rd3265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3672}, %rd3265;
	}
	shf.r.wrap.b32 	%r3673, %r3672, %r3671, 15;
	shf.r.wrap.b32 	%r3674, %r3671, %r3672, 15;
	mov.b64 	%rd3270, {%r3674, %r3673};
	xor.b64  	%rd3271, %rd3270, %rd3269;
	add.s64 	%rd3272, %rd3262, %rd3263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd3262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd3262;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 28;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 28;
	mov.b64 	%rd3273, {%r3678, %r3677};
	xor.b64  	%rd3274, %rd3273, %rd3272;
	add.s64 	%rd3275, %rd3259, %rd3254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3679,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3680}, %rd3259;
	}
	shf.r.wrap.b32 	%r3681, %r3680, %r3679, 25;
	shf.r.wrap.b32 	%r3682, %r3679, %r3680, 25;
	mov.b64 	%rd3276, {%r3682, %r3681};
	xor.b64  	%rd3277, %rd3276, %rd3275;
	add.s64 	%rd3278, %rd3269, %rd3268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd3268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd3268;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 20;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 20;
	mov.b64 	%rd3279, {%r3686, %r3685};
	xor.b64  	%rd3280, %rd3279, %rd3278;
	add.s64 	%rd3281, %rd3277, %rd3272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3687}, %rd3277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3688,%dummy}, %rd3277;
	}
	shf.l.wrap.b32 	%r3689, %r3688, %r3687, 9;
	shf.l.wrap.b32 	%r3690, %r3687, %r3688, 9;
	mov.b64 	%rd3282, {%r3690, %r3689};
	xor.b64  	%rd3283, %rd3282, %rd3281;
	add.s64 	%rd3284, %rd3274, %rd3275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3691,%dummy}, %rd3274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3692}, %rd3274;
	}
	shf.r.wrap.b32 	%r3693, %r3692, %r3691, 10;
	shf.r.wrap.b32 	%r3694, %r3691, %r3692, 10;
	mov.b64 	%rd3285, {%r3694, %r3693};
	xor.b64  	%rd3286, %rd3285, %rd3284;
	add.s64 	%rd3287, %rd3271, %rd3266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3695,%dummy}, %rd3271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3696}, %rd3271;
	}
	shf.r.wrap.b32 	%r3697, %r3696, %r3695, 8;
	shf.r.wrap.b32 	%r3698, %r3695, %r3696, 8;
	mov.b64 	%rd3288, {%r3698, %r3697};
	xor.b64  	%rd3289, %rd3288, %rd3287;
	add.s64 	%rd3290, %rd3113, %rd3281;
	add.s64 	%rd3291, %rd3106, %rd3280;
	add.s64 	%rd3292, %rd3107, %rd3284;
	add.s64 	%rd3293, %rd3108, %rd3289;
	add.s64 	%rd3294, %rd3109, %rd3287;
	add.s64 	%rd3295, %rd3121, %rd3286;
	add.s64 	%rd3296, %rd3295, 8;
	add.s64 	%rd3297, %rd3283, %rd3111;
	add.s64 	%rd3298, %rd3297, 3;
	add.s64 	%rd3299, %rd3290, %rd3291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3699,%dummy}, %rd3291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3700}, %rd3291;
	}
	shf.r.wrap.b32 	%r3701, %r3700, %r3699, 25;
	shf.r.wrap.b32 	%r3702, %r3699, %r3700, 25;
	mov.b64 	%rd3300, {%r3702, %r3701};
	xor.b64  	%rd3301, %rd3300, %rd3299;
	add.s64 	%rd3302, %rd3292, %rd3293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3703}, %rd3293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3704,%dummy}, %rd3293;
	}
	shf.l.wrap.b32 	%r3705, %r3704, %r3703, 30;
	shf.l.wrap.b32 	%r3706, %r3703, %r3704, 30;
	mov.b64 	%rd3303, {%r3706, %r3705};
	xor.b64  	%rd3304, %rd3303, %rd3302;
	add.s64 	%rd3305, %rd3294, %rd3296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd3296;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 30;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 30;
	mov.b64 	%rd3306, {%r3710, %r3709};
	xor.b64  	%rd3307, %rd3306, %rd3305;
	add.s64 	%rd3308, %rd3110, %rd3278;
	add.s64 	%rd3309, %rd3308, %rd3298;
	add.s64 	%rd3310, %rd3309, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3711}, %rd3298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3712,%dummy}, %rd3298;
	}
	shf.l.wrap.b32 	%r3713, %r3712, %r3711, 24;
	shf.l.wrap.b32 	%r3714, %r3711, %r3712, 24;
	mov.b64 	%rd3311, {%r3714, %r3713};
	xor.b64  	%rd3312, %rd3311, %rd3310;
	add.s64 	%rd3313, %rd3301, %rd3302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3715}, %rd3301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3716,%dummy}, %rd3301;
	}
	shf.l.wrap.b32 	%r3717, %r3716, %r3715, 13;
	shf.l.wrap.b32 	%r3718, %r3715, %r3716, 13;
	mov.b64 	%rd3314, {%r3718, %r3717};
	xor.b64  	%rd3315, %rd3314, %rd3313;
	add.s64 	%rd3316, %rd3312, %rd3305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3719,%dummy}, %rd3312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3720}, %rd3312;
	}
	shf.r.wrap.b32 	%r3721, %r3720, %r3719, 14;
	shf.r.wrap.b32 	%r3722, %r3719, %r3720, 14;
	mov.b64 	%rd3317, {%r3722, %r3721};
	xor.b64  	%rd3318, %rd3317, %rd3316;
	add.s64 	%rd3319, %rd3307, %rd3310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3723}, %rd3307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd3307;
	}
	shf.l.wrap.b32 	%r3725, %r3724, %r3723, 10;
	shf.l.wrap.b32 	%r3726, %r3723, %r3724, 10;
	mov.b64 	%rd3320, {%r3726, %r3725};
	xor.b64  	%rd3321, %rd3320, %rd3319;
	add.s64 	%rd3322, %rd3304, %rd3299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3727}, %rd3304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3728,%dummy}, %rd3304;
	}
	shf.l.wrap.b32 	%r3729, %r3728, %r3727, 17;
	shf.l.wrap.b32 	%r3730, %r3727, %r3728, 17;
	mov.b64 	%rd3323, {%r3730, %r3729};
	xor.b64  	%rd3324, %rd3323, %rd3322;
	add.s64 	%rd3325, %rd3316, %rd3315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd3315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3732,%dummy}, %rd3315;
	}
	shf.l.wrap.b32 	%r3733, %r3732, %r3731, 25;
	shf.l.wrap.b32 	%r3734, %r3731, %r3732, 25;
	mov.b64 	%rd3326, {%r3734, %r3733};
	xor.b64  	%rd3327, %rd3326, %rd3325;
	add.s64 	%rd3328, %rd3324, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3735}, %rd3324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3736,%dummy}, %rd3324;
	}
	shf.l.wrap.b32 	%r3737, %r3736, %r3735, 29;
	shf.l.wrap.b32 	%r3738, %r3735, %r3736, 29;
	mov.b64 	%rd3329, {%r3738, %r3737};
	xor.b64  	%rd3330, %rd3329, %rd3328;
	add.s64 	%rd3331, %rd3321, %rd3322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3739,%dummy}, %rd3321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3740}, %rd3321;
	}
	shf.r.wrap.b32 	%r3741, %r3740, %r3739, 25;
	shf.r.wrap.b32 	%r3742, %r3739, %r3740, 25;
	mov.b64 	%rd3332, {%r3742, %r3741};
	xor.b64  	%rd3333, %rd3332, %rd3331;
	add.s64 	%rd3334, %rd3318, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3743,%dummy}, %rd3318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3744}, %rd3318;
	}
	shf.r.wrap.b32 	%r3745, %r3744, %r3743, 21;
	shf.r.wrap.b32 	%r3746, %r3743, %r3744, 21;
	mov.b64 	%rd3335, {%r3746, %r3745};
	xor.b64  	%rd3336, %rd3335, %rd3334;
	add.s64 	%rd3337, %rd3328, %rd3327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3747}, %rd3327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3748,%dummy}, %rd3327;
	}
	shf.l.wrap.b32 	%r3749, %r3748, %r3747, 8;
	shf.l.wrap.b32 	%r3750, %r3747, %r3748, 8;
	mov.b64 	%rd3338, {%r3750, %r3749};
	xor.b64  	%rd3339, %rd3338, %rd3337;
	add.s64 	%rd3340, %rd3336, %rd3331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3751,%dummy}, %rd3336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3752}, %rd3336;
	}
	shf.r.wrap.b32 	%r3753, %r3752, %r3751, 29;
	shf.r.wrap.b32 	%r3754, %r3751, %r3752, 29;
	mov.b64 	%rd3341, {%r3754, %r3753};
	xor.b64  	%rd3342, %rd3341, %rd3340;
	add.s64 	%rd3343, %rd3333, %rd3334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3755,%dummy}, %rd3333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3756}, %rd3333;
	}
	shf.r.wrap.b32 	%r3757, %r3756, %r3755, 8;
	shf.r.wrap.b32 	%r3758, %r3755, %r3756, 8;
	mov.b64 	%rd3344, {%r3758, %r3757};
	xor.b64  	%rd3345, %rd3344, %rd3343;
	add.s64 	%rd3346, %rd3330, %rd3325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3759}, %rd3330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3760,%dummy}, %rd3330;
	}
	shf.l.wrap.b32 	%r3761, %r3760, %r3759, 22;
	shf.l.wrap.b32 	%r3762, %r3759, %r3760, 22;
	mov.b64 	%rd3347, {%r3762, %r3761};
	xor.b64  	%rd3348, %rd3347, %rd3346;
	add.s64 	%rd3349, %rd3106, %rd3340;
	add.s64 	%rd3350, %rd3107, %rd3339;
	add.s64 	%rd3351, %rd3108, %rd3343;
	add.s64 	%rd3352, %rd3109, %rd3348;
	add.s64 	%rd3353, %rd3121, %rd3346;
	add.s64 	%rd3354, %rd3110, %rd3345;
	add.s64 	%rd3355, %rd3354, -72057594037927936;
	add.s64 	%rd3356, %rd3111, %rd3337;
	add.s64 	%rd3357, %rd3342, %rd3112;
	add.s64 	%rd3358, %rd3357, 4;
	add.s64 	%rd3359, %rd3356, %rd3358;
	add.s64 	%rd3360, %rd3349, %rd3350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3763,%dummy}, %rd3350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3764}, %rd3350;
	}
	shf.r.wrap.b32 	%r3765, %r3764, %r3763, 18;
	shf.r.wrap.b32 	%r3766, %r3763, %r3764, 18;
	mov.b64 	%rd3361, {%r3766, %r3765};
	xor.b64  	%rd3362, %rd3361, %rd3360;
	add.s64 	%rd3363, %rd3351, %rd3352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3767,%dummy}, %rd3352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3768}, %rd3352;
	}
	shf.r.wrap.b32 	%r3769, %r3768, %r3767, 28;
	shf.r.wrap.b32 	%r3770, %r3767, %r3768, 28;
	mov.b64 	%rd3364, {%r3770, %r3769};
	xor.b64  	%rd3365, %rd3364, %rd3363;
	add.s64 	%rd3366, %rd3353, %rd3355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3771}, %rd3355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd3355;
	}
	shf.l.wrap.b32 	%r3773, %r3772, %r3771, 19;
	shf.l.wrap.b32 	%r3774, %r3771, %r3772, 19;
	mov.b64 	%rd3367, {%r3774, %r3773};
	xor.b64  	%rd3368, %rd3367, %rd3366;
	add.s64 	%rd3369, %rd3359, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3775,%dummy}, %rd3358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3776}, %rd3358;
	}
	shf.r.wrap.b32 	%r3777, %r3776, %r3775, 27;
	shf.r.wrap.b32 	%r3778, %r3775, %r3776, 27;
	mov.b64 	%rd3370, {%r3778, %r3777};
	xor.b64  	%rd3371, %rd3370, %rd3369;
	add.s64 	%rd3372, %rd3362, %rd3363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd3362;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 31;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 31;
	mov.b64 	%rd3373, {%r3782, %r3781};
	xor.b64  	%rd3374, %rd3373, %rd3372;
	add.s64 	%rd3375, %rd3371, %rd3366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3783}, %rd3371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3784,%dummy}, %rd3371;
	}
	shf.l.wrap.b32 	%r3785, %r3784, %r3783, 27;
	shf.l.wrap.b32 	%r3786, %r3783, %r3784, 27;
	mov.b64 	%rd3376, {%r3786, %r3785};
	xor.b64  	%rd3377, %rd3376, %rd3375;
	add.s64 	%rd3378, %rd3368, %rd3369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3788,%dummy}, %rd3368;
	}
	shf.l.wrap.b32 	%r3789, %r3788, %r3787, 14;
	shf.l.wrap.b32 	%r3790, %r3787, %r3788, 14;
	mov.b64 	%rd3379, {%r3790, %r3789};
	xor.b64  	%rd3380, %rd3379, %rd3378;
	add.s64 	%rd3381, %rd3365, %rd3360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3791,%dummy}, %rd3365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3792}, %rd3365;
	}
	shf.r.wrap.b32 	%r3793, %r3792, %r3791, 22;
	shf.r.wrap.b32 	%r3794, %r3791, %r3792, 22;
	mov.b64 	%rd3382, {%r3794, %r3793};
	xor.b64  	%rd3383, %rd3382, %rd3381;
	add.s64 	%rd3384, %rd3375, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3796,%dummy}, %rd3374;
	}
	shf.l.wrap.b32 	%r3797, %r3796, %r3795, 17;
	shf.l.wrap.b32 	%r3798, %r3795, %r3796, 17;
	mov.b64 	%rd3385, {%r3798, %r3797};
	xor.b64  	%rd3386, %rd3385, %rd3384;
	add.s64 	%rd3387, %rd3383, %rd3378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3799,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3800}, %rd3383;
	}
	shf.r.wrap.b32 	%r3801, %r3800, %r3799, 15;
	shf.r.wrap.b32 	%r3802, %r3799, %r3800, 15;
	mov.b64 	%rd3388, {%r3802, %r3801};
	xor.b64  	%rd3389, %rd3388, %rd3387;
	add.s64 	%rd3390, %rd3380, %rd3381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3803,%dummy}, %rd3380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3804}, %rd3380;
	}
	shf.r.wrap.b32 	%r3805, %r3804, %r3803, 28;
	shf.r.wrap.b32 	%r3806, %r3803, %r3804, 28;
	mov.b64 	%rd3391, {%r3806, %r3805};
	xor.b64  	%rd3392, %rd3391, %rd3390;
	add.s64 	%rd3393, %rd3377, %rd3372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3807,%dummy}, %rd3377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3808}, %rd3377;
	}
	shf.r.wrap.b32 	%r3809, %r3808, %r3807, 25;
	shf.r.wrap.b32 	%r3810, %r3807, %r3808, 25;
	mov.b64 	%rd3394, {%r3810, %r3809};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	add.s64 	%rd3396, %rd3387, %rd3386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3811,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3812}, %rd3386;
	}
	shf.r.wrap.b32 	%r3813, %r3812, %r3811, 20;
	shf.r.wrap.b32 	%r3814, %r3811, %r3812, 20;
	mov.b64 	%rd3397, {%r3814, %r3813};
	xor.b64  	%rd3398, %rd3397, %rd3396;
	add.s64 	%rd3399, %rd3395, %rd3390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3815}, %rd3395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3816,%dummy}, %rd3395;
	}
	shf.l.wrap.b32 	%r3817, %r3816, %r3815, 9;
	shf.l.wrap.b32 	%r3818, %r3815, %r3816, 9;
	mov.b64 	%rd3400, {%r3818, %r3817};
	xor.b64  	%rd3401, %rd3400, %rd3399;
	add.s64 	%rd3402, %rd3392, %rd3393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3819,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3820}, %rd3392;
	}
	shf.r.wrap.b32 	%r3821, %r3820, %r3819, 10;
	shf.r.wrap.b32 	%r3822, %r3819, %r3820, 10;
	mov.b64 	%rd3403, {%r3822, %r3821};
	xor.b64  	%rd3404, %rd3403, %rd3402;
	add.s64 	%rd3405, %rd3389, %rd3384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3823,%dummy}, %rd3389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3824}, %rd3389;
	}
	shf.r.wrap.b32 	%r3825, %r3824, %r3823, 8;
	shf.r.wrap.b32 	%r3826, %r3823, %r3824, 8;
	mov.b64 	%rd3406, {%r3826, %r3825};
	xor.b64  	%rd3407, %rd3406, %rd3405;
	add.s64 	%rd3408, %rd3107, %rd3399;
	add.s64 	%rd3409, %rd3108, %rd3398;
	add.s64 	%rd3410, %rd3109, %rd3402;
	add.s64 	%rd3411, %rd3121, %rd3407;
	add.s64 	%rd3412, %rd3110, %rd3405;
	add.s64 	%rd3413, %rd3111, %rd3404;
	add.s64 	%rd3414, %rd3413, -72057594037927928;
	add.s64 	%rd3415, %rd3401, %rd3113;
	add.s64 	%rd3416, %rd3415, 5;
	add.s64 	%rd3417, %rd3408, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3827,%dummy}, %rd3409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3828}, %rd3409;
	}
	shf.r.wrap.b32 	%r3829, %r3828, %r3827, 25;
	shf.r.wrap.b32 	%r3830, %r3827, %r3828, 25;
	mov.b64 	%rd3418, {%r3830, %r3829};
	xor.b64  	%rd3419, %rd3418, %rd3417;
	add.s64 	%rd3420, %rd3410, %rd3411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3831}, %rd3411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3832,%dummy}, %rd3411;
	}
	shf.l.wrap.b32 	%r3833, %r3832, %r3831, 30;
	shf.l.wrap.b32 	%r3834, %r3831, %r3832, 30;
	mov.b64 	%rd3421, {%r3834, %r3833};
	xor.b64  	%rd3422, %rd3421, %rd3420;
	add.s64 	%rd3423, %rd3412, %rd3414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3835,%dummy}, %rd3414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3836}, %rd3414;
	}
	shf.r.wrap.b32 	%r3837, %r3836, %r3835, 30;
	shf.r.wrap.b32 	%r3838, %r3835, %r3836, 30;
	mov.b64 	%rd3424, {%r3838, %r3837};
	xor.b64  	%rd3425, %rd3424, %rd3423;
	add.s64 	%rd3426, %rd3112, %rd3396;
	add.s64 	%rd3427, %rd3426, %rd3416;
	add.s64 	%rd3428, %rd3427, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3839}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3840,%dummy}, %rd3416;
	}
	shf.l.wrap.b32 	%r3841, %r3840, %r3839, 24;
	shf.l.wrap.b32 	%r3842, %r3839, %r3840, 24;
	mov.b64 	%rd3429, {%r3842, %r3841};
	xor.b64  	%rd3430, %rd3429, %rd3428;
	add.s64 	%rd3431, %rd3419, %rd3420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3843}, %rd3419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3844,%dummy}, %rd3419;
	}
	shf.l.wrap.b32 	%r3845, %r3844, %r3843, 13;
	shf.l.wrap.b32 	%r3846, %r3843, %r3844, 13;
	mov.b64 	%rd3432, {%r3846, %r3845};
	xor.b64  	%rd3433, %rd3432, %rd3431;
	add.s64 	%rd3434, %rd3430, %rd3423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3847,%dummy}, %rd3430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3848}, %rd3430;
	}
	shf.r.wrap.b32 	%r3849, %r3848, %r3847, 14;
	shf.r.wrap.b32 	%r3850, %r3847, %r3848, 14;
	mov.b64 	%rd3435, {%r3850, %r3849};
	xor.b64  	%rd3436, %rd3435, %rd3434;
	add.s64 	%rd3437, %rd3425, %rd3428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3851}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3852,%dummy}, %rd3425;
	}
	shf.l.wrap.b32 	%r3853, %r3852, %r3851, 10;
	shf.l.wrap.b32 	%r3854, %r3851, %r3852, 10;
	mov.b64 	%rd3438, {%r3854, %r3853};
	xor.b64  	%rd3439, %rd3438, %rd3437;
	add.s64 	%rd3440, %rd3422, %rd3417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3855}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3856,%dummy}, %rd3422;
	}
	shf.l.wrap.b32 	%r3857, %r3856, %r3855, 17;
	shf.l.wrap.b32 	%r3858, %r3855, %r3856, 17;
	mov.b64 	%rd3441, {%r3858, %r3857};
	xor.b64  	%rd3442, %rd3441, %rd3440;
	add.s64 	%rd3443, %rd3434, %rd3433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3859}, %rd3433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3860,%dummy}, %rd3433;
	}
	shf.l.wrap.b32 	%r3861, %r3860, %r3859, 25;
	shf.l.wrap.b32 	%r3862, %r3859, %r3860, 25;
	mov.b64 	%rd3444, {%r3862, %r3861};
	xor.b64  	%rd3445, %rd3444, %rd3443;
	add.s64 	%rd3446, %rd3442, %rd3437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3863}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd3442;
	}
	shf.l.wrap.b32 	%r3865, %r3864, %r3863, 29;
	shf.l.wrap.b32 	%r3866, %r3863, %r3864, 29;
	mov.b64 	%rd3447, {%r3866, %r3865};
	xor.b64  	%rd3448, %rd3447, %rd3446;
	add.s64 	%rd3449, %rd3439, %rd3440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3867,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3868}, %rd3439;
	}
	shf.r.wrap.b32 	%r3869, %r3868, %r3867, 25;
	shf.r.wrap.b32 	%r3870, %r3867, %r3868, 25;
	mov.b64 	%rd3450, {%r3870, %r3869};
	xor.b64  	%rd3451, %rd3450, %rd3449;
	add.s64 	%rd3452, %rd3436, %rd3431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3871,%dummy}, %rd3436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3872}, %rd3436;
	}
	shf.r.wrap.b32 	%r3873, %r3872, %r3871, 21;
	shf.r.wrap.b32 	%r3874, %r3871, %r3872, 21;
	mov.b64 	%rd3453, {%r3874, %r3873};
	xor.b64  	%rd3454, %rd3453, %rd3452;
	add.s64 	%rd3455, %rd3446, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3875}, %rd3445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3876,%dummy}, %rd3445;
	}
	shf.l.wrap.b32 	%r3877, %r3876, %r3875, 8;
	shf.l.wrap.b32 	%r3878, %r3875, %r3876, 8;
	mov.b64 	%rd3456, {%r3878, %r3877};
	xor.b64  	%rd3457, %rd3456, %rd3455;
	add.s64 	%rd3458, %rd3454, %rd3449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3879,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3880}, %rd3454;
	}
	shf.r.wrap.b32 	%r3881, %r3880, %r3879, 29;
	shf.r.wrap.b32 	%r3882, %r3879, %r3880, 29;
	mov.b64 	%rd3459, {%r3882, %r3881};
	xor.b64  	%rd3460, %rd3459, %rd3458;
	add.s64 	%rd3461, %rd3451, %rd3452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd3451;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 8;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 8;
	mov.b64 	%rd3462, {%r3886, %r3885};
	xor.b64  	%rd3463, %rd3462, %rd3461;
	add.s64 	%rd3464, %rd3448, %rd3443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3887}, %rd3448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3888,%dummy}, %rd3448;
	}
	shf.l.wrap.b32 	%r3889, %r3888, %r3887, 22;
	shf.l.wrap.b32 	%r3890, %r3887, %r3888, 22;
	mov.b64 	%rd3465, {%r3890, %r3889};
	xor.b64  	%rd3466, %rd3465, %rd3464;
	add.s64 	%rd3467, %rd3108, %rd3458;
	add.s64 	%rd3468, %rd3109, %rd3457;
	add.s64 	%rd3469, %rd3121, %rd3461;
	add.s64 	%rd3470, %rd3110, %rd3466;
	add.s64 	%rd3471, %rd3111, %rd3464;
	add.s64 	%rd3472, %rd3112, %rd3463;
	add.s64 	%rd3473, %rd3472, 8;
	add.s64 	%rd3474, %rd3113, %rd3455;
	add.s64 	%rd3475, %rd3460, %rd3106;
	add.s64 	%rd3476, %rd3475, 6;
	add.s64 	%rd3477, %rd3474, %rd3476;
	add.s64 	%rd3478, %rd3467, %rd3468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd3468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd3468;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 18;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 18;
	mov.b64 	%rd3479, {%r3894, %r3893};
	xor.b64  	%rd3480, %rd3479, %rd3478;
	add.s64 	%rd3481, %rd3469, %rd3470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3895,%dummy}, %rd3470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3896}, %rd3470;
	}
	shf.r.wrap.b32 	%r3897, %r3896, %r3895, 28;
	shf.r.wrap.b32 	%r3898, %r3895, %r3896, 28;
	mov.b64 	%rd3482, {%r3898, %r3897};
	xor.b64  	%rd3483, %rd3482, %rd3481;
	add.s64 	%rd3484, %rd3471, %rd3473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd3473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3900,%dummy}, %rd3473;
	}
	shf.l.wrap.b32 	%r3901, %r3900, %r3899, 19;
	shf.l.wrap.b32 	%r3902, %r3899, %r3900, 19;
	mov.b64 	%rd3485, {%r3902, %r3901};
	xor.b64  	%rd3486, %rd3485, %rd3484;
	add.s64 	%rd3487, %rd3477, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3903,%dummy}, %rd3476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3904}, %rd3476;
	}
	shf.r.wrap.b32 	%r3905, %r3904, %r3903, 27;
	shf.r.wrap.b32 	%r3906, %r3903, %r3904, 27;
	mov.b64 	%rd3488, {%r3906, %r3905};
	xor.b64  	%rd3489, %rd3488, %rd3487;
	add.s64 	%rd3490, %rd3480, %rd3481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3907,%dummy}, %rd3480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3908}, %rd3480;
	}
	shf.r.wrap.b32 	%r3909, %r3908, %r3907, 31;
	shf.r.wrap.b32 	%r3910, %r3907, %r3908, 31;
	mov.b64 	%rd3491, {%r3910, %r3909};
	xor.b64  	%rd3492, %rd3491, %rd3490;
	add.s64 	%rd3493, %rd3489, %rd3484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3911}, %rd3489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3912,%dummy}, %rd3489;
	}
	shf.l.wrap.b32 	%r3913, %r3912, %r3911, 27;
	shf.l.wrap.b32 	%r3914, %r3911, %r3912, 27;
	mov.b64 	%rd3494, {%r3914, %r3913};
	xor.b64  	%rd3495, %rd3494, %rd3493;
	add.s64 	%rd3496, %rd3486, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3915}, %rd3486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3916,%dummy}, %rd3486;
	}
	shf.l.wrap.b32 	%r3917, %r3916, %r3915, 14;
	shf.l.wrap.b32 	%r3918, %r3915, %r3916, 14;
	mov.b64 	%rd3497, {%r3918, %r3917};
	xor.b64  	%rd3498, %rd3497, %rd3496;
	add.s64 	%rd3499, %rd3483, %rd3478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3919,%dummy}, %rd3483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3920}, %rd3483;
	}
	shf.r.wrap.b32 	%r3921, %r3920, %r3919, 22;
	shf.r.wrap.b32 	%r3922, %r3919, %r3920, 22;
	mov.b64 	%rd3500, {%r3922, %r3921};
	xor.b64  	%rd3501, %rd3500, %rd3499;
	add.s64 	%rd3502, %rd3493, %rd3492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3923}, %rd3492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3924,%dummy}, %rd3492;
	}
	shf.l.wrap.b32 	%r3925, %r3924, %r3923, 17;
	shf.l.wrap.b32 	%r3926, %r3923, %r3924, 17;
	mov.b64 	%rd3503, {%r3926, %r3925};
	xor.b64  	%rd3504, %rd3503, %rd3502;
	add.s64 	%rd3505, %rd3501, %rd3496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3927,%dummy}, %rd3501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3928}, %rd3501;
	}
	shf.r.wrap.b32 	%r3929, %r3928, %r3927, 15;
	shf.r.wrap.b32 	%r3930, %r3927, %r3928, 15;
	mov.b64 	%rd3506, {%r3930, %r3929};
	xor.b64  	%rd3507, %rd3506, %rd3505;
	add.s64 	%rd3508, %rd3498, %rd3499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3931,%dummy}, %rd3498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3932}, %rd3498;
	}
	shf.r.wrap.b32 	%r3933, %r3932, %r3931, 28;
	shf.r.wrap.b32 	%r3934, %r3931, %r3932, 28;
	mov.b64 	%rd3509, {%r3934, %r3933};
	xor.b64  	%rd3510, %rd3509, %rd3508;
	add.s64 	%rd3511, %rd3495, %rd3490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3935,%dummy}, %rd3495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3936}, %rd3495;
	}
	shf.r.wrap.b32 	%r3937, %r3936, %r3935, 25;
	shf.r.wrap.b32 	%r3938, %r3935, %r3936, 25;
	mov.b64 	%rd3512, {%r3938, %r3937};
	xor.b64  	%rd3513, %rd3512, %rd3511;
	add.s64 	%rd3514, %rd3505, %rd3504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3939,%dummy}, %rd3504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3940}, %rd3504;
	}
	shf.r.wrap.b32 	%r3941, %r3940, %r3939, 20;
	shf.r.wrap.b32 	%r3942, %r3939, %r3940, 20;
	mov.b64 	%rd3515, {%r3942, %r3941};
	xor.b64  	%rd3516, %rd3515, %rd3514;
	add.s64 	%rd3517, %rd3513, %rd3508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3943}, %rd3513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3944,%dummy}, %rd3513;
	}
	shf.l.wrap.b32 	%r3945, %r3944, %r3943, 9;
	shf.l.wrap.b32 	%r3946, %r3943, %r3944, 9;
	mov.b64 	%rd3518, {%r3946, %r3945};
	xor.b64  	%rd3519, %rd3518, %rd3517;
	add.s64 	%rd3520, %rd3510, %rd3511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3947,%dummy}, %rd3510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3948}, %rd3510;
	}
	shf.r.wrap.b32 	%r3949, %r3948, %r3947, 10;
	shf.r.wrap.b32 	%r3950, %r3947, %r3948, 10;
	mov.b64 	%rd3521, {%r3950, %r3949};
	xor.b64  	%rd3522, %rd3521, %rd3520;
	add.s64 	%rd3523, %rd3507, %rd3502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3951,%dummy}, %rd3507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3952}, %rd3507;
	}
	shf.r.wrap.b32 	%r3953, %r3952, %r3951, 8;
	shf.r.wrap.b32 	%r3954, %r3951, %r3952, 8;
	mov.b64 	%rd3524, {%r3954, %r3953};
	xor.b64  	%rd3525, %rd3524, %rd3523;
	add.s64 	%rd3526, %rd3109, %rd3517;
	add.s64 	%rd3527, %rd3121, %rd3516;
	add.s64 	%rd3528, %rd3110, %rd3520;
	add.s64 	%rd3529, %rd3111, %rd3525;
	add.s64 	%rd3530, %rd3112, %rd3523;
	add.s64 	%rd3531, %rd3113, %rd3522;
	add.s64 	%rd3532, %rd3531, -72057594037927936;
	add.s64 	%rd3533, %rd3519, %rd3107;
	add.s64 	%rd3534, %rd3533, 7;
	add.s64 	%rd3535, %rd3526, %rd3527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3955,%dummy}, %rd3527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3956}, %rd3527;
	}
	shf.r.wrap.b32 	%r3957, %r3956, %r3955, 25;
	shf.r.wrap.b32 	%r3958, %r3955, %r3956, 25;
	mov.b64 	%rd3536, {%r3958, %r3957};
	xor.b64  	%rd3537, %rd3536, %rd3535;
	add.s64 	%rd3538, %rd3528, %rd3529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3959}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3960,%dummy}, %rd3529;
	}
	shf.l.wrap.b32 	%r3961, %r3960, %r3959, 30;
	shf.l.wrap.b32 	%r3962, %r3959, %r3960, 30;
	mov.b64 	%rd3539, {%r3962, %r3961};
	xor.b64  	%rd3540, %rd3539, %rd3538;
	add.s64 	%rd3541, %rd3530, %rd3532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3963,%dummy}, %rd3532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3964}, %rd3532;
	}
	shf.r.wrap.b32 	%r3965, %r3964, %r3963, 30;
	shf.r.wrap.b32 	%r3966, %r3963, %r3964, 30;
	mov.b64 	%rd3542, {%r3966, %r3965};
	xor.b64  	%rd3543, %rd3542, %rd3541;
	add.s64 	%rd3544, %rd3106, %rd3514;
	add.s64 	%rd3545, %rd3544, %rd3534;
	add.s64 	%rd3546, %rd3545, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3967}, %rd3534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd3534;
	}
	shf.l.wrap.b32 	%r3969, %r3968, %r3967, 24;
	shf.l.wrap.b32 	%r3970, %r3967, %r3968, 24;
	mov.b64 	%rd3547, {%r3970, %r3969};
	xor.b64  	%rd3548, %rd3547, %rd3546;
	add.s64 	%rd3549, %rd3537, %rd3538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3971}, %rd3537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3972,%dummy}, %rd3537;
	}
	shf.l.wrap.b32 	%r3973, %r3972, %r3971, 13;
	shf.l.wrap.b32 	%r3974, %r3971, %r3972, 13;
	mov.b64 	%rd3550, {%r3974, %r3973};
	xor.b64  	%rd3551, %rd3550, %rd3549;
	add.s64 	%rd3552, %rd3548, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3975,%dummy}, %rd3548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3976}, %rd3548;
	}
	shf.r.wrap.b32 	%r3977, %r3976, %r3975, 14;
	shf.r.wrap.b32 	%r3978, %r3975, %r3976, 14;
	mov.b64 	%rd3553, {%r3978, %r3977};
	xor.b64  	%rd3554, %rd3553, %rd3552;
	add.s64 	%rd3555, %rd3543, %rd3546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3979}, %rd3543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3980,%dummy}, %rd3543;
	}
	shf.l.wrap.b32 	%r3981, %r3980, %r3979, 10;
	shf.l.wrap.b32 	%r3982, %r3979, %r3980, 10;
	mov.b64 	%rd3556, {%r3982, %r3981};
	xor.b64  	%rd3557, %rd3556, %rd3555;
	add.s64 	%rd3558, %rd3540, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3983}, %rd3540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3984,%dummy}, %rd3540;
	}
	shf.l.wrap.b32 	%r3985, %r3984, %r3983, 17;
	shf.l.wrap.b32 	%r3986, %r3983, %r3984, 17;
	mov.b64 	%rd3559, {%r3986, %r3985};
	xor.b64  	%rd3560, %rd3559, %rd3558;
	add.s64 	%rd3561, %rd3552, %rd3551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3987}, %rd3551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3988,%dummy}, %rd3551;
	}
	shf.l.wrap.b32 	%r3989, %r3988, %r3987, 25;
	shf.l.wrap.b32 	%r3990, %r3987, %r3988, 25;
	mov.b64 	%rd3562, {%r3990, %r3989};
	xor.b64  	%rd3563, %rd3562, %rd3561;
	add.s64 	%rd3564, %rd3560, %rd3555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3991}, %rd3560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3992,%dummy}, %rd3560;
	}
	shf.l.wrap.b32 	%r3993, %r3992, %r3991, 29;
	shf.l.wrap.b32 	%r3994, %r3991, %r3992, 29;
	mov.b64 	%rd3565, {%r3994, %r3993};
	xor.b64  	%rd3566, %rd3565, %rd3564;
	add.s64 	%rd3567, %rd3557, %rd3558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3995,%dummy}, %rd3557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3996}, %rd3557;
	}
	shf.r.wrap.b32 	%r3997, %r3996, %r3995, 25;
	shf.r.wrap.b32 	%r3998, %r3995, %r3996, 25;
	mov.b64 	%rd3568, {%r3998, %r3997};
	xor.b64  	%rd3569, %rd3568, %rd3567;
	add.s64 	%rd3570, %rd3554, %rd3549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3999,%dummy}, %rd3554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4000}, %rd3554;
	}
	shf.r.wrap.b32 	%r4001, %r4000, %r3999, 21;
	shf.r.wrap.b32 	%r4002, %r3999, %r4000, 21;
	mov.b64 	%rd3571, {%r4002, %r4001};
	xor.b64  	%rd3572, %rd3571, %rd3570;
	add.s64 	%rd3573, %rd3564, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4003}, %rd3563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4004,%dummy}, %rd3563;
	}
	shf.l.wrap.b32 	%r4005, %r4004, %r4003, 8;
	shf.l.wrap.b32 	%r4006, %r4003, %r4004, 8;
	mov.b64 	%rd3574, {%r4006, %r4005};
	xor.b64  	%rd3575, %rd3574, %rd3573;
	add.s64 	%rd3576, %rd3572, %rd3567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4007,%dummy}, %rd3572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4008}, %rd3572;
	}
	shf.r.wrap.b32 	%r4009, %r4008, %r4007, 29;
	shf.r.wrap.b32 	%r4010, %r4007, %r4008, 29;
	mov.b64 	%rd3577, {%r4010, %r4009};
	xor.b64  	%rd3578, %rd3577, %rd3576;
	add.s64 	%rd3579, %rd3569, %rd3570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4011,%dummy}, %rd3569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4012}, %rd3569;
	}
	shf.r.wrap.b32 	%r4013, %r4012, %r4011, 8;
	shf.r.wrap.b32 	%r4014, %r4011, %r4012, 8;
	mov.b64 	%rd3580, {%r4014, %r4013};
	xor.b64  	%rd3581, %rd3580, %rd3579;
	add.s64 	%rd3582, %rd3566, %rd3561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4015}, %rd3566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4016,%dummy}, %rd3566;
	}
	shf.l.wrap.b32 	%r4017, %r4016, %r4015, 22;
	shf.l.wrap.b32 	%r4018, %r4015, %r4016, 22;
	mov.b64 	%rd3583, {%r4018, %r4017};
	xor.b64  	%rd3584, %rd3583, %rd3582;
	add.s64 	%rd3585, %rd3121, %rd3576;
	add.s64 	%rd3586, %rd3110, %rd3575;
	add.s64 	%rd3587, %rd3111, %rd3579;
	add.s64 	%rd3588, %rd3112, %rd3584;
	add.s64 	%rd3589, %rd3113, %rd3582;
	add.s64 	%rd3590, %rd3106, %rd3581;
	add.s64 	%rd3591, %rd3590, -72057594037927928;
	add.s64 	%rd3592, %rd3107, %rd3573;
	add.s64 	%rd3593, %rd3578, %rd3108;
	add.s64 	%rd3594, %rd3593, 8;
	add.s64 	%rd3595, %rd3592, %rd3594;
	add.s64 	%rd3596, %rd3585, %rd3586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4019,%dummy}, %rd3586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4020}, %rd3586;
	}
	shf.r.wrap.b32 	%r4021, %r4020, %r4019, 18;
	shf.r.wrap.b32 	%r4022, %r4019, %r4020, 18;
	mov.b64 	%rd3597, {%r4022, %r4021};
	xor.b64  	%rd3598, %rd3597, %rd3596;
	add.s64 	%rd3599, %rd3587, %rd3588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4023,%dummy}, %rd3588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4024}, %rd3588;
	}
	shf.r.wrap.b32 	%r4025, %r4024, %r4023, 28;
	shf.r.wrap.b32 	%r4026, %r4023, %r4024, 28;
	mov.b64 	%rd3600, {%r4026, %r4025};
	xor.b64  	%rd3601, %rd3600, %rd3599;
	add.s64 	%rd3602, %rd3589, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4027}, %rd3591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4028,%dummy}, %rd3591;
	}
	shf.l.wrap.b32 	%r4029, %r4028, %r4027, 19;
	shf.l.wrap.b32 	%r4030, %r4027, %r4028, 19;
	mov.b64 	%rd3603, {%r4030, %r4029};
	xor.b64  	%rd3604, %rd3603, %rd3602;
	add.s64 	%rd3605, %rd3595, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4031,%dummy}, %rd3594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4032}, %rd3594;
	}
	shf.r.wrap.b32 	%r4033, %r4032, %r4031, 27;
	shf.r.wrap.b32 	%r4034, %r4031, %r4032, 27;
	mov.b64 	%rd3606, {%r4034, %r4033};
	xor.b64  	%rd3607, %rd3606, %rd3605;
	add.s64 	%rd3608, %rd3598, %rd3599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4035,%dummy}, %rd3598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4036}, %rd3598;
	}
	shf.r.wrap.b32 	%r4037, %r4036, %r4035, 31;
	shf.r.wrap.b32 	%r4038, %r4035, %r4036, 31;
	mov.b64 	%rd3609, {%r4038, %r4037};
	xor.b64  	%rd3610, %rd3609, %rd3608;
	add.s64 	%rd3611, %rd3607, %rd3602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4039}, %rd3607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4040,%dummy}, %rd3607;
	}
	shf.l.wrap.b32 	%r4041, %r4040, %r4039, 27;
	shf.l.wrap.b32 	%r4042, %r4039, %r4040, 27;
	mov.b64 	%rd3612, {%r4042, %r4041};
	xor.b64  	%rd3613, %rd3612, %rd3611;
	add.s64 	%rd3614, %rd3604, %rd3605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4043}, %rd3604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4044,%dummy}, %rd3604;
	}
	shf.l.wrap.b32 	%r4045, %r4044, %r4043, 14;
	shf.l.wrap.b32 	%r4046, %r4043, %r4044, 14;
	mov.b64 	%rd3615, {%r4046, %r4045};
	xor.b64  	%rd3616, %rd3615, %rd3614;
	add.s64 	%rd3617, %rd3601, %rd3596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd3601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd3601;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 22;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 22;
	mov.b64 	%rd3618, {%r4050, %r4049};
	xor.b64  	%rd3619, %rd3618, %rd3617;
	add.s64 	%rd3620, %rd3611, %rd3610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4051}, %rd3610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4052,%dummy}, %rd3610;
	}
	shf.l.wrap.b32 	%r4053, %r4052, %r4051, 17;
	shf.l.wrap.b32 	%r4054, %r4051, %r4052, 17;
	mov.b64 	%rd3621, {%r4054, %r4053};
	xor.b64  	%rd3622, %rd3621, %rd3620;
	add.s64 	%rd3623, %rd3619, %rd3614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4055,%dummy}, %rd3619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4056}, %rd3619;
	}
	shf.r.wrap.b32 	%r4057, %r4056, %r4055, 15;
	shf.r.wrap.b32 	%r4058, %r4055, %r4056, 15;
	mov.b64 	%rd3624, {%r4058, %r4057};
	xor.b64  	%rd3625, %rd3624, %rd3623;
	add.s64 	%rd3626, %rd3616, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4059,%dummy}, %rd3616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4060}, %rd3616;
	}
	shf.r.wrap.b32 	%r4061, %r4060, %r4059, 28;
	shf.r.wrap.b32 	%r4062, %r4059, %r4060, 28;
	mov.b64 	%rd3627, {%r4062, %r4061};
	xor.b64  	%rd3628, %rd3627, %rd3626;
	add.s64 	%rd3629, %rd3613, %rd3608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4063,%dummy}, %rd3613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4064}, %rd3613;
	}
	shf.r.wrap.b32 	%r4065, %r4064, %r4063, 25;
	shf.r.wrap.b32 	%r4066, %r4063, %r4064, 25;
	mov.b64 	%rd3630, {%r4066, %r4065};
	xor.b64  	%rd3631, %rd3630, %rd3629;
	add.s64 	%rd3632, %rd3623, %rd3622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4067,%dummy}, %rd3622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4068}, %rd3622;
	}
	shf.r.wrap.b32 	%r4069, %r4068, %r4067, 20;
	shf.r.wrap.b32 	%r4070, %r4067, %r4068, 20;
	mov.b64 	%rd3633, {%r4070, %r4069};
	xor.b64  	%rd3634, %rd3633, %rd3632;
	add.s64 	%rd3635, %rd3631, %rd3626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4071}, %rd3631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4072,%dummy}, %rd3631;
	}
	shf.l.wrap.b32 	%r4073, %r4072, %r4071, 9;
	shf.l.wrap.b32 	%r4074, %r4071, %r4072, 9;
	mov.b64 	%rd3636, {%r4074, %r4073};
	xor.b64  	%rd3637, %rd3636, %rd3635;
	add.s64 	%rd3638, %rd3628, %rd3629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4075,%dummy}, %rd3628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4076}, %rd3628;
	}
	shf.r.wrap.b32 	%r4077, %r4076, %r4075, 10;
	shf.r.wrap.b32 	%r4078, %r4075, %r4076, 10;
	mov.b64 	%rd3639, {%r4078, %r4077};
	xor.b64  	%rd3640, %rd3639, %rd3638;
	add.s64 	%rd3641, %rd3625, %rd3620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4079,%dummy}, %rd3625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4080}, %rd3625;
	}
	shf.r.wrap.b32 	%r4081, %r4080, %r4079, 8;
	shf.r.wrap.b32 	%r4082, %r4079, %r4080, 8;
	mov.b64 	%rd3642, {%r4082, %r4081};
	xor.b64  	%rd3643, %rd3642, %rd3641;
	add.s64 	%rd3644, %rd3110, %rd3635;
	add.s64 	%rd3645, %rd3111, %rd3634;
	add.s64 	%rd3646, %rd3112, %rd3638;
	add.s64 	%rd3647, %rd3113, %rd3643;
	add.s64 	%rd3648, %rd3106, %rd3641;
	add.s64 	%rd3649, %rd3107, %rd3640;
	add.s64 	%rd3650, %rd3649, 8;
	add.s64 	%rd3651, %rd3637, %rd3109;
	add.s64 	%rd3652, %rd3651, 9;
	add.s64 	%rd3653, %rd3644, %rd3645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd3645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd3645;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 25;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 25;
	mov.b64 	%rd3654, {%r4086, %r4085};
	xor.b64  	%rd3655, %rd3654, %rd3653;
	add.s64 	%rd3656, %rd3646, %rd3647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4087}, %rd3647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4088,%dummy}, %rd3647;
	}
	shf.l.wrap.b32 	%r4089, %r4088, %r4087, 30;
	shf.l.wrap.b32 	%r4090, %r4087, %r4088, 30;
	mov.b64 	%rd3657, {%r4090, %r4089};
	xor.b64  	%rd3658, %rd3657, %rd3656;
	add.s64 	%rd3659, %rd3648, %rd3650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4091,%dummy}, %rd3650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4092}, %rd3650;
	}
	shf.r.wrap.b32 	%r4093, %r4092, %r4091, 30;
	shf.r.wrap.b32 	%r4094, %r4091, %r4092, 30;
	mov.b64 	%rd3660, {%r4094, %r4093};
	xor.b64  	%rd3661, %rd3660, %rd3659;
	add.s64 	%rd3662, %rd3108, %rd3632;
	add.s64 	%rd3663, %rd3662, %rd3652;
	add.s64 	%rd3664, %rd3663, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4095}, %rd3652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4096,%dummy}, %rd3652;
	}
	shf.l.wrap.b32 	%r4097, %r4096, %r4095, 24;
	shf.l.wrap.b32 	%r4098, %r4095, %r4096, 24;
	mov.b64 	%rd3665, {%r4098, %r4097};
	xor.b64  	%rd3666, %rd3665, %rd3664;
	add.s64 	%rd3667, %rd3655, %rd3656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd3655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4100,%dummy}, %rd3655;
	}
	shf.l.wrap.b32 	%r4101, %r4100, %r4099, 13;
	shf.l.wrap.b32 	%r4102, %r4099, %r4100, 13;
	mov.b64 	%rd3668, {%r4102, %r4101};
	xor.b64  	%rd3669, %rd3668, %rd3667;
	add.s64 	%rd3670, %rd3666, %rd3659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4103,%dummy}, %rd3666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4104}, %rd3666;
	}
	shf.r.wrap.b32 	%r4105, %r4104, %r4103, 14;
	shf.r.wrap.b32 	%r4106, %r4103, %r4104, 14;
	mov.b64 	%rd3671, {%r4106, %r4105};
	xor.b64  	%rd3672, %rd3671, %rd3670;
	add.s64 	%rd3673, %rd3661, %rd3664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4107}, %rd3661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4108,%dummy}, %rd3661;
	}
	shf.l.wrap.b32 	%r4109, %r4108, %r4107, 10;
	shf.l.wrap.b32 	%r4110, %r4107, %r4108, 10;
	mov.b64 	%rd3674, {%r4110, %r4109};
	xor.b64  	%rd3675, %rd3674, %rd3673;
	add.s64 	%rd3676, %rd3658, %rd3653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4111}, %rd3658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4112,%dummy}, %rd3658;
	}
	shf.l.wrap.b32 	%r4113, %r4112, %r4111, 17;
	shf.l.wrap.b32 	%r4114, %r4111, %r4112, 17;
	mov.b64 	%rd3677, {%r4114, %r4113};
	xor.b64  	%rd3678, %rd3677, %rd3676;
	add.s64 	%rd3679, %rd3670, %rd3669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4115}, %rd3669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4116,%dummy}, %rd3669;
	}
	shf.l.wrap.b32 	%r4117, %r4116, %r4115, 25;
	shf.l.wrap.b32 	%r4118, %r4115, %r4116, 25;
	mov.b64 	%rd3680, {%r4118, %r4117};
	xor.b64  	%rd3681, %rd3680, %rd3679;
	add.s64 	%rd3682, %rd3678, %rd3673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4119}, %rd3678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4120,%dummy}, %rd3678;
	}
	shf.l.wrap.b32 	%r4121, %r4120, %r4119, 29;
	shf.l.wrap.b32 	%r4122, %r4119, %r4120, 29;
	mov.b64 	%rd3683, {%r4122, %r4121};
	xor.b64  	%rd3684, %rd3683, %rd3682;
	add.s64 	%rd3685, %rd3675, %rd3676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4123,%dummy}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4124}, %rd3675;
	}
	shf.r.wrap.b32 	%r4125, %r4124, %r4123, 25;
	shf.r.wrap.b32 	%r4126, %r4123, %r4124, 25;
	mov.b64 	%rd3686, {%r4126, %r4125};
	xor.b64  	%rd3687, %rd3686, %rd3685;
	add.s64 	%rd3688, %rd3672, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4127,%dummy}, %rd3672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4128}, %rd3672;
	}
	shf.r.wrap.b32 	%r4129, %r4128, %r4127, 21;
	shf.r.wrap.b32 	%r4130, %r4127, %r4128, 21;
	mov.b64 	%rd3689, {%r4130, %r4129};
	xor.b64  	%rd3690, %rd3689, %rd3688;
	add.s64 	%rd3691, %rd3682, %rd3681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4131}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4132,%dummy}, %rd3681;
	}
	shf.l.wrap.b32 	%r4133, %r4132, %r4131, 8;
	shf.l.wrap.b32 	%r4134, %r4131, %r4132, 8;
	mov.b64 	%rd3692, {%r4134, %r4133};
	xor.b64  	%rd3693, %rd3692, %rd3691;
	add.s64 	%rd3694, %rd3690, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4135,%dummy}, %rd3690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4136}, %rd3690;
	}
	shf.r.wrap.b32 	%r4137, %r4136, %r4135, 29;
	shf.r.wrap.b32 	%r4138, %r4135, %r4136, 29;
	mov.b64 	%rd3695, {%r4138, %r4137};
	xor.b64  	%rd3696, %rd3695, %rd3694;
	add.s64 	%rd3697, %rd3687, %rd3688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4139,%dummy}, %rd3687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4140}, %rd3687;
	}
	shf.r.wrap.b32 	%r4141, %r4140, %r4139, 8;
	shf.r.wrap.b32 	%r4142, %r4139, %r4140, 8;
	mov.b64 	%rd3698, {%r4142, %r4141};
	xor.b64  	%rd3699, %rd3698, %rd3697;
	add.s64 	%rd3700, %rd3684, %rd3679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4143}, %rd3684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4144,%dummy}, %rd3684;
	}
	shf.l.wrap.b32 	%r4145, %r4144, %r4143, 22;
	shf.l.wrap.b32 	%r4146, %r4143, %r4144, 22;
	mov.b64 	%rd3701, {%r4146, %r4145};
	xor.b64  	%rd3702, %rd3701, %rd3700;
	add.s64 	%rd3703, %rd3111, %rd3694;
	add.s64 	%rd3704, %rd3112, %rd3693;
	add.s64 	%rd3705, %rd3113, %rd3697;
	add.s64 	%rd3706, %rd3106, %rd3702;
	add.s64 	%rd3707, %rd3107, %rd3700;
	add.s64 	%rd3708, %rd3108, %rd3699;
	add.s64 	%rd3709, %rd3708, -72057594037927936;
	add.s64 	%rd3710, %rd3109, %rd3691;
	add.s64 	%rd3711, %rd3696, %rd3121;
	add.s64 	%rd3712, %rd3711, 10;
	add.s64 	%rd3713, %rd3710, %rd3712;
	add.s64 	%rd3714, %rd3703, %rd3704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4147,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4148}, %rd3704;
	}
	shf.r.wrap.b32 	%r4149, %r4148, %r4147, 18;
	shf.r.wrap.b32 	%r4150, %r4147, %r4148, 18;
	mov.b64 	%rd3715, {%r4150, %r4149};
	xor.b64  	%rd3716, %rd3715, %rd3714;
	add.s64 	%rd3717, %rd3705, %rd3706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4151,%dummy}, %rd3706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4152}, %rd3706;
	}
	shf.r.wrap.b32 	%r4153, %r4152, %r4151, 28;
	shf.r.wrap.b32 	%r4154, %r4151, %r4152, 28;
	mov.b64 	%rd3718, {%r4154, %r4153};
	xor.b64  	%rd3719, %rd3718, %rd3717;
	add.s64 	%rd3720, %rd3707, %rd3709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4155}, %rd3709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4156,%dummy}, %rd3709;
	}
	shf.l.wrap.b32 	%r4157, %r4156, %r4155, 19;
	shf.l.wrap.b32 	%r4158, %r4155, %r4156, 19;
	mov.b64 	%rd3721, {%r4158, %r4157};
	xor.b64  	%rd3722, %rd3721, %rd3720;
	add.s64 	%rd3723, %rd3713, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4159,%dummy}, %rd3712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4160}, %rd3712;
	}
	shf.r.wrap.b32 	%r4161, %r4160, %r4159, 27;
	shf.r.wrap.b32 	%r4162, %r4159, %r4160, 27;
	mov.b64 	%rd3724, {%r4162, %r4161};
	xor.b64  	%rd3725, %rd3724, %rd3723;
	add.s64 	%rd3726, %rd3716, %rd3717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4163,%dummy}, %rd3716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4164}, %rd3716;
	}
	shf.r.wrap.b32 	%r4165, %r4164, %r4163, 31;
	shf.r.wrap.b32 	%r4166, %r4163, %r4164, 31;
	mov.b64 	%rd3727, {%r4166, %r4165};
	xor.b64  	%rd3728, %rd3727, %rd3726;
	add.s64 	%rd3729, %rd3725, %rd3720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4167}, %rd3725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4168,%dummy}, %rd3725;
	}
	shf.l.wrap.b32 	%r4169, %r4168, %r4167, 27;
	shf.l.wrap.b32 	%r4170, %r4167, %r4168, 27;
	mov.b64 	%rd3730, {%r4170, %r4169};
	xor.b64  	%rd3731, %rd3730, %rd3729;
	add.s64 	%rd3732, %rd3722, %rd3723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4171}, %rd3722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4172,%dummy}, %rd3722;
	}
	shf.l.wrap.b32 	%r4173, %r4172, %r4171, 14;
	shf.l.wrap.b32 	%r4174, %r4171, %r4172, 14;
	mov.b64 	%rd3733, {%r4174, %r4173};
	xor.b64  	%rd3734, %rd3733, %rd3732;
	add.s64 	%rd3735, %rd3719, %rd3714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4175,%dummy}, %rd3719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4176}, %rd3719;
	}
	shf.r.wrap.b32 	%r4177, %r4176, %r4175, 22;
	shf.r.wrap.b32 	%r4178, %r4175, %r4176, 22;
	mov.b64 	%rd3736, {%r4178, %r4177};
	xor.b64  	%rd3737, %rd3736, %rd3735;
	add.s64 	%rd3738, %rd3729, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4179}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4180,%dummy}, %rd3728;
	}
	shf.l.wrap.b32 	%r4181, %r4180, %r4179, 17;
	shf.l.wrap.b32 	%r4182, %r4179, %r4180, 17;
	mov.b64 	%rd3739, {%r4182, %r4181};
	xor.b64  	%rd3740, %rd3739, %rd3738;
	add.s64 	%rd3741, %rd3737, %rd3732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4183,%dummy}, %rd3737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4184}, %rd3737;
	}
	shf.r.wrap.b32 	%r4185, %r4184, %r4183, 15;
	shf.r.wrap.b32 	%r4186, %r4183, %r4184, 15;
	mov.b64 	%rd3742, {%r4186, %r4185};
	xor.b64  	%rd3743, %rd3742, %rd3741;
	add.s64 	%rd3744, %rd3734, %rd3735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4187,%dummy}, %rd3734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4188}, %rd3734;
	}
	shf.r.wrap.b32 	%r4189, %r4188, %r4187, 28;
	shf.r.wrap.b32 	%r4190, %r4187, %r4188, 28;
	mov.b64 	%rd3745, {%r4190, %r4189};
	xor.b64  	%rd3746, %rd3745, %rd3744;
	add.s64 	%rd3747, %rd3731, %rd3726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4191,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4192}, %rd3731;
	}
	shf.r.wrap.b32 	%r4193, %r4192, %r4191, 25;
	shf.r.wrap.b32 	%r4194, %r4191, %r4192, 25;
	mov.b64 	%rd3748, {%r4194, %r4193};
	xor.b64  	%rd3749, %rd3748, %rd3747;
	add.s64 	%rd3750, %rd3741, %rd3740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4195,%dummy}, %rd3740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4196}, %rd3740;
	}
	shf.r.wrap.b32 	%r4197, %r4196, %r4195, 20;
	shf.r.wrap.b32 	%r4198, %r4195, %r4196, 20;
	mov.b64 	%rd3751, {%r4198, %r4197};
	xor.b64  	%rd3752, %rd3751, %rd3750;
	add.s64 	%rd3753, %rd3749, %rd3744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4199}, %rd3749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4200,%dummy}, %rd3749;
	}
	shf.l.wrap.b32 	%r4201, %r4200, %r4199, 9;
	shf.l.wrap.b32 	%r4202, %r4199, %r4200, 9;
	mov.b64 	%rd3754, {%r4202, %r4201};
	xor.b64  	%rd3755, %rd3754, %rd3753;
	add.s64 	%rd3756, %rd3746, %rd3747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4203,%dummy}, %rd3746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4204}, %rd3746;
	}
	shf.r.wrap.b32 	%r4205, %r4204, %r4203, 10;
	shf.r.wrap.b32 	%r4206, %r4203, %r4204, 10;
	mov.b64 	%rd3757, {%r4206, %r4205};
	xor.b64  	%rd3758, %rd3757, %rd3756;
	add.s64 	%rd3759, %rd3743, %rd3738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4207,%dummy}, %rd3743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4208}, %rd3743;
	}
	shf.r.wrap.b32 	%r4209, %r4208, %r4207, 8;
	shf.r.wrap.b32 	%r4210, %r4207, %r4208, 8;
	mov.b64 	%rd3760, {%r4210, %r4209};
	xor.b64  	%rd3761, %rd3760, %rd3759;
	add.s64 	%rd3762, %rd3112, %rd3753;
	add.s64 	%rd3763, %rd3113, %rd3752;
	add.s64 	%rd3764, %rd3106, %rd3756;
	add.s64 	%rd3765, %rd3107, %rd3761;
	add.s64 	%rd3766, %rd3108, %rd3759;
	add.s64 	%rd3767, %rd3109, %rd3758;
	add.s64 	%rd3768, %rd3767, -72057594037927928;
	add.s64 	%rd3769, %rd3755, %rd3110;
	add.s64 	%rd3770, %rd3769, 11;
	add.s64 	%rd3771, %rd3762, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4211,%dummy}, %rd3763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4212}, %rd3763;
	}
	shf.r.wrap.b32 	%r4213, %r4212, %r4211, 25;
	shf.r.wrap.b32 	%r4214, %r4211, %r4212, 25;
	mov.b64 	%rd3772, {%r4214, %r4213};
	xor.b64  	%rd3773, %rd3772, %rd3771;
	add.s64 	%rd3774, %rd3764, %rd3765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4215}, %rd3765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4216,%dummy}, %rd3765;
	}
	shf.l.wrap.b32 	%r4217, %r4216, %r4215, 30;
	shf.l.wrap.b32 	%r4218, %r4215, %r4216, 30;
	mov.b64 	%rd3775, {%r4218, %r4217};
	xor.b64  	%rd3776, %rd3775, %rd3774;
	add.s64 	%rd3777, %rd3766, %rd3768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4219,%dummy}, %rd3768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4220}, %rd3768;
	}
	shf.r.wrap.b32 	%r4221, %r4220, %r4219, 30;
	shf.r.wrap.b32 	%r4222, %r4219, %r4220, 30;
	mov.b64 	%rd3778, {%r4222, %r4221};
	xor.b64  	%rd3779, %rd3778, %rd3777;
	add.s64 	%rd3780, %rd3121, %rd3750;
	add.s64 	%rd3781, %rd3780, %rd3770;
	add.s64 	%rd3782, %rd3781, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4223}, %rd3770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4224,%dummy}, %rd3770;
	}
	shf.l.wrap.b32 	%r4225, %r4224, %r4223, 24;
	shf.l.wrap.b32 	%r4226, %r4223, %r4224, 24;
	mov.b64 	%rd3783, {%r4226, %r4225};
	xor.b64  	%rd3784, %rd3783, %rd3782;
	add.s64 	%rd3785, %rd3773, %rd3774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4227}, %rd3773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4228,%dummy}, %rd3773;
	}
	shf.l.wrap.b32 	%r4229, %r4228, %r4227, 13;
	shf.l.wrap.b32 	%r4230, %r4227, %r4228, 13;
	mov.b64 	%rd3786, {%r4230, %r4229};
	xor.b64  	%rd3787, %rd3786, %rd3785;
	add.s64 	%rd3788, %rd3784, %rd3777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4231,%dummy}, %rd3784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4232}, %rd3784;
	}
	shf.r.wrap.b32 	%r4233, %r4232, %r4231, 14;
	shf.r.wrap.b32 	%r4234, %r4231, %r4232, 14;
	mov.b64 	%rd3789, {%r4234, %r4233};
	xor.b64  	%rd3790, %rd3789, %rd3788;
	add.s64 	%rd3791, %rd3779, %rd3782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4235}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4236,%dummy}, %rd3779;
	}
	shf.l.wrap.b32 	%r4237, %r4236, %r4235, 10;
	shf.l.wrap.b32 	%r4238, %r4235, %r4236, 10;
	mov.b64 	%rd3792, {%r4238, %r4237};
	xor.b64  	%rd3793, %rd3792, %rd3791;
	add.s64 	%rd3794, %rd3776, %rd3771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4239}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4240,%dummy}, %rd3776;
	}
	shf.l.wrap.b32 	%r4241, %r4240, %r4239, 17;
	shf.l.wrap.b32 	%r4242, %r4239, %r4240, 17;
	mov.b64 	%rd3795, {%r4242, %r4241};
	xor.b64  	%rd3796, %rd3795, %rd3794;
	add.s64 	%rd3797, %rd3788, %rd3787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4243}, %rd3787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4244,%dummy}, %rd3787;
	}
	shf.l.wrap.b32 	%r4245, %r4244, %r4243, 25;
	shf.l.wrap.b32 	%r4246, %r4243, %r4244, 25;
	mov.b64 	%rd3798, {%r4246, %r4245};
	xor.b64  	%rd3799, %rd3798, %rd3797;
	add.s64 	%rd3800, %rd3796, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd3796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4248,%dummy}, %rd3796;
	}
	shf.l.wrap.b32 	%r4249, %r4248, %r4247, 29;
	shf.l.wrap.b32 	%r4250, %r4247, %r4248, 29;
	mov.b64 	%rd3801, {%r4250, %r4249};
	xor.b64  	%rd3802, %rd3801, %rd3800;
	add.s64 	%rd3803, %rd3793, %rd3794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4251,%dummy}, %rd3793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4252}, %rd3793;
	}
	shf.r.wrap.b32 	%r4253, %r4252, %r4251, 25;
	shf.r.wrap.b32 	%r4254, %r4251, %r4252, 25;
	mov.b64 	%rd3804, {%r4254, %r4253};
	xor.b64  	%rd3805, %rd3804, %rd3803;
	add.s64 	%rd3806, %rd3790, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4255,%dummy}, %rd3790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4256}, %rd3790;
	}
	shf.r.wrap.b32 	%r4257, %r4256, %r4255, 21;
	shf.r.wrap.b32 	%r4258, %r4255, %r4256, 21;
	mov.b64 	%rd3807, {%r4258, %r4257};
	xor.b64  	%rd3808, %rd3807, %rd3806;
	add.s64 	%rd3809, %rd3800, %rd3799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd3799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4260,%dummy}, %rd3799;
	}
	shf.l.wrap.b32 	%r4261, %r4260, %r4259, 8;
	shf.l.wrap.b32 	%r4262, %r4259, %r4260, 8;
	mov.b64 	%rd3810, {%r4262, %r4261};
	xor.b64  	%rd3811, %rd3810, %rd3809;
	add.s64 	%rd3812, %rd3808, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4263,%dummy}, %rd3808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4264}, %rd3808;
	}
	shf.r.wrap.b32 	%r4265, %r4264, %r4263, 29;
	shf.r.wrap.b32 	%r4266, %r4263, %r4264, 29;
	mov.b64 	%rd3813, {%r4266, %r4265};
	xor.b64  	%rd3814, %rd3813, %rd3812;
	add.s64 	%rd3815, %rd3805, %rd3806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4267,%dummy}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4268}, %rd3805;
	}
	shf.r.wrap.b32 	%r4269, %r4268, %r4267, 8;
	shf.r.wrap.b32 	%r4270, %r4267, %r4268, 8;
	mov.b64 	%rd3816, {%r4270, %r4269};
	xor.b64  	%rd3817, %rd3816, %rd3815;
	add.s64 	%rd3818, %rd3802, %rd3797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4271}, %rd3802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4272,%dummy}, %rd3802;
	}
	shf.l.wrap.b32 	%r4273, %r4272, %r4271, 22;
	shf.l.wrap.b32 	%r4274, %r4271, %r4272, 22;
	mov.b64 	%rd3819, {%r4274, %r4273};
	xor.b64  	%rd3820, %rd3819, %rd3818;
	add.s64 	%rd3821, %rd3113, %rd3812;
	add.s64 	%rd3822, %rd3106, %rd3811;
	add.s64 	%rd3823, %rd3107, %rd3815;
	add.s64 	%rd3824, %rd3108, %rd3820;
	add.s64 	%rd3825, %rd3109, %rd3818;
	add.s64 	%rd3826, %rd3121, %rd3817;
	add.s64 	%rd3827, %rd3826, 8;
	add.s64 	%rd3828, %rd3110, %rd3809;
	add.s64 	%rd3829, %rd3814, %rd3111;
	add.s64 	%rd3830, %rd3829, 12;
	add.s64 	%rd3831, %rd3828, %rd3830;
	add.s64 	%rd3832, %rd3821, %rd3822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4275,%dummy}, %rd3822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4276}, %rd3822;
	}
	shf.r.wrap.b32 	%r4277, %r4276, %r4275, 18;
	shf.r.wrap.b32 	%r4278, %r4275, %r4276, 18;
	mov.b64 	%rd3833, {%r4278, %r4277};
	xor.b64  	%rd3834, %rd3833, %rd3832;
	add.s64 	%rd3835, %rd3823, %rd3824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4279,%dummy}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4280}, %rd3824;
	}
	shf.r.wrap.b32 	%r4281, %r4280, %r4279, 28;
	shf.r.wrap.b32 	%r4282, %r4279, %r4280, 28;
	mov.b64 	%rd3836, {%r4282, %r4281};
	xor.b64  	%rd3837, %rd3836, %rd3835;
	add.s64 	%rd3838, %rd3825, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4283}, %rd3827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4284,%dummy}, %rd3827;
	}
	shf.l.wrap.b32 	%r4285, %r4284, %r4283, 19;
	shf.l.wrap.b32 	%r4286, %r4283, %r4284, 19;
	mov.b64 	%rd3839, {%r4286, %r4285};
	xor.b64  	%rd3840, %rd3839, %rd3838;
	add.s64 	%rd3841, %rd3831, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4287,%dummy}, %rd3830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4288}, %rd3830;
	}
	shf.r.wrap.b32 	%r4289, %r4288, %r4287, 27;
	shf.r.wrap.b32 	%r4290, %r4287, %r4288, 27;
	mov.b64 	%rd3842, {%r4290, %r4289};
	xor.b64  	%rd3843, %rd3842, %rd3841;
	add.s64 	%rd3844, %rd3834, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4291,%dummy}, %rd3834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4292}, %rd3834;
	}
	shf.r.wrap.b32 	%r4293, %r4292, %r4291, 31;
	shf.r.wrap.b32 	%r4294, %r4291, %r4292, 31;
	mov.b64 	%rd3845, {%r4294, %r4293};
	xor.b64  	%rd3846, %rd3845, %rd3844;
	add.s64 	%rd3847, %rd3843, %rd3838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4295}, %rd3843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4296,%dummy}, %rd3843;
	}
	shf.l.wrap.b32 	%r4297, %r4296, %r4295, 27;
	shf.l.wrap.b32 	%r4298, %r4295, %r4296, 27;
	mov.b64 	%rd3848, {%r4298, %r4297};
	xor.b64  	%rd3849, %rd3848, %rd3847;
	add.s64 	%rd3850, %rd3840, %rd3841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4299}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4300,%dummy}, %rd3840;
	}
	shf.l.wrap.b32 	%r4301, %r4300, %r4299, 14;
	shf.l.wrap.b32 	%r4302, %r4299, %r4300, 14;
	mov.b64 	%rd3851, {%r4302, %r4301};
	xor.b64  	%rd3852, %rd3851, %rd3850;
	add.s64 	%rd3853, %rd3837, %rd3832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4303,%dummy}, %rd3837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4304}, %rd3837;
	}
	shf.r.wrap.b32 	%r4305, %r4304, %r4303, 22;
	shf.r.wrap.b32 	%r4306, %r4303, %r4304, 22;
	mov.b64 	%rd3854, {%r4306, %r4305};
	xor.b64  	%rd3855, %rd3854, %rd3853;
	add.s64 	%rd3856, %rd3847, %rd3846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4307}, %rd3846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4308,%dummy}, %rd3846;
	}
	shf.l.wrap.b32 	%r4309, %r4308, %r4307, 17;
	shf.l.wrap.b32 	%r4310, %r4307, %r4308, 17;
	mov.b64 	%rd3857, {%r4310, %r4309};
	xor.b64  	%rd3858, %rd3857, %rd3856;
	add.s64 	%rd3859, %rd3855, %rd3850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4311,%dummy}, %rd3855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4312}, %rd3855;
	}
	shf.r.wrap.b32 	%r4313, %r4312, %r4311, 15;
	shf.r.wrap.b32 	%r4314, %r4311, %r4312, 15;
	mov.b64 	%rd3860, {%r4314, %r4313};
	xor.b64  	%rd3861, %rd3860, %rd3859;
	add.s64 	%rd3862, %rd3852, %rd3853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4315,%dummy}, %rd3852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4316}, %rd3852;
	}
	shf.r.wrap.b32 	%r4317, %r4316, %r4315, 28;
	shf.r.wrap.b32 	%r4318, %r4315, %r4316, 28;
	mov.b64 	%rd3863, {%r4318, %r4317};
	xor.b64  	%rd3864, %rd3863, %rd3862;
	add.s64 	%rd3865, %rd3849, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4319,%dummy}, %rd3849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4320}, %rd3849;
	}
	shf.r.wrap.b32 	%r4321, %r4320, %r4319, 25;
	shf.r.wrap.b32 	%r4322, %r4319, %r4320, 25;
	mov.b64 	%rd3866, {%r4322, %r4321};
	xor.b64  	%rd3867, %rd3866, %rd3865;
	add.s64 	%rd3868, %rd3859, %rd3858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4323,%dummy}, %rd3858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4324}, %rd3858;
	}
	shf.r.wrap.b32 	%r4325, %r4324, %r4323, 20;
	shf.r.wrap.b32 	%r4326, %r4323, %r4324, 20;
	mov.b64 	%rd3869, {%r4326, %r4325};
	xor.b64  	%rd3870, %rd3869, %rd3868;
	add.s64 	%rd3871, %rd3867, %rd3862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4327}, %rd3867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4328,%dummy}, %rd3867;
	}
	shf.l.wrap.b32 	%r4329, %r4328, %r4327, 9;
	shf.l.wrap.b32 	%r4330, %r4327, %r4328, 9;
	mov.b64 	%rd3872, {%r4330, %r4329};
	xor.b64  	%rd3873, %rd3872, %rd3871;
	add.s64 	%rd3874, %rd3864, %rd3865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4331,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4332}, %rd3864;
	}
	shf.r.wrap.b32 	%r4333, %r4332, %r4331, 10;
	shf.r.wrap.b32 	%r4334, %r4331, %r4332, 10;
	mov.b64 	%rd3875, {%r4334, %r4333};
	xor.b64  	%rd3876, %rd3875, %rd3874;
	add.s64 	%rd3877, %rd3861, %rd3856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4335,%dummy}, %rd3861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4336}, %rd3861;
	}
	shf.r.wrap.b32 	%r4337, %r4336, %r4335, 8;
	shf.r.wrap.b32 	%r4338, %r4335, %r4336, 8;
	mov.b64 	%rd3878, {%r4338, %r4337};
	xor.b64  	%rd3879, %rd3878, %rd3877;
	add.s64 	%rd3880, %rd3106, %rd3871;
	add.s64 	%rd3881, %rd3107, %rd3870;
	add.s64 	%rd3882, %rd3108, %rd3874;
	add.s64 	%rd3883, %rd3109, %rd3879;
	add.s64 	%rd3884, %rd3121, %rd3877;
	add.s64 	%rd3885, %rd3110, %rd3876;
	add.s64 	%rd3886, %rd3885, -72057594037927936;
	add.s64 	%rd3887, %rd3873, %rd3112;
	add.s64 	%rd3888, %rd3887, 13;
	add.s64 	%rd3889, %rd3880, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4339,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4340}, %rd3881;
	}
	shf.r.wrap.b32 	%r4341, %r4340, %r4339, 25;
	shf.r.wrap.b32 	%r4342, %r4339, %r4340, 25;
	mov.b64 	%rd3890, {%r4342, %r4341};
	xor.b64  	%rd3891, %rd3890, %rd3889;
	add.s64 	%rd3892, %rd3882, %rd3883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4343}, %rd3883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4344,%dummy}, %rd3883;
	}
	shf.l.wrap.b32 	%r4345, %r4344, %r4343, 30;
	shf.l.wrap.b32 	%r4346, %r4343, %r4344, 30;
	mov.b64 	%rd3893, {%r4346, %r4345};
	xor.b64  	%rd3894, %rd3893, %rd3892;
	add.s64 	%rd3895, %rd3884, %rd3886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4347,%dummy}, %rd3886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4348}, %rd3886;
	}
	shf.r.wrap.b32 	%r4349, %r4348, %r4347, 30;
	shf.r.wrap.b32 	%r4350, %r4347, %r4348, 30;
	mov.b64 	%rd3896, {%r4350, %r4349};
	xor.b64  	%rd3897, %rd3896, %rd3895;
	add.s64 	%rd3898, %rd3111, %rd3868;
	add.s64 	%rd3899, %rd3898, %rd3888;
	add.s64 	%rd3900, %rd3899, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4351}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4352,%dummy}, %rd3888;
	}
	shf.l.wrap.b32 	%r4353, %r4352, %r4351, 24;
	shf.l.wrap.b32 	%r4354, %r4351, %r4352, 24;
	mov.b64 	%rd3901, {%r4354, %r4353};
	xor.b64  	%rd3902, %rd3901, %rd3900;
	add.s64 	%rd3903, %rd3891, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4355}, %rd3891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4356,%dummy}, %rd3891;
	}
	shf.l.wrap.b32 	%r4357, %r4356, %r4355, 13;
	shf.l.wrap.b32 	%r4358, %r4355, %r4356, 13;
	mov.b64 	%rd3904, {%r4358, %r4357};
	xor.b64  	%rd3905, %rd3904, %rd3903;
	add.s64 	%rd3906, %rd3902, %rd3895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4359,%dummy}, %rd3902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4360}, %rd3902;
	}
	shf.r.wrap.b32 	%r4361, %r4360, %r4359, 14;
	shf.r.wrap.b32 	%r4362, %r4359, %r4360, 14;
	mov.b64 	%rd3907, {%r4362, %r4361};
	xor.b64  	%rd3908, %rd3907, %rd3906;
	add.s64 	%rd3909, %rd3897, %rd3900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4363}, %rd3897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4364,%dummy}, %rd3897;
	}
	shf.l.wrap.b32 	%r4365, %r4364, %r4363, 10;
	shf.l.wrap.b32 	%r4366, %r4363, %r4364, 10;
	mov.b64 	%rd3910, {%r4366, %r4365};
	xor.b64  	%rd3911, %rd3910, %rd3909;
	add.s64 	%rd3912, %rd3894, %rd3889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4367}, %rd3894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4368,%dummy}, %rd3894;
	}
	shf.l.wrap.b32 	%r4369, %r4368, %r4367, 17;
	shf.l.wrap.b32 	%r4370, %r4367, %r4368, 17;
	mov.b64 	%rd3913, {%r4370, %r4369};
	xor.b64  	%rd3914, %rd3913, %rd3912;
	add.s64 	%rd3915, %rd3906, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4371}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4372,%dummy}, %rd3905;
	}
	shf.l.wrap.b32 	%r4373, %r4372, %r4371, 25;
	shf.l.wrap.b32 	%r4374, %r4371, %r4372, 25;
	mov.b64 	%rd3916, {%r4374, %r4373};
	xor.b64  	%rd3917, %rd3916, %rd3915;
	add.s64 	%rd3918, %rd3914, %rd3909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4375}, %rd3914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4376,%dummy}, %rd3914;
	}
	shf.l.wrap.b32 	%r4377, %r4376, %r4375, 29;
	shf.l.wrap.b32 	%r4378, %r4375, %r4376, 29;
	mov.b64 	%rd3919, {%r4378, %r4377};
	xor.b64  	%rd3920, %rd3919, %rd3918;
	add.s64 	%rd3921, %rd3911, %rd3912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4379,%dummy}, %rd3911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4380}, %rd3911;
	}
	shf.r.wrap.b32 	%r4381, %r4380, %r4379, 25;
	shf.r.wrap.b32 	%r4382, %r4379, %r4380, 25;
	mov.b64 	%rd3922, {%r4382, %r4381};
	xor.b64  	%rd3923, %rd3922, %rd3921;
	add.s64 	%rd3924, %rd3908, %rd3903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4383,%dummy}, %rd3908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4384}, %rd3908;
	}
	shf.r.wrap.b32 	%r4385, %r4384, %r4383, 21;
	shf.r.wrap.b32 	%r4386, %r4383, %r4384, 21;
	mov.b64 	%rd3925, {%r4386, %r4385};
	xor.b64  	%rd3926, %rd3925, %rd3924;
	add.s64 	%rd3927, %rd3918, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4387}, %rd3917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4388,%dummy}, %rd3917;
	}
	shf.l.wrap.b32 	%r4389, %r4388, %r4387, 8;
	shf.l.wrap.b32 	%r4390, %r4387, %r4388, 8;
	mov.b64 	%rd3928, {%r4390, %r4389};
	xor.b64  	%rd3929, %rd3928, %rd3927;
	add.s64 	%rd3930, %rd3926, %rd3921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4391,%dummy}, %rd3926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4392}, %rd3926;
	}
	shf.r.wrap.b32 	%r4393, %r4392, %r4391, 29;
	shf.r.wrap.b32 	%r4394, %r4391, %r4392, 29;
	mov.b64 	%rd3931, {%r4394, %r4393};
	xor.b64  	%rd3932, %rd3931, %rd3930;
	add.s64 	%rd3933, %rd3923, %rd3924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4395,%dummy}, %rd3923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4396}, %rd3923;
	}
	shf.r.wrap.b32 	%r4397, %r4396, %r4395, 8;
	shf.r.wrap.b32 	%r4398, %r4395, %r4396, 8;
	mov.b64 	%rd3934, {%r4398, %r4397};
	xor.b64  	%rd3935, %rd3934, %rd3933;
	add.s64 	%rd3936, %rd3920, %rd3915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4399}, %rd3920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4400,%dummy}, %rd3920;
	}
	shf.l.wrap.b32 	%r4401, %r4400, %r4399, 22;
	shf.l.wrap.b32 	%r4402, %r4399, %r4400, 22;
	mov.b64 	%rd3937, {%r4402, %r4401};
	xor.b64  	%rd3938, %rd3937, %rd3936;
	add.s64 	%rd3939, %rd3107, %rd3930;
	add.s64 	%rd3940, %rd3108, %rd3929;
	add.s64 	%rd3941, %rd3109, %rd3933;
	add.s64 	%rd3942, %rd3121, %rd3938;
	add.s64 	%rd3943, %rd3110, %rd3936;
	add.s64 	%rd3944, %rd3111, %rd3935;
	add.s64 	%rd3945, %rd3944, -72057594037927928;
	add.s64 	%rd3946, %rd3112, %rd3927;
	add.s64 	%rd3947, %rd3932, %rd3113;
	add.s64 	%rd3948, %rd3947, 14;
	add.s64 	%rd3949, %rd3946, %rd3948;
	add.s64 	%rd3950, %rd3939, %rd3940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4403,%dummy}, %rd3940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4404}, %rd3940;
	}
	shf.r.wrap.b32 	%r4405, %r4404, %r4403, 18;
	shf.r.wrap.b32 	%r4406, %r4403, %r4404, 18;
	mov.b64 	%rd3951, {%r4406, %r4405};
	xor.b64  	%rd3952, %rd3951, %rd3950;
	add.s64 	%rd3953, %rd3941, %rd3942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4407,%dummy}, %rd3942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4408}, %rd3942;
	}
	shf.r.wrap.b32 	%r4409, %r4408, %r4407, 28;
	shf.r.wrap.b32 	%r4410, %r4407, %r4408, 28;
	mov.b64 	%rd3954, {%r4410, %r4409};
	xor.b64  	%rd3955, %rd3954, %rd3953;
	add.s64 	%rd3956, %rd3943, %rd3945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4411}, %rd3945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4412,%dummy}, %rd3945;
	}
	shf.l.wrap.b32 	%r4413, %r4412, %r4411, 19;
	shf.l.wrap.b32 	%r4414, %r4411, %r4412, 19;
	mov.b64 	%rd3957, {%r4414, %r4413};
	xor.b64  	%rd3958, %rd3957, %rd3956;
	add.s64 	%rd3959, %rd3949, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4415,%dummy}, %rd3948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4416}, %rd3948;
	}
	shf.r.wrap.b32 	%r4417, %r4416, %r4415, 27;
	shf.r.wrap.b32 	%r4418, %r4415, %r4416, 27;
	mov.b64 	%rd3960, {%r4418, %r4417};
	xor.b64  	%rd3961, %rd3960, %rd3959;
	add.s64 	%rd3962, %rd3952, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4419,%dummy}, %rd3952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4420}, %rd3952;
	}
	shf.r.wrap.b32 	%r4421, %r4420, %r4419, 31;
	shf.r.wrap.b32 	%r4422, %r4419, %r4420, 31;
	mov.b64 	%rd3963, {%r4422, %r4421};
	xor.b64  	%rd3964, %rd3963, %rd3962;
	add.s64 	%rd3965, %rd3961, %rd3956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4423}, %rd3961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4424,%dummy}, %rd3961;
	}
	shf.l.wrap.b32 	%r4425, %r4424, %r4423, 27;
	shf.l.wrap.b32 	%r4426, %r4423, %r4424, 27;
	mov.b64 	%rd3966, {%r4426, %r4425};
	xor.b64  	%rd3967, %rd3966, %rd3965;
	add.s64 	%rd3968, %rd3958, %rd3959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4427}, %rd3958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4428,%dummy}, %rd3958;
	}
	shf.l.wrap.b32 	%r4429, %r4428, %r4427, 14;
	shf.l.wrap.b32 	%r4430, %r4427, %r4428, 14;
	mov.b64 	%rd3969, {%r4430, %r4429};
	xor.b64  	%rd3970, %rd3969, %rd3968;
	add.s64 	%rd3971, %rd3955, %rd3950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4431,%dummy}, %rd3955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4432}, %rd3955;
	}
	shf.r.wrap.b32 	%r4433, %r4432, %r4431, 22;
	shf.r.wrap.b32 	%r4434, %r4431, %r4432, 22;
	mov.b64 	%rd3972, {%r4434, %r4433};
	xor.b64  	%rd3973, %rd3972, %rd3971;
	add.s64 	%rd3974, %rd3965, %rd3964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4435}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4436,%dummy}, %rd3964;
	}
	shf.l.wrap.b32 	%r4437, %r4436, %r4435, 17;
	shf.l.wrap.b32 	%r4438, %r4435, %r4436, 17;
	mov.b64 	%rd3975, {%r4438, %r4437};
	xor.b64  	%rd3976, %rd3975, %rd3974;
	add.s64 	%rd3977, %rd3973, %rd3968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4439,%dummy}, %rd3973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4440}, %rd3973;
	}
	shf.r.wrap.b32 	%r4441, %r4440, %r4439, 15;
	shf.r.wrap.b32 	%r4442, %r4439, %r4440, 15;
	mov.b64 	%rd3978, {%r4442, %r4441};
	xor.b64  	%rd3979, %rd3978, %rd3977;
	add.s64 	%rd3980, %rd3970, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4443,%dummy}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4444}, %rd3970;
	}
	shf.r.wrap.b32 	%r4445, %r4444, %r4443, 28;
	shf.r.wrap.b32 	%r4446, %r4443, %r4444, 28;
	mov.b64 	%rd3981, {%r4446, %r4445};
	xor.b64  	%rd3982, %rd3981, %rd3980;
	add.s64 	%rd3983, %rd3967, %rd3962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4447,%dummy}, %rd3967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4448}, %rd3967;
	}
	shf.r.wrap.b32 	%r4449, %r4448, %r4447, 25;
	shf.r.wrap.b32 	%r4450, %r4447, %r4448, 25;
	mov.b64 	%rd3984, {%r4450, %r4449};
	xor.b64  	%rd3985, %rd3984, %rd3983;
	add.s64 	%rd3986, %rd3977, %rd3976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4451,%dummy}, %rd3976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4452}, %rd3976;
	}
	shf.r.wrap.b32 	%r4453, %r4452, %r4451, 20;
	shf.r.wrap.b32 	%r4454, %r4451, %r4452, 20;
	mov.b64 	%rd3987, {%r4454, %r4453};
	xor.b64  	%rd3988, %rd3987, %rd3986;
	add.s64 	%rd3989, %rd3985, %rd3980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd3985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4456,%dummy}, %rd3985;
	}
	shf.l.wrap.b32 	%r4457, %r4456, %r4455, 9;
	shf.l.wrap.b32 	%r4458, %r4455, %r4456, 9;
	mov.b64 	%rd3990, {%r4458, %r4457};
	xor.b64  	%rd3991, %rd3990, %rd3989;
	add.s64 	%rd3992, %rd3982, %rd3983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4459,%dummy}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4460}, %rd3982;
	}
	shf.r.wrap.b32 	%r4461, %r4460, %r4459, 10;
	shf.r.wrap.b32 	%r4462, %r4459, %r4460, 10;
	mov.b64 	%rd3993, {%r4462, %r4461};
	xor.b64  	%rd3994, %rd3993, %rd3992;
	add.s64 	%rd3995, %rd3979, %rd3974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4463,%dummy}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4464}, %rd3979;
	}
	shf.r.wrap.b32 	%r4465, %r4464, %r4463, 8;
	shf.r.wrap.b32 	%r4466, %r4463, %r4464, 8;
	mov.b64 	%rd3996, {%r4466, %r4465};
	xor.b64  	%rd3997, %rd3996, %rd3995;
	add.s64 	%rd3998, %rd3108, %rd3989;
	add.s64 	%rd3999, %rd3109, %rd3988;
	add.s64 	%rd4000, %rd3121, %rd3992;
	add.s64 	%rd4001, %rd3110, %rd3997;
	add.s64 	%rd4002, %rd3111, %rd3995;
	add.s64 	%rd4003, %rd3112, %rd3994;
	add.s64 	%rd4004, %rd4003, 8;
	add.s64 	%rd4005, %rd3991, %rd3106;
	add.s64 	%rd4006, %rd4005, 15;
	add.s64 	%rd4007, %rd3998, %rd3999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4467,%dummy}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4468}, %rd3999;
	}
	shf.r.wrap.b32 	%r4469, %r4468, %r4467, 25;
	shf.r.wrap.b32 	%r4470, %r4467, %r4468, 25;
	mov.b64 	%rd4008, {%r4470, %r4469};
	xor.b64  	%rd4009, %rd4008, %rd4007;
	add.s64 	%rd4010, %rd4000, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd4001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4472,%dummy}, %rd4001;
	}
	shf.l.wrap.b32 	%r4473, %r4472, %r4471, 30;
	shf.l.wrap.b32 	%r4474, %r4471, %r4472, 30;
	mov.b64 	%rd4011, {%r4474, %r4473};
	xor.b64  	%rd4012, %rd4011, %rd4010;
	add.s64 	%rd4013, %rd4002, %rd4004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4475,%dummy}, %rd4004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4476}, %rd4004;
	}
	shf.r.wrap.b32 	%r4477, %r4476, %r4475, 30;
	shf.r.wrap.b32 	%r4478, %r4475, %r4476, 30;
	mov.b64 	%rd4014, {%r4478, %r4477};
	xor.b64  	%rd4015, %rd4014, %rd4013;
	add.s64 	%rd4016, %rd3113, %rd3986;
	add.s64 	%rd4017, %rd4016, %rd4006;
	add.s64 	%rd4018, %rd4017, -72057594037927936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4479}, %rd4006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4480,%dummy}, %rd4006;
	}
	shf.l.wrap.b32 	%r4481, %r4480, %r4479, 24;
	shf.l.wrap.b32 	%r4482, %r4479, %r4480, 24;
	mov.b64 	%rd4019, {%r4482, %r4481};
	xor.b64  	%rd4020, %rd4019, %rd4018;
	add.s64 	%rd4021, %rd4009, %rd4010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4483}, %rd4009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4484,%dummy}, %rd4009;
	}
	shf.l.wrap.b32 	%r4485, %r4484, %r4483, 13;
	shf.l.wrap.b32 	%r4486, %r4483, %r4484, 13;
	mov.b64 	%rd4022, {%r4486, %r4485};
	xor.b64  	%rd4023, %rd4022, %rd4021;
	add.s64 	%rd4024, %rd4020, %rd4013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4487,%dummy}, %rd4020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4488}, %rd4020;
	}
	shf.r.wrap.b32 	%r4489, %r4488, %r4487, 14;
	shf.r.wrap.b32 	%r4490, %r4487, %r4488, 14;
	mov.b64 	%rd4025, {%r4490, %r4489};
	xor.b64  	%rd4026, %rd4025, %rd4024;
	add.s64 	%rd4027, %rd4015, %rd4018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4491}, %rd4015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4492,%dummy}, %rd4015;
	}
	shf.l.wrap.b32 	%r4493, %r4492, %r4491, 10;
	shf.l.wrap.b32 	%r4494, %r4491, %r4492, 10;
	mov.b64 	%rd4028, {%r4494, %r4493};
	xor.b64  	%rd4029, %rd4028, %rd4027;
	add.s64 	%rd4030, %rd4012, %rd4007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd4012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4496,%dummy}, %rd4012;
	}
	shf.l.wrap.b32 	%r4497, %r4496, %r4495, 17;
	shf.l.wrap.b32 	%r4498, %r4495, %r4496, 17;
	mov.b64 	%rd4031, {%r4498, %r4497};
	xor.b64  	%rd4032, %rd4031, %rd4030;
	add.s64 	%rd4033, %rd4024, %rd4023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4499}, %rd4023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4500,%dummy}, %rd4023;
	}
	shf.l.wrap.b32 	%r4501, %r4500, %r4499, 25;
	shf.l.wrap.b32 	%r4502, %r4499, %r4500, 25;
	mov.b64 	%rd4034, {%r4502, %r4501};
	xor.b64  	%rd4035, %rd4034, %rd4033;
	add.s64 	%rd4036, %rd4032, %rd4027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4503}, %rd4032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4504,%dummy}, %rd4032;
	}
	shf.l.wrap.b32 	%r4505, %r4504, %r4503, 29;
	shf.l.wrap.b32 	%r4506, %r4503, %r4504, 29;
	mov.b64 	%rd4037, {%r4506, %r4505};
	xor.b64  	%rd4038, %rd4037, %rd4036;
	add.s64 	%rd4039, %rd4029, %rd4030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4507,%dummy}, %rd4029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4508}, %rd4029;
	}
	shf.r.wrap.b32 	%r4509, %r4508, %r4507, 25;
	shf.r.wrap.b32 	%r4510, %r4507, %r4508, 25;
	mov.b64 	%rd4040, {%r4510, %r4509};
	xor.b64  	%rd4041, %rd4040, %rd4039;
	add.s64 	%rd4042, %rd4026, %rd4021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4511,%dummy}, %rd4026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4512}, %rd4026;
	}
	shf.r.wrap.b32 	%r4513, %r4512, %r4511, 21;
	shf.r.wrap.b32 	%r4514, %r4511, %r4512, 21;
	mov.b64 	%rd4043, {%r4514, %r4513};
	xor.b64  	%rd4044, %rd4043, %rd4042;
	add.s64 	%rd4045, %rd4036, %rd4035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4515}, %rd4035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4516,%dummy}, %rd4035;
	}
	shf.l.wrap.b32 	%r4517, %r4516, %r4515, 8;
	shf.l.wrap.b32 	%r4518, %r4515, %r4516, 8;
	mov.b64 	%rd4046, {%r4518, %r4517};
	xor.b64  	%rd4047, %rd4046, %rd4045;
	add.s64 	%rd4048, %rd4044, %rd4039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4519,%dummy}, %rd4044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4520}, %rd4044;
	}
	shf.r.wrap.b32 	%r4521, %r4520, %r4519, 29;
	shf.r.wrap.b32 	%r4522, %r4519, %r4520, 29;
	mov.b64 	%rd4049, {%r4522, %r4521};
	xor.b64  	%rd4050, %rd4049, %rd4048;
	add.s64 	%rd4051, %rd4041, %rd4042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4523,%dummy}, %rd4041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4524}, %rd4041;
	}
	shf.r.wrap.b32 	%r4525, %r4524, %r4523, 8;
	shf.r.wrap.b32 	%r4526, %r4523, %r4524, 8;
	mov.b64 	%rd4052, {%r4526, %r4525};
	xor.b64  	%rd4053, %rd4052, %rd4051;
	add.s64 	%rd4054, %rd4038, %rd4033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4527}, %rd4038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4528,%dummy}, %rd4038;
	}
	shf.l.wrap.b32 	%r4529, %r4528, %r4527, 22;
	shf.l.wrap.b32 	%r4530, %r4527, %r4528, 22;
	mov.b64 	%rd4055, {%r4530, %r4529};
	xor.b64  	%rd4056, %rd4055, %rd4054;
	add.s64 	%rd4057, %rd3109, %rd4048;
	add.s64 	%rd4058, %rd3121, %rd4047;
	add.s64 	%rd4059, %rd3110, %rd4051;
	add.s64 	%rd4060, %rd3111, %rd4056;
	add.s64 	%rd4061, %rd3112, %rd4054;
	add.s64 	%rd4062, %rd3113, %rd4053;
	add.s64 	%rd4063, %rd4062, -72057594037927936;
	add.s64 	%rd4064, %rd3106, %rd4045;
	add.s64 	%rd4065, %rd4050, %rd3107;
	add.s64 	%rd4066, %rd4065, 16;
	add.s64 	%rd4067, %rd4064, %rd4066;
	add.s64 	%rd4068, %rd4057, %rd4058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4531,%dummy}, %rd4058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4532}, %rd4058;
	}
	shf.r.wrap.b32 	%r4533, %r4532, %r4531, 18;
	shf.r.wrap.b32 	%r4534, %r4531, %r4532, 18;
	mov.b64 	%rd4069, {%r4534, %r4533};
	xor.b64  	%rd4070, %rd4069, %rd4068;
	add.s64 	%rd4071, %rd4059, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4535,%dummy}, %rd4060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4536}, %rd4060;
	}
	shf.r.wrap.b32 	%r4537, %r4536, %r4535, 28;
	shf.r.wrap.b32 	%r4538, %r4535, %r4536, 28;
	mov.b64 	%rd4072, {%r4538, %r4537};
	xor.b64  	%rd4073, %rd4072, %rd4071;
	add.s64 	%rd4074, %rd4061, %rd4063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4539}, %rd4063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4540,%dummy}, %rd4063;
	}
	shf.l.wrap.b32 	%r4541, %r4540, %r4539, 19;
	shf.l.wrap.b32 	%r4542, %r4539, %r4540, 19;
	mov.b64 	%rd4075, {%r4542, %r4541};
	xor.b64  	%rd4076, %rd4075, %rd4074;
	add.s64 	%rd4077, %rd4067, -72057594037927928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4543,%dummy}, %rd4066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4544}, %rd4066;
	}
	shf.r.wrap.b32 	%r4545, %r4544, %r4543, 27;
	shf.r.wrap.b32 	%r4546, %r4543, %r4544, 27;
	mov.b64 	%rd4078, {%r4546, %r4545};
	xor.b64  	%rd4079, %rd4078, %rd4077;
	add.s64 	%rd4080, %rd4070, %rd4071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4547,%dummy}, %rd4070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4548}, %rd4070;
	}
	shf.r.wrap.b32 	%r4549, %r4548, %r4547, 31;
	shf.r.wrap.b32 	%r4550, %r4547, %r4548, 31;
	mov.b64 	%rd4081, {%r4550, %r4549};
	xor.b64  	%rd4082, %rd4081, %rd4080;
	add.s64 	%rd4083, %rd4079, %rd4074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd4079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4552,%dummy}, %rd4079;
	}
	shf.l.wrap.b32 	%r4553, %r4552, %r4551, 27;
	shf.l.wrap.b32 	%r4554, %r4551, %r4552, 27;
	mov.b64 	%rd4084, {%r4554, %r4553};
	xor.b64  	%rd4085, %rd4084, %rd4083;
	add.s64 	%rd4086, %rd4076, %rd4077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4555}, %rd4076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4556,%dummy}, %rd4076;
	}
	shf.l.wrap.b32 	%r4557, %r4556, %r4555, 14;
	shf.l.wrap.b32 	%r4558, %r4555, %r4556, 14;
	mov.b64 	%rd4087, {%r4558, %r4557};
	xor.b64  	%rd4088, %rd4087, %rd4086;
	add.s64 	%rd4089, %rd4073, %rd4068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4559,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4560}, %rd4073;
	}
	shf.r.wrap.b32 	%r4561, %r4560, %r4559, 22;
	shf.r.wrap.b32 	%r4562, %r4559, %r4560, 22;
	mov.b64 	%rd4090, {%r4562, %r4561};
	xor.b64  	%rd4091, %rd4090, %rd4089;
	add.s64 	%rd4092, %rd4083, %rd4082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4563}, %rd4082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4564,%dummy}, %rd4082;
	}
	shf.l.wrap.b32 	%r4565, %r4564, %r4563, 17;
	shf.l.wrap.b32 	%r4566, %r4563, %r4564, 17;
	mov.b64 	%rd4093, {%r4566, %r4565};
	xor.b64  	%rd4094, %rd4093, %rd4092;
	add.s64 	%rd4095, %rd4091, %rd4086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4567,%dummy}, %rd4091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4568}, %rd4091;
	}
	shf.r.wrap.b32 	%r4569, %r4568, %r4567, 15;
	shf.r.wrap.b32 	%r4570, %r4567, %r4568, 15;
	mov.b64 	%rd4096, {%r4570, %r4569};
	xor.b64  	%rd4097, %rd4096, %rd4095;
	add.s64 	%rd4098, %rd4088, %rd4089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4571,%dummy}, %rd4088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4572}, %rd4088;
	}
	shf.r.wrap.b32 	%r4573, %r4572, %r4571, 28;
	shf.r.wrap.b32 	%r4574, %r4571, %r4572, 28;
	mov.b64 	%rd4099, {%r4574, %r4573};
	xor.b64  	%rd4100, %rd4099, %rd4098;
	add.s64 	%rd4101, %rd4085, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4575,%dummy}, %rd4085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4576}, %rd4085;
	}
	shf.r.wrap.b32 	%r4577, %r4576, %r4575, 25;
	shf.r.wrap.b32 	%r4578, %r4575, %r4576, 25;
	mov.b64 	%rd4102, {%r4578, %r4577};
	xor.b64  	%rd4103, %rd4102, %rd4101;
	add.s64 	%rd4104, %rd4095, %rd4094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4579,%dummy}, %rd4094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4580}, %rd4094;
	}
	shf.r.wrap.b32 	%r4581, %r4580, %r4579, 20;
	shf.r.wrap.b32 	%r4582, %r4579, %r4580, 20;
	mov.b64 	%rd4105, {%r4582, %r4581};
	xor.b64  	%rd4106, %rd4105, %rd4104;
	add.s64 	%rd4107, %rd4103, %rd4098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4583}, %rd4103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4584,%dummy}, %rd4103;
	}
	shf.l.wrap.b32 	%r4585, %r4584, %r4583, 9;
	shf.l.wrap.b32 	%r4586, %r4583, %r4584, 9;
	mov.b64 	%rd4108, {%r4586, %r4585};
	xor.b64  	%rd4109, %rd4108, %rd4107;
	add.s64 	%rd4110, %rd4100, %rd4101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4587,%dummy}, %rd4100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4588}, %rd4100;
	}
	shf.r.wrap.b32 	%r4589, %r4588, %r4587, 10;
	shf.r.wrap.b32 	%r4590, %r4587, %r4588, 10;
	mov.b64 	%rd4111, {%r4590, %r4589};
	xor.b64  	%rd4112, %rd4111, %rd4110;
	add.s64 	%rd4113, %rd4097, %rd4092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4591,%dummy}, %rd4097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4592}, %rd4097;
	}
	shf.r.wrap.b32 	%r4593, %r4592, %r4591, 8;
	shf.r.wrap.b32 	%r4594, %r4591, %r4592, 8;
	mov.b64 	%rd4114, {%r4594, %r4593};
	xor.b64  	%rd4115, %rd4114, %rd4113;
	add.s64 	%rd4116, %rd3121, %rd4107;
	add.s64 	%rd4117, %rd3110, %rd4106;
	add.s64 	%rd4118, %rd3111, %rd4110;
	add.s64 	%rd4119, %rd3112, %rd4115;
	add.s64 	%rd4120, %rd3113, %rd4113;
	add.s64 	%rd4121, %rd3106, %rd4112;
	add.s64 	%rd4122, %rd4121, -72057594037927928;
	add.s64 	%rd4123, %rd4109, %rd3108;
	add.s64 	%rd4124, %rd4123, 17;
	add.s64 	%rd4125, %rd4116, %rd4117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4595,%dummy}, %rd4117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4596}, %rd4117;
	}
	shf.r.wrap.b32 	%r4597, %r4596, %r4595, 25;
	shf.r.wrap.b32 	%r4598, %r4595, %r4596, 25;
	mov.b64 	%rd4126, {%r4598, %r4597};
	xor.b64  	%rd4127, %rd4126, %rd4125;
	add.s64 	%rd4128, %rd4118, %rd4119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd4119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4600,%dummy}, %rd4119;
	}
	shf.l.wrap.b32 	%r4601, %r4600, %r4599, 30;
	shf.l.wrap.b32 	%r4602, %r4599, %r4600, 30;
	mov.b64 	%rd4129, {%r4602, %r4601};
	xor.b64  	%rd4130, %rd4129, %rd4128;
	add.s64 	%rd4131, %rd4120, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4603,%dummy}, %rd4122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4604}, %rd4122;
	}
	shf.r.wrap.b32 	%r4605, %r4604, %r4603, 30;
	shf.r.wrap.b32 	%r4606, %r4603, %r4604, 30;
	mov.b64 	%rd4132, {%r4606, %r4605};
	xor.b64  	%rd4133, %rd4132, %rd4131;
	add.s64 	%rd4134, %rd3107, %rd4104;
	add.s64 	%rd4135, %rd4134, %rd4124;
	add.s64 	%rd4136, %rd4135, 8;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4608,%dummy}, %rd4124;
	}
	shf.l.wrap.b32 	%r4609, %r4608, %r4607, 24;
	shf.l.wrap.b32 	%r4610, %r4607, %r4608, 24;
	mov.b64 	%rd4137, {%r4610, %r4609};
	xor.b64  	%rd4138, %rd4137, %rd4136;
	add.s64 	%rd4139, %rd4127, %rd4128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4611}, %rd4127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4612,%dummy}, %rd4127;
	}
	shf.l.wrap.b32 	%r4613, %r4612, %r4611, 13;
	shf.l.wrap.b32 	%r4614, %r4611, %r4612, 13;
	mov.b64 	%rd4140, {%r4614, %r4613};
	xor.b64  	%rd4141, %rd4140, %rd4139;
	add.s64 	%rd4142, %rd4138, %rd4131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4615,%dummy}, %rd4138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4616}, %rd4138;
	}
	shf.r.wrap.b32 	%r4617, %r4616, %r4615, 14;
	shf.r.wrap.b32 	%r4618, %r4615, %r4616, 14;
	mov.b64 	%rd4143, {%r4618, %r4617};
	xor.b64  	%rd4144, %rd4143, %rd4142;
	add.s64 	%rd4145, %rd4133, %rd4136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4619}, %rd4133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4620,%dummy}, %rd4133;
	}
	shf.l.wrap.b32 	%r4621, %r4620, %r4619, 10;
	shf.l.wrap.b32 	%r4622, %r4619, %r4620, 10;
	mov.b64 	%rd4146, {%r4622, %r4621};
	xor.b64  	%rd4147, %rd4146, %rd4145;
	add.s64 	%rd4148, %rd4130, %rd4125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4623}, %rd4130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4624,%dummy}, %rd4130;
	}
	shf.l.wrap.b32 	%r4625, %r4624, %r4623, 17;
	shf.l.wrap.b32 	%r4626, %r4623, %r4624, 17;
	mov.b64 	%rd4149, {%r4626, %r4625};
	xor.b64  	%rd4150, %rd4149, %rd4148;
	add.s64 	%rd4151, %rd4142, %rd4141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4627}, %rd4141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4628,%dummy}, %rd4141;
	}
	shf.l.wrap.b32 	%r4629, %r4628, %r4627, 25;
	shf.l.wrap.b32 	%r4630, %r4627, %r4628, 25;
	mov.b64 	%rd4152, {%r4630, %r4629};
	xor.b64  	%rd4153, %rd4152, %rd4151;
	add.s64 	%rd4154, %rd4150, %rd4145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4631}, %rd4150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4632,%dummy}, %rd4150;
	}
	shf.l.wrap.b32 	%r4633, %r4632, %r4631, 29;
	shf.l.wrap.b32 	%r4634, %r4631, %r4632, 29;
	mov.b64 	%rd4155, {%r4634, %r4633};
	xor.b64  	%rd4156, %rd4155, %rd4154;
	add.s64 	%rd4157, %rd4147, %rd4148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4635,%dummy}, %rd4147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4636}, %rd4147;
	}
	shf.r.wrap.b32 	%r4637, %r4636, %r4635, 25;
	shf.r.wrap.b32 	%r4638, %r4635, %r4636, 25;
	mov.b64 	%rd4158, {%r4638, %r4637};
	xor.b64  	%rd4159, %rd4158, %rd4157;
	add.s64 	%rd4160, %rd4144, %rd4139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4639,%dummy}, %rd4144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4640}, %rd4144;
	}
	shf.r.wrap.b32 	%r4641, %r4640, %r4639, 21;
	shf.r.wrap.b32 	%r4642, %r4639, %r4640, 21;
	mov.b64 	%rd4161, {%r4642, %r4641};
	xor.b64  	%rd4162, %rd4161, %rd4160;
	add.s64 	%rd4163, %rd4154, %rd4153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4643}, %rd4153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4644,%dummy}, %rd4153;
	}
	shf.l.wrap.b32 	%r4645, %r4644, %r4643, 8;
	shf.l.wrap.b32 	%r4646, %r4643, %r4644, 8;
	mov.b64 	%rd4164, {%r4646, %r4645};
	xor.b64  	%rd4165, %rd4164, %rd4163;
	add.s64 	%rd4166, %rd4162, %rd4157;
	add.s64 	%rd4167, %rd4159, %rd4160;
	add.s64 	%rd4168, %rd4156, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4647}, %rd4156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4648,%dummy}, %rd4156;
	}
	shf.l.wrap.b32 	%r4649, %r4648, %r4647, 22;
	shf.l.wrap.b32 	%r4650, %r4647, %r4648, 22;
	mov.b64 	%rd4169, {%r4650, %r4649};
	xor.b64  	%rd4170, %rd4169, %rd4168;
	add.s64 	%rd19, %rd3110, %rd4166;
	add.s64 	%rd20, %rd3111, %rd4165;
	add.s64 	%rd21, %rd3112, %rd4167;
	add.s64 	%rd22, %rd3113, %rd4170;
	bar.sync 	0;
	st.local.u64 	[%rd4+32], %rd19;
	st.local.u64 	[%rd4+40], %rd20;
	st.local.u64 	[%rd4+48], %rd21;
	st.local.u64 	[%rd4+56], %rd22;
	ld.const.u32 	%r4653, [h+24];
	ld.const.u32 	%r4654, [h+20];
	ld.const.u32 	%r4655, [h+16];
	ld.const.u32 	%r4656, [h+12];
	st.local.v4.u32 	[%rd1+80], {%r4656, %r4655, %r4654, %r4653};
	ld.const.u32 	%r4657, [h+28];
	st.local.u32 	[%rd1+96], %r4657;
	ld.const.u32 	%r4658, [h+8];
	ld.const.u32 	%r4659, [h+4];
	ld.const.u32 	%r4660, [h];
	mov.u32 	%r6680, 0;
	st.local.v4.u32 	[%rd1+64], {%r6680, %r4660, %r4659, %r4658};
	mov.u64 	%rd4172, 512;
	mov.u64 	%rd4173, 0;
	st.local.u64 	[%rd1+120], %rd4173;
	st.local.u64 	[%rd1+112], %rd4172;
	cvt.u16.u64	%rs233, %rd15;
	mov.u32 	%r6669, %r6680;
	bra.uni 	BB2_1;

BB2_18:
	cvt.s64.s32	%rd4241, %r6669;
	add.s64 	%rd4242, %rd4, %rd4241;
	ld.local.u8 	%rs233, [%rd4242];

BB2_1:
	cvt.u64.u32	%rd4174, %r6680;
	add.s64 	%rd4175, %rd1, %rd4174;
	st.local.u8 	[%rd4175], %rs233;
	ld.local.u32 	%r4661, [%rd1+64];
	add.s32 	%r6680, %r4661, 1;
	st.local.u32 	[%rd1+64], %r6680;
	setp.ne.s32	%p1, %r6680, 64;
	@%p1 bra 	BB2_6;

	ld.local.v4.u32 	{%r4663, %r4664, %r4665, %r4666}, [%rd1];
	mov.b32	{%rs68, %rs69}, %r4663;
	shr.u16 	%rs70, %rs68, 8;
	shr.u16 	%rs71, %rs69, 8;
	mov.b32	{%rs72, %rs73}, %r4664;
	shr.u16 	%rs74, %rs72, 8;
	shr.u16 	%rs75, %rs73, 8;
	mov.b32	{%rs76, %rs77}, %r4665;
	shr.u16 	%rs78, %rs76, 8;
	shr.u16 	%rs79, %rs77, 8;
	mov.b32	{%rs80, %rs81}, %r4666;
	shr.u16 	%rs82, %rs80, 8;
	shr.u16 	%rs83, %rs81, 8;
	cvt.u32.u16	%r4671, %rs68;
	shl.b32 	%r4672, %r4671, 24;
	cvt.u32.u16	%r4673, %rs70;
	shl.b32 	%r4674, %r4673, 16;
	or.b32  	%r4675, %r4674, %r4672;
	and.b16  	%rs84, %rs69, 255;
	mul.wide.u16 	%r4676, %rs84, 256;
	or.b32  	%r4677, %r4675, %r4676;
	cvt.u32.u16	%r4678, %rs71;
	or.b32  	%r6671, %r4677, %r4678;
	cvt.u32.u16	%r4679, %rs72;
	shl.b32 	%r4680, %r4679, 24;
	cvt.u32.u16	%r4681, %rs74;
	shl.b32 	%r4682, %r4681, 16;
	or.b32  	%r4683, %r4682, %r4680;
	and.b16  	%rs85, %rs73, 255;
	mul.wide.u16 	%r4684, %rs85, 256;
	or.b32  	%r4685, %r4683, %r4684;
	cvt.u32.u16	%r4686, %rs75;
	cvt.u32.u16	%r4687, %rs76;
	shl.b32 	%r4688, %r4687, 24;
	cvt.u32.u16	%r4689, %rs78;
	shl.b32 	%r4690, %r4689, 16;
	or.b32  	%r4691, %r4690, %r4688;
	and.b16  	%rs86, %rs77, 255;
	mul.wide.u16 	%r4692, %rs86, 256;
	or.b32  	%r4693, %r4691, %r4692;
	cvt.u32.u16	%r4694, %rs79;
	cvt.u32.u16	%r4695, %rs80;
	shl.b32 	%r4696, %r4695, 24;
	cvt.u32.u16	%r4697, %rs82;
	shl.b32 	%r4698, %r4697, 16;
	or.b32  	%r4699, %r4698, %r4696;
	and.b16  	%rs87, %rs81, 255;
	mul.wide.u16 	%r4700, %rs87, 256;
	or.b32  	%r4701, %r4699, %r4700;
	cvt.u32.u16	%r4702, %rs83;
	or.b32  	%r4703, %r4701, %r4702;
	or.b32  	%r4704, %r4693, %r4694;
	or.b32  	%r4705, %r4685, %r4686;
	st.local.v4.u32 	[%rd2], {%r6671, %r4705, %r4704, %r4703};
	ld.local.v4.u32 	{%r4706, %r4707, %r4708, %r4709}, [%rd1+16];
	mov.b32	{%rs88, %rs89}, %r4706;
	shr.u16 	%rs90, %rs88, 8;
	shr.u16 	%rs91, %rs89, 8;
	mov.b32	{%rs92, %rs93}, %r4707;
	shr.u16 	%rs94, %rs92, 8;
	shr.u16 	%rs95, %rs93, 8;
	mov.b32	{%rs96, %rs97}, %r4708;
	shr.u16 	%rs98, %rs96, 8;
	shr.u16 	%rs99, %rs97, 8;
	mov.b32	{%rs100, %rs101}, %r4709;
	shr.u16 	%rs102, %rs100, 8;
	shr.u16 	%rs103, %rs101, 8;
	cvt.u32.u16	%r4714, %rs88;
	shl.b32 	%r4715, %r4714, 24;
	cvt.u32.u16	%r4716, %rs90;
	shl.b32 	%r4717, %r4716, 16;
	or.b32  	%r4718, %r4717, %r4715;
	and.b16  	%rs104, %rs89, 255;
	mul.wide.u16 	%r4719, %rs104, 256;
	or.b32  	%r4720, %r4718, %r4719;
	cvt.u32.u16	%r4721, %rs91;
	cvt.u32.u16	%r4722, %rs92;
	shl.b32 	%r4723, %r4722, 24;
	cvt.u32.u16	%r4724, %rs94;
	shl.b32 	%r4725, %r4724, 16;
	or.b32  	%r4726, %r4725, %r4723;
	and.b16  	%rs105, %rs93, 255;
	mul.wide.u16 	%r4727, %rs105, 256;
	or.b32  	%r4728, %r4726, %r4727;
	cvt.u32.u16	%r4729, %rs95;
	cvt.u32.u16	%r4730, %rs96;
	shl.b32 	%r4731, %r4730, 24;
	cvt.u32.u16	%r4732, %rs98;
	shl.b32 	%r4733, %r4732, 16;
	or.b32  	%r4734, %r4733, %r4731;
	and.b16  	%rs106, %rs97, 255;
	mul.wide.u16 	%r4735, %rs106, 256;
	or.b32  	%r4736, %r4734, %r4735;
	cvt.u32.u16	%r4737, %rs99;
	cvt.u32.u16	%r4738, %rs100;
	shl.b32 	%r4739, %r4738, 24;
	cvt.u32.u16	%r4740, %rs102;
	shl.b32 	%r4741, %r4740, 16;
	or.b32  	%r4742, %r4741, %r4739;
	and.b16  	%rs107, %rs101, 255;
	mul.wide.u16 	%r4743, %rs107, 256;
	or.b32  	%r4744, %r4742, %r4743;
	cvt.u32.u16	%r4745, %rs103;
	or.b32  	%r4746, %r4744, %r4745;
	or.b32  	%r4747, %r4736, %r4737;
	or.b32  	%r4748, %r4728, %r4729;
	or.b32  	%r4749, %r4720, %r4721;
	st.local.v4.u32 	[%rd2+16], {%r4749, %r4748, %r4747, %r4746};
	ld.local.v4.u32 	{%r4750, %r4751, %r4752, %r4753}, [%rd1+32];
	mov.b32	{%rs108, %rs109}, %r4750;
	shr.u16 	%rs110, %rs108, 8;
	shr.u16 	%rs111, %rs109, 8;
	mov.b32	{%rs112, %rs113}, %r4751;
	shr.u16 	%rs114, %rs112, 8;
	shr.u16 	%rs115, %rs113, 8;
	mov.b32	{%rs116, %rs117}, %r4752;
	shr.u16 	%rs118, %rs116, 8;
	shr.u16 	%rs119, %rs117, 8;
	mov.b32	{%rs120, %rs121}, %r4753;
	shr.u16 	%rs122, %rs120, 8;
	shr.u16 	%rs123, %rs121, 8;
	cvt.u32.u16	%r4758, %rs108;
	shl.b32 	%r4759, %r4758, 24;
	cvt.u32.u16	%r4760, %rs110;
	shl.b32 	%r4761, %r4760, 16;
	or.b32  	%r4762, %r4761, %r4759;
	and.b16  	%rs124, %rs109, 255;
	mul.wide.u16 	%r4763, %rs124, 256;
	or.b32  	%r4764, %r4762, %r4763;
	cvt.u32.u16	%r4765, %rs111;
	cvt.u32.u16	%r4766, %rs112;
	shl.b32 	%r4767, %r4766, 24;
	cvt.u32.u16	%r4768, %rs114;
	shl.b32 	%r4769, %r4768, 16;
	or.b32  	%r4770, %r4769, %r4767;
	and.b16  	%rs125, %rs113, 255;
	mul.wide.u16 	%r4771, %rs125, 256;
	or.b32  	%r4772, %r4770, %r4771;
	cvt.u32.u16	%r4773, %rs115;
	cvt.u32.u16	%r4774, %rs116;
	shl.b32 	%r4775, %r4774, 24;
	cvt.u32.u16	%r4776, %rs118;
	shl.b32 	%r4777, %r4776, 16;
	or.b32  	%r4778, %r4777, %r4775;
	and.b16  	%rs126, %rs117, 255;
	mul.wide.u16 	%r4779, %rs126, 256;
	or.b32  	%r4780, %r4778, %r4779;
	cvt.u32.u16	%r4781, %rs119;
	cvt.u32.u16	%r4782, %rs120;
	shl.b32 	%r4783, %r4782, 24;
	cvt.u32.u16	%r4784, %rs122;
	shl.b32 	%r4785, %r4784, 16;
	or.b32  	%r4786, %r4785, %r4783;
	and.b16  	%rs127, %rs121, 255;
	mul.wide.u16 	%r4787, %rs127, 256;
	or.b32  	%r4788, %r4786, %r4787;
	cvt.u32.u16	%r4789, %rs123;
	or.b32  	%r4790, %r4788, %r4789;
	or.b32  	%r4791, %r4780, %r4781;
	or.b32  	%r4792, %r4772, %r4773;
	or.b32  	%r4793, %r4764, %r4765;
	st.local.v4.u32 	[%rd2+32], {%r4793, %r4792, %r4791, %r4790};
	ld.local.v4.u32 	{%r4794, %r4795, %r4796, %r4797}, [%rd1+48];
	mov.b32	{%rs128, %rs129}, %r4794;
	shr.u16 	%rs130, %rs128, 8;
	shr.u16 	%rs131, %rs129, 8;
	mov.b32	{%rs132, %rs133}, %r4795;
	shr.u16 	%rs134, %rs132, 8;
	shr.u16 	%rs135, %rs133, 8;
	mov.b32	{%rs136, %rs137}, %r4796;
	shr.u16 	%rs138, %rs136, 8;
	shr.u16 	%rs139, %rs137, 8;
	mov.b32	{%rs140, %rs141}, %r4797;
	shr.u16 	%rs142, %rs140, 8;
	shr.u16 	%rs143, %rs141, 8;
	cvt.u32.u16	%r4802, %rs128;
	shl.b32 	%r4803, %r4802, 24;
	cvt.u32.u16	%r4804, %rs130;
	shl.b32 	%r4805, %r4804, 16;
	or.b32  	%r4806, %r4805, %r4803;
	and.b16  	%rs144, %rs129, 255;
	mul.wide.u16 	%r4807, %rs144, 256;
	or.b32  	%r4808, %r4806, %r4807;
	cvt.u32.u16	%r4809, %rs131;
	cvt.u32.u16	%r4810, %rs132;
	shl.b32 	%r4811, %r4810, 24;
	cvt.u32.u16	%r4812, %rs134;
	shl.b32 	%r4813, %r4812, 16;
	or.b32  	%r4814, %r4813, %r4811;
	and.b16  	%rs145, %rs133, 255;
	mul.wide.u16 	%r4815, %rs145, 256;
	or.b32  	%r4816, %r4814, %r4815;
	cvt.u32.u16	%r4817, %rs135;
	cvt.u32.u16	%r4818, %rs136;
	shl.b32 	%r4819, %r4818, 24;
	cvt.u32.u16	%r4820, %rs138;
	shl.b32 	%r4821, %r4820, 16;
	or.b32  	%r4822, %r4821, %r4819;
	and.b16  	%rs146, %rs137, 255;
	mul.wide.u16 	%r4823, %rs146, 256;
	or.b32  	%r4824, %r4822, %r4823;
	cvt.u32.u16	%r4825, %rs139;
	cvt.u32.u16	%r4826, %rs140;
	shl.b32 	%r4827, %r4826, 24;
	cvt.u32.u16	%r4828, %rs142;
	shl.b32 	%r4829, %r4828, 16;
	or.b32  	%r4830, %r4829, %r4827;
	and.b16  	%rs147, %rs141, 255;
	mul.wide.u16 	%r4831, %rs147, 256;
	or.b32  	%r4832, %r4830, %r4831;
	cvt.u32.u16	%r4833, %rs143;
	or.b32  	%r4834, %r4832, %r4833;
	or.b32  	%r4835, %r4824, %r4825;
	or.b32  	%r4836, %r4816, %r4817;
	or.b32  	%r4837, %r4808, %r4809;
	st.local.v4.u32 	[%rd2+48], {%r4837, %r4836, %r4835, %r4834};
	shr.u32 	%r4838, %r4705, 7;
	shl.b32 	%r4839, %r4686, 25;
	or.b32  	%r4840, %r4838, %r4839;
	shr.u32 	%r4841, %r4683, 18;
	shl.b32 	%r4842, %r4705, 14;
	or.b32  	%r4843, %r4841, %r4842;
	xor.b32  	%r4844, %r4840, %r4843;
	shr.u32 	%r4845, %r4705, 3;
	xor.b32  	%r4846, %r4844, %r4845;
	shr.u32 	%r4847, %r4822, 17;
	shl.b32 	%r4848, %r4835, 15;
	or.b32  	%r4849, %r4847, %r4848;
	shr.u32 	%r4850, %r4822, 19;
	shl.b32 	%r4851, %r4835, 13;
	or.b32  	%r4852, %r4850, %r4851;
	xor.b32  	%r4853, %r4849, %r4852;
	shr.u32 	%r4854, %r4824, 10;
	xor.b32  	%r4855, %r4853, %r4854;
	add.s32 	%r4856, %r4792, %r6671;
	add.s32 	%r4857, %r4856, %r4846;
	shr.u32 	%r4858, %r4704, 7;
	shl.b32 	%r4859, %r4694, 25;
	or.b32  	%r4860, %r4858, %r4859;
	shr.u32 	%r4861, %r4691, 18;
	shl.b32 	%r4862, %r4704, 14;
	or.b32  	%r4863, %r4861, %r4862;
	xor.b32  	%r4864, %r4860, %r4863;
	shr.u32 	%r4865, %r4704, 3;
	xor.b32  	%r4866, %r4864, %r4865;
	shr.u32 	%r4867, %r4830, 17;
	shl.b32 	%r4868, %r4834, 15;
	or.b32  	%r4869, %r4867, %r4868;
	shr.u32 	%r4870, %r4830, 19;
	shl.b32 	%r4871, %r4834, 13;
	or.b32  	%r4872, %r4870, %r4871;
	xor.b32  	%r4873, %r4869, %r4872;
	shr.u32 	%r4874, %r4832, 10;
	xor.b32  	%r4875, %r4873, %r4874;
	add.s32 	%r4876, %r4791, %r4705;
	add.s32 	%r4877, %r4876, %r4866;
	shr.u32 	%r4878, %r4703, 7;
	shl.b32 	%r4879, %r4702, 25;
	or.b32  	%r4880, %r4878, %r4879;
	shr.u32 	%r4881, %r4699, 18;
	shl.b32 	%r4882, %r4703, 14;
	or.b32  	%r4883, %r4881, %r4882;
	xor.b32  	%r4884, %r4880, %r4883;
	shr.u32 	%r4885, %r4703, 3;
	xor.b32  	%r4886, %r4884, %r4885;
	add.s32 	%r4887, %r4857, %r4855;
	shf.l.wrap.b32 	%r4888, %r4887, %r4887, 15;
	shf.l.wrap.b32 	%r4889, %r4887, %r4887, 13;
	xor.b32  	%r4890, %r4888, %r4889;
	shr.u32 	%r4891, %r4887, 10;
	xor.b32  	%r4892, %r4890, %r4891;
	add.s32 	%r4893, %r4790, %r4704;
	add.s32 	%r4894, %r4893, %r4886;
	shr.u32 	%r4895, %r4749, 7;
	shl.b32 	%r4896, %r4721, 25;
	or.b32  	%r4897, %r4895, %r4896;
	shr.u32 	%r4898, %r4718, 18;
	shl.b32 	%r4899, %r4749, 14;
	or.b32  	%r4900, %r4898, %r4899;
	xor.b32  	%r4901, %r4897, %r4900;
	shr.u32 	%r4902, %r4749, 3;
	xor.b32  	%r4903, %r4901, %r4902;
	add.s32 	%r4904, %r4877, %r4875;
	shf.l.wrap.b32 	%r4905, %r4904, %r4904, 15;
	shf.l.wrap.b32 	%r4906, %r4904, %r4904, 13;
	xor.b32  	%r4907, %r4905, %r4906;
	shr.u32 	%r4908, %r4904, 10;
	xor.b32  	%r4909, %r4907, %r4908;
	add.s32 	%r4910, %r4837, %r4703;
	add.s32 	%r4911, %r4910, %r4903;
	add.s32 	%r4912, %r4911, %r4909;
	add.s32 	%r4913, %r4894, %r4892;
	st.local.v4.u32 	[%rd2+64], {%r4887, %r4904, %r4913, %r4912};
	shr.u32 	%r4914, %r4748, 7;
	shl.b32 	%r4915, %r4729, 25;
	or.b32  	%r4916, %r4914, %r4915;
	shr.u32 	%r4917, %r4726, 18;
	shl.b32 	%r4918, %r4748, 14;
	or.b32  	%r4919, %r4917, %r4918;
	xor.b32  	%r4920, %r4916, %r4919;
	shr.u32 	%r4921, %r4748, 3;
	xor.b32  	%r4922, %r4920, %r4921;
	shf.l.wrap.b32 	%r4923, %r4913, %r4913, 15;
	shf.l.wrap.b32 	%r4924, %r4913, %r4913, 13;
	xor.b32  	%r4925, %r4923, %r4924;
	shr.u32 	%r4926, %r4913, 10;
	xor.b32  	%r4927, %r4925, %r4926;
	add.s32 	%r4928, %r4836, %r4749;
	add.s32 	%r4929, %r4928, %r4922;
	shr.u32 	%r4930, %r4747, 7;
	shl.b32 	%r4931, %r4737, 25;
	or.b32  	%r4932, %r4930, %r4931;
	shr.u32 	%r4933, %r4734, 18;
	shl.b32 	%r4934, %r4747, 14;
	or.b32  	%r4935, %r4933, %r4934;
	xor.b32  	%r4936, %r4932, %r4935;
	shr.u32 	%r4937, %r4747, 3;
	xor.b32  	%r4938, %r4936, %r4937;
	shf.l.wrap.b32 	%r4939, %r4912, %r4912, 15;
	shf.l.wrap.b32 	%r4940, %r4912, %r4912, 13;
	xor.b32  	%r4941, %r4939, %r4940;
	shr.u32 	%r4942, %r4912, 10;
	xor.b32  	%r4943, %r4941, %r4942;
	add.s32 	%r4944, %r4835, %r4748;
	add.s32 	%r4945, %r4944, %r4938;
	shr.u32 	%r4946, %r4746, 7;
	shl.b32 	%r4947, %r4745, 25;
	or.b32  	%r4948, %r4946, %r4947;
	shr.u32 	%r4949, %r4742, 18;
	shl.b32 	%r4950, %r4746, 14;
	or.b32  	%r4951, %r4949, %r4950;
	xor.b32  	%r4952, %r4948, %r4951;
	shr.u32 	%r4953, %r4746, 3;
	xor.b32  	%r4954, %r4952, %r4953;
	add.s32 	%r4955, %r4929, %r4927;
	shf.l.wrap.b32 	%r4956, %r4955, %r4955, 15;
	shf.l.wrap.b32 	%r4957, %r4955, %r4955, 13;
	xor.b32  	%r4958, %r4956, %r4957;
	shr.u32 	%r4959, %r4955, 10;
	xor.b32  	%r4960, %r4958, %r4959;
	add.s32 	%r4961, %r4834, %r4747;
	add.s32 	%r4962, %r4961, %r4954;
	shr.u32 	%r4963, %r4793, 7;
	shl.b32 	%r4964, %r4765, 25;
	or.b32  	%r4965, %r4963, %r4964;
	shr.u32 	%r4966, %r4762, 18;
	shl.b32 	%r4967, %r4793, 14;
	or.b32  	%r4968, %r4966, %r4967;
	xor.b32  	%r4969, %r4965, %r4968;
	shr.u32 	%r4970, %r4793, 3;
	xor.b32  	%r4971, %r4969, %r4970;
	add.s32 	%r4972, %r4945, %r4943;
	shf.l.wrap.b32 	%r4973, %r4972, %r4972, 15;
	shf.l.wrap.b32 	%r4974, %r4972, %r4972, 13;
	xor.b32  	%r4975, %r4973, %r4974;
	shr.u32 	%r4976, %r4972, 10;
	xor.b32  	%r4977, %r4975, %r4976;
	add.s32 	%r4978, %r4887, %r4746;
	add.s32 	%r4979, %r4978, %r4971;
	add.s32 	%r4980, %r4979, %r4977;
	add.s32 	%r4981, %r4962, %r4960;
	st.local.v4.u32 	[%rd2+80], {%r4955, %r4972, %r4981, %r4980};
	shr.u32 	%r4982, %r4792, 7;
	shl.b32 	%r4983, %r4773, 25;
	or.b32  	%r4984, %r4982, %r4983;
	shr.u32 	%r4985, %r4770, 18;
	shl.b32 	%r4986, %r4792, 14;
	or.b32  	%r4987, %r4985, %r4986;
	xor.b32  	%r4988, %r4984, %r4987;
	shr.u32 	%r4989, %r4792, 3;
	xor.b32  	%r4990, %r4988, %r4989;
	shf.l.wrap.b32 	%r4991, %r4981, %r4981, 15;
	shf.l.wrap.b32 	%r4992, %r4981, %r4981, 13;
	xor.b32  	%r4993, %r4991, %r4992;
	shr.u32 	%r4994, %r4981, 10;
	xor.b32  	%r4995, %r4993, %r4994;
	add.s32 	%r4996, %r4904, %r4793;
	add.s32 	%r4997, %r4996, %r4990;
	shr.u32 	%r4998, %r4791, 7;
	shl.b32 	%r4999, %r4781, 25;
	or.b32  	%r5000, %r4998, %r4999;
	shr.u32 	%r5001, %r4778, 18;
	shl.b32 	%r5002, %r4791, 14;
	or.b32  	%r5003, %r5001, %r5002;
	xor.b32  	%r5004, %r5000, %r5003;
	shr.u32 	%r5005, %r4791, 3;
	xor.b32  	%r5006, %r5004, %r5005;
	shf.l.wrap.b32 	%r5007, %r4980, %r4980, 15;
	shf.l.wrap.b32 	%r5008, %r4980, %r4980, 13;
	xor.b32  	%r5009, %r5007, %r5008;
	shr.u32 	%r5010, %r4980, 10;
	xor.b32  	%r5011, %r5009, %r5010;
	add.s32 	%r5012, %r4913, %r4792;
	add.s32 	%r5013, %r5012, %r5006;
	shr.u32 	%r5014, %r4790, 7;
	shl.b32 	%r5015, %r4789, 25;
	or.b32  	%r5016, %r5014, %r5015;
	shr.u32 	%r5017, %r4786, 18;
	shl.b32 	%r5018, %r4790, 14;
	or.b32  	%r5019, %r5017, %r5018;
	xor.b32  	%r5020, %r5016, %r5019;
	shr.u32 	%r5021, %r4790, 3;
	xor.b32  	%r5022, %r5020, %r5021;
	add.s32 	%r5023, %r4997, %r4995;
	shf.l.wrap.b32 	%r5024, %r5023, %r5023, 15;
	shf.l.wrap.b32 	%r5025, %r5023, %r5023, 13;
	xor.b32  	%r5026, %r5024, %r5025;
	shr.u32 	%r5027, %r5023, 10;
	xor.b32  	%r5028, %r5026, %r5027;
	add.s32 	%r5029, %r4912, %r4791;
	add.s32 	%r5030, %r5029, %r5022;
	shr.u32 	%r5031, %r4837, 7;
	shl.b32 	%r5032, %r4809, 25;
	or.b32  	%r5033, %r5031, %r5032;
	shr.u32 	%r5034, %r4806, 18;
	shl.b32 	%r5035, %r4837, 14;
	or.b32  	%r5036, %r5034, %r5035;
	xor.b32  	%r5037, %r5033, %r5036;
	shr.u32 	%r5038, %r4837, 3;
	xor.b32  	%r5039, %r5037, %r5038;
	add.s32 	%r5040, %r5013, %r5011;
	shf.l.wrap.b32 	%r5041, %r5040, %r5040, 15;
	shf.l.wrap.b32 	%r5042, %r5040, %r5040, 13;
	xor.b32  	%r5043, %r5041, %r5042;
	shr.u32 	%r5044, %r5040, 10;
	xor.b32  	%r5045, %r5043, %r5044;
	add.s32 	%r5046, %r4955, %r4790;
	add.s32 	%r5047, %r5046, %r5039;
	add.s32 	%r5048, %r5047, %r5045;
	add.s32 	%r5049, %r5030, %r5028;
	st.local.v4.u32 	[%rd2+96], {%r5023, %r5040, %r5049, %r5048};
	shr.u32 	%r5050, %r4836, 7;
	shl.b32 	%r5051, %r4817, 25;
	or.b32  	%r5052, %r5050, %r5051;
	shr.u32 	%r5053, %r4814, 18;
	shl.b32 	%r5054, %r4836, 14;
	or.b32  	%r5055, %r5053, %r5054;
	xor.b32  	%r5056, %r5052, %r5055;
	shr.u32 	%r5057, %r4836, 3;
	xor.b32  	%r5058, %r5056, %r5057;
	shf.l.wrap.b32 	%r5059, %r5049, %r5049, 15;
	shf.l.wrap.b32 	%r5060, %r5049, %r5049, 13;
	xor.b32  	%r5061, %r5059, %r5060;
	shr.u32 	%r5062, %r5049, 10;
	xor.b32  	%r5063, %r5061, %r5062;
	add.s32 	%r5064, %r4972, %r4837;
	add.s32 	%r5065, %r5064, %r5058;
	shr.u32 	%r5066, %r4835, 7;
	shl.b32 	%r5067, %r4825, 25;
	or.b32  	%r5068, %r5066, %r5067;
	shr.u32 	%r5069, %r4822, 18;
	shl.b32 	%r5070, %r4835, 14;
	or.b32  	%r5071, %r5069, %r5070;
	xor.b32  	%r5072, %r5068, %r5071;
	shr.u32 	%r5073, %r4835, 3;
	xor.b32  	%r5074, %r5072, %r5073;
	shf.l.wrap.b32 	%r5075, %r5048, %r5048, 15;
	shf.l.wrap.b32 	%r5076, %r5048, %r5048, 13;
	xor.b32  	%r5077, %r5075, %r5076;
	shr.u32 	%r5078, %r5048, 10;
	xor.b32  	%r5079, %r5077, %r5078;
	add.s32 	%r5080, %r4981, %r4836;
	add.s32 	%r5081, %r5080, %r5074;
	shr.u32 	%r5082, %r4834, 7;
	shl.b32 	%r5083, %r4833, 25;
	or.b32  	%r5084, %r5082, %r5083;
	shr.u32 	%r5085, %r4830, 18;
	shl.b32 	%r5086, %r4834, 14;
	or.b32  	%r5087, %r5085, %r5086;
	xor.b32  	%r5088, %r5084, %r5087;
	shr.u32 	%r5089, %r4834, 3;
	xor.b32  	%r5090, %r5088, %r5089;
	add.s32 	%r5091, %r5065, %r5063;
	shf.l.wrap.b32 	%r5092, %r5091, %r5091, 15;
	shf.l.wrap.b32 	%r5093, %r5091, %r5091, 13;
	xor.b32  	%r5094, %r5092, %r5093;
	shr.u32 	%r5095, %r5091, 10;
	xor.b32  	%r5096, %r5094, %r5095;
	add.s32 	%r5097, %r4980, %r4835;
	add.s32 	%r5098, %r5097, %r5090;
	shf.l.wrap.b32 	%r5099, %r4887, %r4887, 25;
	shf.l.wrap.b32 	%r5100, %r4887, %r4887, 14;
	xor.b32  	%r5101, %r5099, %r5100;
	shr.u32 	%r5102, %r4887, 3;
	xor.b32  	%r5103, %r5101, %r5102;
	add.s32 	%r5104, %r5081, %r5079;
	shf.l.wrap.b32 	%r5105, %r5104, %r5104, 15;
	shf.l.wrap.b32 	%r5106, %r5104, %r5104, 13;
	xor.b32  	%r5107, %r5105, %r5106;
	shr.u32 	%r5108, %r5104, 10;
	xor.b32  	%r5109, %r5107, %r5108;
	add.s32 	%r5110, %r5023, %r4834;
	add.s32 	%r5111, %r5110, %r5103;
	add.s32 	%r5112, %r5111, %r5109;
	add.s32 	%r5113, %r5098, %r5096;
	st.local.v4.u32 	[%rd2+112], {%r5091, %r5104, %r5113, %r5112};
	shf.l.wrap.b32 	%r5114, %r4904, %r4904, 25;
	shf.l.wrap.b32 	%r5115, %r4904, %r4904, 14;
	xor.b32  	%r5116, %r5114, %r5115;
	shr.u32 	%r5117, %r4904, 3;
	xor.b32  	%r5118, %r5116, %r5117;
	shf.l.wrap.b32 	%r5119, %r5113, %r5113, 15;
	shf.l.wrap.b32 	%r5120, %r5113, %r5113, 13;
	xor.b32  	%r5121, %r5119, %r5120;
	shr.u32 	%r5122, %r5113, 10;
	xor.b32  	%r5123, %r5121, %r5122;
	add.s32 	%r5124, %r5040, %r4887;
	add.s32 	%r5125, %r5124, %r5118;
	shf.l.wrap.b32 	%r5126, %r4913, %r4913, 25;
	shf.l.wrap.b32 	%r5127, %r4913, %r4913, 14;
	xor.b32  	%r5128, %r5126, %r5127;
	shr.u32 	%r5129, %r4913, 3;
	xor.b32  	%r5130, %r5128, %r5129;
	shf.l.wrap.b32 	%r5131, %r5112, %r5112, 15;
	shf.l.wrap.b32 	%r5132, %r5112, %r5112, 13;
	xor.b32  	%r5133, %r5131, %r5132;
	shr.u32 	%r5134, %r5112, 10;
	xor.b32  	%r5135, %r5133, %r5134;
	add.s32 	%r5136, %r5049, %r4904;
	add.s32 	%r5137, %r5136, %r5130;
	shf.l.wrap.b32 	%r5138, %r4912, %r4912, 25;
	shf.l.wrap.b32 	%r5139, %r4912, %r4912, 14;
	xor.b32  	%r5140, %r5138, %r5139;
	shr.u32 	%r5141, %r4912, 3;
	xor.b32  	%r5142, %r5140, %r5141;
	add.s32 	%r5143, %r5125, %r5123;
	shf.l.wrap.b32 	%r5144, %r5143, %r5143, 15;
	shf.l.wrap.b32 	%r5145, %r5143, %r5143, 13;
	xor.b32  	%r5146, %r5144, %r5145;
	shr.u32 	%r5147, %r5143, 10;
	xor.b32  	%r5148, %r5146, %r5147;
	add.s32 	%r5149, %r5048, %r4913;
	add.s32 	%r5150, %r5149, %r5142;
	shf.l.wrap.b32 	%r5151, %r4955, %r4955, 25;
	shf.l.wrap.b32 	%r5152, %r4955, %r4955, 14;
	xor.b32  	%r5153, %r5151, %r5152;
	shr.u32 	%r5154, %r4955, 3;
	xor.b32  	%r5155, %r5153, %r5154;
	add.s32 	%r5156, %r5137, %r5135;
	shf.l.wrap.b32 	%r5157, %r5156, %r5156, 15;
	shf.l.wrap.b32 	%r5158, %r5156, %r5156, 13;
	xor.b32  	%r5159, %r5157, %r5158;
	shr.u32 	%r5160, %r5156, 10;
	xor.b32  	%r5161, %r5159, %r5160;
	add.s32 	%r5162, %r5091, %r4912;
	add.s32 	%r5163, %r5162, %r5155;
	add.s32 	%r5164, %r5163, %r5161;
	add.s32 	%r5165, %r5150, %r5148;
	st.local.v4.u32 	[%rd2+128], {%r5143, %r5156, %r5165, %r5164};
	shf.l.wrap.b32 	%r5166, %r4972, %r4972, 25;
	shf.l.wrap.b32 	%r5167, %r4972, %r4972, 14;
	xor.b32  	%r5168, %r5166, %r5167;
	shr.u32 	%r5169, %r4972, 3;
	xor.b32  	%r5170, %r5168, %r5169;
	shf.l.wrap.b32 	%r5171, %r5165, %r5165, 15;
	shf.l.wrap.b32 	%r5172, %r5165, %r5165, 13;
	xor.b32  	%r5173, %r5171, %r5172;
	shr.u32 	%r5174, %r5165, 10;
	xor.b32  	%r5175, %r5173, %r5174;
	add.s32 	%r5176, %r5104, %r4955;
	add.s32 	%r5177, %r5176, %r5170;
	shf.l.wrap.b32 	%r5178, %r4981, %r4981, 25;
	shf.l.wrap.b32 	%r5179, %r4981, %r4981, 14;
	xor.b32  	%r5180, %r5178, %r5179;
	shr.u32 	%r5181, %r4981, 3;
	xor.b32  	%r5182, %r5180, %r5181;
	shf.l.wrap.b32 	%r5183, %r5164, %r5164, 15;
	shf.l.wrap.b32 	%r5184, %r5164, %r5164, 13;
	xor.b32  	%r5185, %r5183, %r5184;
	shr.u32 	%r5186, %r5164, 10;
	xor.b32  	%r5187, %r5185, %r5186;
	add.s32 	%r5188, %r5113, %r4972;
	add.s32 	%r5189, %r5188, %r5182;
	shf.l.wrap.b32 	%r5190, %r4980, %r4980, 25;
	shf.l.wrap.b32 	%r5191, %r4980, %r4980, 14;
	xor.b32  	%r5192, %r5190, %r5191;
	shr.u32 	%r5193, %r4980, 3;
	xor.b32  	%r5194, %r5192, %r5193;
	add.s32 	%r5195, %r5177, %r5175;
	shf.l.wrap.b32 	%r5196, %r5195, %r5195, 15;
	shf.l.wrap.b32 	%r5197, %r5195, %r5195, 13;
	xor.b32  	%r5198, %r5196, %r5197;
	shr.u32 	%r5199, %r5195, 10;
	xor.b32  	%r5200, %r5198, %r5199;
	add.s32 	%r5201, %r5112, %r4981;
	add.s32 	%r5202, %r5201, %r5194;
	shf.l.wrap.b32 	%r5203, %r5023, %r5023, 25;
	shf.l.wrap.b32 	%r5204, %r5023, %r5023, 14;
	xor.b32  	%r5205, %r5203, %r5204;
	shr.u32 	%r5206, %r5023, 3;
	xor.b32  	%r5207, %r5205, %r5206;
	add.s32 	%r5208, %r5189, %r5187;
	shf.l.wrap.b32 	%r5209, %r5208, %r5208, 15;
	shf.l.wrap.b32 	%r5210, %r5208, %r5208, 13;
	xor.b32  	%r5211, %r5209, %r5210;
	shr.u32 	%r5212, %r5208, 10;
	xor.b32  	%r5213, %r5211, %r5212;
	add.s32 	%r5214, %r5143, %r4980;
	add.s32 	%r5215, %r5214, %r5207;
	add.s32 	%r5216, %r5215, %r5213;
	add.s32 	%r5217, %r5202, %r5200;
	st.local.v4.u32 	[%rd2+144], {%r5195, %r5208, %r5217, %r5216};
	shf.l.wrap.b32 	%r5218, %r5040, %r5040, 25;
	shf.l.wrap.b32 	%r5219, %r5040, %r5040, 14;
	xor.b32  	%r5220, %r5218, %r5219;
	shr.u32 	%r5221, %r5040, 3;
	xor.b32  	%r5222, %r5220, %r5221;
	shf.l.wrap.b32 	%r5223, %r5217, %r5217, 15;
	shf.l.wrap.b32 	%r5224, %r5217, %r5217, 13;
	xor.b32  	%r5225, %r5223, %r5224;
	shr.u32 	%r5226, %r5217, 10;
	xor.b32  	%r5227, %r5225, %r5226;
	add.s32 	%r5228, %r5156, %r5023;
	add.s32 	%r5229, %r5228, %r5222;
	shf.l.wrap.b32 	%r5230, %r5049, %r5049, 25;
	shf.l.wrap.b32 	%r5231, %r5049, %r5049, 14;
	xor.b32  	%r5232, %r5230, %r5231;
	shr.u32 	%r5233, %r5049, 3;
	xor.b32  	%r5234, %r5232, %r5233;
	shf.l.wrap.b32 	%r5235, %r5216, %r5216, 15;
	shf.l.wrap.b32 	%r5236, %r5216, %r5216, 13;
	xor.b32  	%r5237, %r5235, %r5236;
	shr.u32 	%r5238, %r5216, 10;
	xor.b32  	%r5239, %r5237, %r5238;
	add.s32 	%r5240, %r5165, %r5040;
	add.s32 	%r5241, %r5240, %r5234;
	shf.l.wrap.b32 	%r5242, %r5048, %r5048, 25;
	shf.l.wrap.b32 	%r5243, %r5048, %r5048, 14;
	xor.b32  	%r5244, %r5242, %r5243;
	shr.u32 	%r5245, %r5048, 3;
	xor.b32  	%r5246, %r5244, %r5245;
	add.s32 	%r5247, %r5229, %r5227;
	shf.l.wrap.b32 	%r5248, %r5247, %r5247, 15;
	shf.l.wrap.b32 	%r5249, %r5247, %r5247, 13;
	xor.b32  	%r5250, %r5248, %r5249;
	shr.u32 	%r5251, %r5247, 10;
	xor.b32  	%r5252, %r5250, %r5251;
	add.s32 	%r5253, %r5164, %r5049;
	add.s32 	%r5254, %r5253, %r5246;
	shf.l.wrap.b32 	%r5255, %r5091, %r5091, 25;
	shf.l.wrap.b32 	%r5256, %r5091, %r5091, 14;
	xor.b32  	%r5257, %r5255, %r5256;
	shr.u32 	%r5258, %r5091, 3;
	xor.b32  	%r5259, %r5257, %r5258;
	add.s32 	%r5260, %r5241, %r5239;
	shf.l.wrap.b32 	%r5261, %r5260, %r5260, 15;
	shf.l.wrap.b32 	%r5262, %r5260, %r5260, 13;
	xor.b32  	%r5263, %r5261, %r5262;
	shr.u32 	%r5264, %r5260, 10;
	xor.b32  	%r5265, %r5263, %r5264;
	add.s32 	%r5266, %r5195, %r5048;
	add.s32 	%r5267, %r5266, %r5259;
	add.s32 	%r5268, %r5267, %r5265;
	add.s32 	%r5269, %r5254, %r5252;
	st.local.v4.u32 	[%rd2+160], {%r5247, %r5260, %r5269, %r5268};
	shf.l.wrap.b32 	%r5270, %r5104, %r5104, 25;
	shf.l.wrap.b32 	%r5271, %r5104, %r5104, 14;
	xor.b32  	%r5272, %r5270, %r5271;
	shr.u32 	%r5273, %r5104, 3;
	xor.b32  	%r5274, %r5272, %r5273;
	shf.l.wrap.b32 	%r5275, %r5269, %r5269, 15;
	shf.l.wrap.b32 	%r5276, %r5269, %r5269, 13;
	xor.b32  	%r5277, %r5275, %r5276;
	shr.u32 	%r5278, %r5269, 10;
	xor.b32  	%r5279, %r5277, %r5278;
	add.s32 	%r5280, %r5208, %r5091;
	add.s32 	%r5281, %r5280, %r5274;
	shf.l.wrap.b32 	%r5282, %r5113, %r5113, 25;
	shf.l.wrap.b32 	%r5283, %r5113, %r5113, 14;
	xor.b32  	%r5284, %r5282, %r5283;
	shr.u32 	%r5285, %r5113, 3;
	xor.b32  	%r5286, %r5284, %r5285;
	shf.l.wrap.b32 	%r5287, %r5268, %r5268, 15;
	shf.l.wrap.b32 	%r5288, %r5268, %r5268, 13;
	xor.b32  	%r5289, %r5287, %r5288;
	shr.u32 	%r5290, %r5268, 10;
	xor.b32  	%r5291, %r5289, %r5290;
	add.s32 	%r5292, %r5217, %r5104;
	add.s32 	%r5293, %r5292, %r5286;
	shf.l.wrap.b32 	%r5294, %r5112, %r5112, 25;
	shf.l.wrap.b32 	%r5295, %r5112, %r5112, 14;
	xor.b32  	%r5296, %r5294, %r5295;
	shr.u32 	%r5297, %r5112, 3;
	xor.b32  	%r5298, %r5296, %r5297;
	add.s32 	%r5299, %r5281, %r5279;
	shf.l.wrap.b32 	%r5300, %r5299, %r5299, 15;
	shf.l.wrap.b32 	%r5301, %r5299, %r5299, 13;
	xor.b32  	%r5302, %r5300, %r5301;
	shr.u32 	%r5303, %r5299, 10;
	xor.b32  	%r5304, %r5302, %r5303;
	add.s32 	%r5305, %r5216, %r5113;
	add.s32 	%r5306, %r5305, %r5298;
	shf.l.wrap.b32 	%r5307, %r5143, %r5143, 25;
	shf.l.wrap.b32 	%r5308, %r5143, %r5143, 14;
	xor.b32  	%r5309, %r5307, %r5308;
	shr.u32 	%r5310, %r5143, 3;
	xor.b32  	%r5311, %r5309, %r5310;
	add.s32 	%r5312, %r5293, %r5291;
	shf.l.wrap.b32 	%r5313, %r5312, %r5312, 15;
	shf.l.wrap.b32 	%r5314, %r5312, %r5312, 13;
	xor.b32  	%r5315, %r5313, %r5314;
	shr.u32 	%r5316, %r5312, 10;
	xor.b32  	%r5317, %r5315, %r5316;
	add.s32 	%r5318, %r5247, %r5112;
	add.s32 	%r5319, %r5318, %r5311;
	add.s32 	%r5320, %r5319, %r5317;
	add.s32 	%r5321, %r5306, %r5304;
	st.local.v4.u32 	[%rd2+176], {%r5299, %r5312, %r5321, %r5320};
	shf.l.wrap.b32 	%r5322, %r5156, %r5156, 25;
	shf.l.wrap.b32 	%r5323, %r5156, %r5156, 14;
	xor.b32  	%r5324, %r5322, %r5323;
	shr.u32 	%r5325, %r5156, 3;
	xor.b32  	%r5326, %r5324, %r5325;
	shf.l.wrap.b32 	%r5327, %r5321, %r5321, 15;
	shf.l.wrap.b32 	%r5328, %r5321, %r5321, 13;
	xor.b32  	%r5329, %r5327, %r5328;
	shr.u32 	%r5330, %r5321, 10;
	xor.b32  	%r5331, %r5329, %r5330;
	add.s32 	%r5332, %r5260, %r5143;
	add.s32 	%r5333, %r5332, %r5326;
	shf.l.wrap.b32 	%r5334, %r5165, %r5165, 25;
	shf.l.wrap.b32 	%r5335, %r5165, %r5165, 14;
	xor.b32  	%r5336, %r5334, %r5335;
	shr.u32 	%r5337, %r5165, 3;
	xor.b32  	%r5338, %r5336, %r5337;
	shf.l.wrap.b32 	%r5339, %r5320, %r5320, 15;
	shf.l.wrap.b32 	%r5340, %r5320, %r5320, 13;
	xor.b32  	%r5341, %r5339, %r5340;
	shr.u32 	%r5342, %r5320, 10;
	xor.b32  	%r5343, %r5341, %r5342;
	add.s32 	%r5344, %r5269, %r5156;
	add.s32 	%r5345, %r5344, %r5338;
	shf.l.wrap.b32 	%r5346, %r5164, %r5164, 25;
	shf.l.wrap.b32 	%r5347, %r5164, %r5164, 14;
	xor.b32  	%r5348, %r5346, %r5347;
	shr.u32 	%r5349, %r5164, 3;
	xor.b32  	%r5350, %r5348, %r5349;
	add.s32 	%r5351, %r5333, %r5331;
	shf.l.wrap.b32 	%r5352, %r5351, %r5351, 15;
	shf.l.wrap.b32 	%r5353, %r5351, %r5351, 13;
	xor.b32  	%r5354, %r5352, %r5353;
	shr.u32 	%r5355, %r5351, 10;
	xor.b32  	%r5356, %r5354, %r5355;
	add.s32 	%r5357, %r5268, %r5165;
	add.s32 	%r5358, %r5357, %r5350;
	shf.l.wrap.b32 	%r5359, %r5195, %r5195, 25;
	shf.l.wrap.b32 	%r5360, %r5195, %r5195, 14;
	xor.b32  	%r5361, %r5359, %r5360;
	shr.u32 	%r5362, %r5195, 3;
	xor.b32  	%r5363, %r5361, %r5362;
	add.s32 	%r5364, %r5345, %r5343;
	shf.l.wrap.b32 	%r5365, %r5364, %r5364, 15;
	shf.l.wrap.b32 	%r5366, %r5364, %r5364, 13;
	xor.b32  	%r5367, %r5365, %r5366;
	shr.u32 	%r5368, %r5364, 10;
	xor.b32  	%r5369, %r5367, %r5368;
	add.s32 	%r5370, %r5299, %r5164;
	add.s32 	%r5371, %r5370, %r5363;
	add.s32 	%r5372, %r5371, %r5369;
	add.s32 	%r5373, %r5358, %r5356;
	st.local.v4.u32 	[%rd2+192], {%r5351, %r5364, %r5373, %r5372};
	shf.l.wrap.b32 	%r5374, %r5208, %r5208, 25;
	shf.l.wrap.b32 	%r5375, %r5208, %r5208, 14;
	xor.b32  	%r5376, %r5374, %r5375;
	shr.u32 	%r5377, %r5208, 3;
	xor.b32  	%r5378, %r5376, %r5377;
	shf.l.wrap.b32 	%r5379, %r5373, %r5373, 15;
	shf.l.wrap.b32 	%r5380, %r5373, %r5373, 13;
	xor.b32  	%r5381, %r5379, %r5380;
	shr.u32 	%r5382, %r5373, 10;
	xor.b32  	%r5383, %r5381, %r5382;
	add.s32 	%r5384, %r5312, %r5195;
	add.s32 	%r5385, %r5384, %r5378;
	shf.l.wrap.b32 	%r5386, %r5217, %r5217, 25;
	shf.l.wrap.b32 	%r5387, %r5217, %r5217, 14;
	xor.b32  	%r5388, %r5386, %r5387;
	shr.u32 	%r5389, %r5217, 3;
	xor.b32  	%r5390, %r5388, %r5389;
	shf.l.wrap.b32 	%r5391, %r5372, %r5372, 15;
	shf.l.wrap.b32 	%r5392, %r5372, %r5372, 13;
	xor.b32  	%r5393, %r5391, %r5392;
	shr.u32 	%r5394, %r5372, 10;
	xor.b32  	%r5395, %r5393, %r5394;
	add.s32 	%r5396, %r5321, %r5208;
	add.s32 	%r5397, %r5396, %r5390;
	shf.l.wrap.b32 	%r5398, %r5216, %r5216, 25;
	shf.l.wrap.b32 	%r5399, %r5216, %r5216, 14;
	xor.b32  	%r5400, %r5398, %r5399;
	shr.u32 	%r5401, %r5216, 3;
	xor.b32  	%r5402, %r5400, %r5401;
	add.s32 	%r5403, %r5385, %r5383;
	shf.l.wrap.b32 	%r5404, %r5403, %r5403, 15;
	shf.l.wrap.b32 	%r5405, %r5403, %r5403, 13;
	xor.b32  	%r5406, %r5404, %r5405;
	shr.u32 	%r5407, %r5403, 10;
	xor.b32  	%r5408, %r5406, %r5407;
	add.s32 	%r5409, %r5320, %r5217;
	add.s32 	%r5410, %r5409, %r5402;
	shf.l.wrap.b32 	%r5411, %r5247, %r5247, 25;
	shf.l.wrap.b32 	%r5412, %r5247, %r5247, 14;
	xor.b32  	%r5413, %r5411, %r5412;
	shr.u32 	%r5414, %r5247, 3;
	xor.b32  	%r5415, %r5413, %r5414;
	add.s32 	%r5416, %r5397, %r5395;
	shf.l.wrap.b32 	%r5417, %r5416, %r5416, 15;
	shf.l.wrap.b32 	%r5418, %r5416, %r5416, 13;
	xor.b32  	%r5419, %r5417, %r5418;
	shr.u32 	%r5420, %r5416, 10;
	xor.b32  	%r5421, %r5419, %r5420;
	add.s32 	%r5422, %r5351, %r5216;
	add.s32 	%r5423, %r5422, %r5415;
	add.s32 	%r5424, %r5423, %r5421;
	add.s32 	%r5425, %r5410, %r5408;
	st.local.v4.u32 	[%rd2+208], {%r5403, %r5416, %r5425, %r5424};
	shf.l.wrap.b32 	%r5426, %r5260, %r5260, 25;
	shf.l.wrap.b32 	%r5427, %r5260, %r5260, 14;
	xor.b32  	%r5428, %r5426, %r5427;
	shr.u32 	%r5429, %r5260, 3;
	xor.b32  	%r5430, %r5428, %r5429;
	shf.l.wrap.b32 	%r5431, %r5425, %r5425, 15;
	shf.l.wrap.b32 	%r5432, %r5425, %r5425, 13;
	xor.b32  	%r5433, %r5431, %r5432;
	shr.u32 	%r5434, %r5425, 10;
	xor.b32  	%r5435, %r5433, %r5434;
	add.s32 	%r5436, %r5364, %r5247;
	add.s32 	%r5437, %r5436, %r5430;
	shf.l.wrap.b32 	%r5438, %r5269, %r5269, 25;
	shf.l.wrap.b32 	%r5439, %r5269, %r5269, 14;
	xor.b32  	%r5440, %r5438, %r5439;
	shr.u32 	%r5441, %r5269, 3;
	xor.b32  	%r5442, %r5440, %r5441;
	shf.l.wrap.b32 	%r5443, %r5424, %r5424, 15;
	shf.l.wrap.b32 	%r5444, %r5424, %r5424, 13;
	xor.b32  	%r5445, %r5443, %r5444;
	shr.u32 	%r5446, %r5424, 10;
	xor.b32  	%r5447, %r5445, %r5446;
	add.s32 	%r5448, %r5373, %r5260;
	add.s32 	%r5449, %r5448, %r5442;
	shf.l.wrap.b32 	%r5450, %r5268, %r5268, 25;
	shf.l.wrap.b32 	%r5451, %r5268, %r5268, 14;
	xor.b32  	%r5452, %r5450, %r5451;
	shr.u32 	%r5453, %r5268, 3;
	xor.b32  	%r5454, %r5452, %r5453;
	add.s32 	%r5455, %r5437, %r5435;
	shf.l.wrap.b32 	%r5456, %r5455, %r5455, 15;
	shf.l.wrap.b32 	%r5457, %r5455, %r5455, 13;
	xor.b32  	%r5458, %r5456, %r5457;
	shr.u32 	%r5459, %r5455, 10;
	xor.b32  	%r5460, %r5458, %r5459;
	add.s32 	%r5461, %r5372, %r5269;
	add.s32 	%r5462, %r5461, %r5454;
	shf.l.wrap.b32 	%r5463, %r5299, %r5299, 25;
	shf.l.wrap.b32 	%r5464, %r5299, %r5299, 14;
	xor.b32  	%r5465, %r5463, %r5464;
	shr.u32 	%r5466, %r5299, 3;
	xor.b32  	%r5467, %r5465, %r5466;
	add.s32 	%r5468, %r5449, %r5447;
	shf.l.wrap.b32 	%r5469, %r5468, %r5468, 15;
	shf.l.wrap.b32 	%r5470, %r5468, %r5468, 13;
	xor.b32  	%r5471, %r5469, %r5470;
	shr.u32 	%r5472, %r5468, 10;
	xor.b32  	%r5473, %r5471, %r5472;
	add.s32 	%r5474, %r5403, %r5268;
	add.s32 	%r5475, %r5474, %r5467;
	add.s32 	%r5476, %r5475, %r5473;
	add.s32 	%r5477, %r5462, %r5460;
	st.local.v4.u32 	[%rd2+224], {%r5455, %r5468, %r5477, %r5476};
	shf.l.wrap.b32 	%r5478, %r5312, %r5312, 25;
	shf.l.wrap.b32 	%r5479, %r5312, %r5312, 14;
	xor.b32  	%r5480, %r5478, %r5479;
	shr.u32 	%r5481, %r5312, 3;
	xor.b32  	%r5482, %r5480, %r5481;
	shf.l.wrap.b32 	%r5483, %r5477, %r5477, 15;
	shf.l.wrap.b32 	%r5484, %r5477, %r5477, 13;
	xor.b32  	%r5485, %r5483, %r5484;
	shr.u32 	%r5486, %r5477, 10;
	xor.b32  	%r5487, %r5485, %r5486;
	add.s32 	%r5488, %r5416, %r5299;
	add.s32 	%r5489, %r5488, %r5482;
	shf.l.wrap.b32 	%r5490, %r5321, %r5321, 25;
	shf.l.wrap.b32 	%r5491, %r5321, %r5321, 14;
	xor.b32  	%r5492, %r5490, %r5491;
	shr.u32 	%r5493, %r5321, 3;
	xor.b32  	%r5494, %r5492, %r5493;
	shf.l.wrap.b32 	%r5495, %r5476, %r5476, 15;
	shf.l.wrap.b32 	%r5496, %r5476, %r5476, 13;
	xor.b32  	%r5497, %r5495, %r5496;
	shr.u32 	%r5498, %r5476, 10;
	xor.b32  	%r5499, %r5497, %r5498;
	add.s32 	%r5500, %r5425, %r5312;
	add.s32 	%r5501, %r5500, %r5494;
	shf.l.wrap.b32 	%r5502, %r5320, %r5320, 25;
	shf.l.wrap.b32 	%r5503, %r5320, %r5320, 14;
	xor.b32  	%r5504, %r5502, %r5503;
	shr.u32 	%r5505, %r5320, 3;
	xor.b32  	%r5506, %r5504, %r5505;
	add.s32 	%r5507, %r5489, %r5487;
	shf.l.wrap.b32 	%r5508, %r5507, %r5507, 15;
	shf.l.wrap.b32 	%r5509, %r5507, %r5507, 13;
	xor.b32  	%r5510, %r5508, %r5509;
	shr.u32 	%r5511, %r5507, 10;
	xor.b32  	%r5512, %r5510, %r5511;
	add.s32 	%r5513, %r5424, %r5321;
	add.s32 	%r5514, %r5513, %r5506;
	shf.l.wrap.b32 	%r5515, %r5351, %r5351, 25;
	shf.l.wrap.b32 	%r5516, %r5351, %r5351, 14;
	xor.b32  	%r5517, %r5515, %r5516;
	shr.u32 	%r5518, %r5351, 3;
	xor.b32  	%r5519, %r5517, %r5518;
	add.s32 	%r5520, %r5501, %r5499;
	shf.l.wrap.b32 	%r5521, %r5520, %r5520, 15;
	shf.l.wrap.b32 	%r5522, %r5520, %r5520, 13;
	xor.b32  	%r5523, %r5521, %r5522;
	shr.u32 	%r5524, %r5520, 10;
	xor.b32  	%r5525, %r5523, %r5524;
	add.s32 	%r5526, %r5455, %r5320;
	add.s32 	%r5527, %r5526, %r5519;
	add.s32 	%r5528, %r5527, %r5525;
	add.s32 	%r5529, %r5514, %r5512;
	st.local.v4.u32 	[%rd2+240], {%r5507, %r5520, %r5529, %r5528};
	ld.local.u32 	%r6, [%rd1+68];
	ld.local.v2.u32 	{%r5530, %r5531}, [%rd1+72];
	ld.local.v4.u32 	{%r5532, %r5533, %r5534, %r5535}, [%rd1+80];
	ld.local.u32 	%r13, [%rd1+96];
	mov.u32 	%r6670, -64;
	mov.u64 	%rd4248, k;
	mov.u64 	%rd4249, %rd2;
	mov.u32 	%r6672, %r6;
	mov.u32 	%r6673, %r5530;
	mov.u32 	%r6674, %r5531;
	mov.u32 	%r6675, %r5532;
	mov.u32 	%r6676, %r5533;
	mov.u32 	%r6677, %r5534;
	mov.u32 	%r6678, %r5535;
	mov.u32 	%r6679, %r13;
	bra.uni 	BB2_3;

BB2_4:
	add.s64 	%rd26, %rd4249, 16;
	ld.local.u32 	%r6671, [%rd4249+16];
	add.s64 	%rd4248, %rd4248, 16;
	mov.u64 	%rd4249, %rd26;

BB2_3:
	shf.l.wrap.b32 	%r5536, %r6676, %r6676, 26;
	shf.l.wrap.b32 	%r5537, %r6676, %r6676, 21;
	xor.b32  	%r5538, %r5536, %r5537;
	shf.l.wrap.b32 	%r5539, %r6676, %r6676, 7;
	xor.b32  	%r5540, %r5538, %r5539;
	not.b32 	%r5541, %r6676;
	and.b32  	%r5542, %r6678, %r5541;
	and.b32  	%r5543, %r6676, %r6677;
	xor.b32  	%r5544, %r5543, %r5542;
	add.s32 	%r5545, %r5544, %r6679;
	add.s32 	%r5546, %r5545, %r5540;
	ld.const.u32 	%r5547, [%rd4248];
	add.s32 	%r5548, %r5546, %r5547;
	add.s32 	%r5549, %r5548, %r6671;
	shf.l.wrap.b32 	%r5550, %r6672, %r6672, 30;
	shf.l.wrap.b32 	%r5551, %r6672, %r6672, 19;
	xor.b32  	%r5552, %r5550, %r5551;
	shf.l.wrap.b32 	%r5553, %r6672, %r6672, 10;
	xor.b32  	%r5554, %r5552, %r5553;
	xor.b32  	%r5555, %r6673, %r6674;
	and.b32  	%r5556, %r6672, %r5555;
	and.b32  	%r5557, %r6673, %r6674;
	xor.b32  	%r5558, %r5556, %r5557;
	add.s32 	%r5559, %r5554, %r5558;
	add.s32 	%r6679, %r5549, %r6675;
	add.s32 	%r6675, %r5559, %r5549;
	shf.l.wrap.b32 	%r5560, %r6679, %r6679, 26;
	shf.l.wrap.b32 	%r5561, %r6679, %r6679, 21;
	xor.b32  	%r5562, %r5560, %r5561;
	shf.l.wrap.b32 	%r5563, %r6679, %r6679, 7;
	xor.b32  	%r5564, %r5562, %r5563;
	and.b32  	%r5565, %r6679, %r6676;
	not.b32 	%r5566, %r6679;
	and.b32  	%r5567, %r6677, %r5566;
	xor.b32  	%r5568, %r5565, %r5567;
	add.s32 	%r5569, %r5568, %r6678;
	add.s32 	%r5570, %r5569, %r5564;
	ld.const.u32 	%r5571, [%rd4248+4];
	add.s32 	%r5572, %r5570, %r5571;
	ld.local.u32 	%r5573, [%rd4249+4];
	add.s32 	%r5574, %r5572, %r5573;
	shf.l.wrap.b32 	%r5575, %r6675, %r6675, 30;
	shf.l.wrap.b32 	%r5576, %r6675, %r6675, 19;
	xor.b32  	%r5577, %r5575, %r5576;
	shf.l.wrap.b32 	%r5578, %r6675, %r6675, 10;
	xor.b32  	%r5579, %r5577, %r5578;
	xor.b32  	%r5580, %r6672, %r6673;
	and.b32  	%r5581, %r6675, %r5580;
	and.b32  	%r5582, %r6672, %r6673;
	xor.b32  	%r5583, %r5581, %r5582;
	add.s32 	%r5584, %r5579, %r5583;
	add.s32 	%r6678, %r5574, %r6674;
	add.s32 	%r6674, %r5584, %r5574;
	shf.l.wrap.b32 	%r5585, %r6678, %r6678, 26;
	shf.l.wrap.b32 	%r5586, %r6678, %r6678, 21;
	xor.b32  	%r5587, %r5585, %r5586;
	shf.l.wrap.b32 	%r5588, %r6678, %r6678, 7;
	xor.b32  	%r5589, %r5587, %r5588;
	and.b32  	%r5590, %r6678, %r6679;
	not.b32 	%r5591, %r6678;
	and.b32  	%r5592, %r6676, %r5591;
	xor.b32  	%r5593, %r5590, %r5592;
	add.s32 	%r5594, %r5593, %r6677;
	add.s32 	%r5595, %r5594, %r5589;
	ld.const.u32 	%r5596, [%rd4248+8];
	add.s32 	%r5597, %r5595, %r5596;
	ld.local.v2.u32 	{%r5598, %r5599}, [%rd4249+8];
	add.s32 	%r5601, %r5597, %r5598;
	shf.l.wrap.b32 	%r5602, %r6674, %r6674, 30;
	shf.l.wrap.b32 	%r5603, %r6674, %r6674, 19;
	xor.b32  	%r5604, %r5602, %r5603;
	shf.l.wrap.b32 	%r5605, %r6674, %r6674, 10;
	xor.b32  	%r5606, %r5604, %r5605;
	xor.b32  	%r5607, %r6675, %r6672;
	and.b32  	%r5608, %r6674, %r5607;
	and.b32  	%r5609, %r6675, %r6672;
	xor.b32  	%r5610, %r5608, %r5609;
	add.s32 	%r5611, %r5606, %r5610;
	add.s32 	%r6677, %r5601, %r6673;
	add.s32 	%r6673, %r5611, %r5601;
	shf.l.wrap.b32 	%r5612, %r6677, %r6677, 26;
	shf.l.wrap.b32 	%r5613, %r6677, %r6677, 21;
	xor.b32  	%r5614, %r5612, %r5613;
	shf.l.wrap.b32 	%r5615, %r6677, %r6677, 7;
	xor.b32  	%r5616, %r5614, %r5615;
	and.b32  	%r5617, %r6677, %r6678;
	not.b32 	%r5618, %r6677;
	and.b32  	%r5619, %r6679, %r5618;
	xor.b32  	%r5620, %r5617, %r5619;
	add.s32 	%r5621, %r5620, %r6676;
	add.s32 	%r5622, %r5621, %r5616;
	ld.const.u32 	%r5623, [%rd4248+12];
	add.s32 	%r5624, %r5622, %r5623;
	add.s32 	%r5626, %r5624, %r5599;
	shf.l.wrap.b32 	%r5627, %r6673, %r6673, 30;
	shf.l.wrap.b32 	%r5628, %r6673, %r6673, 19;
	xor.b32  	%r5629, %r5627, %r5628;
	shf.l.wrap.b32 	%r5630, %r6673, %r6673, 10;
	xor.b32  	%r5631, %r5629, %r5630;
	xor.b32  	%r5632, %r6674, %r6675;
	and.b32  	%r5633, %r6673, %r5632;
	and.b32  	%r5634, %r6674, %r6675;
	xor.b32  	%r5635, %r5633, %r5634;
	add.s32 	%r5636, %r5631, %r5635;
	add.s32 	%r6676, %r5626, %r6672;
	add.s32 	%r6672, %r5636, %r5626;
	add.s32 	%r6670, %r6670, 4;
	setp.eq.s32	%p2, %r6670, 0;
	@%p2 bra 	BB2_5;
	bra.uni 	BB2_4;

BB2_5:
	add.s32 	%r5638, %r6, %r6672;
	st.local.u32 	[%rd1+68], %r5638;
	add.s32 	%r5639, %r5531, %r6674;
	add.s32 	%r5640, %r5530, %r6673;
	st.local.v2.u32 	[%rd1+72], {%r5640, %r5639};
	add.s32 	%r5641, %r5535, %r6678;
	add.s32 	%r5642, %r5534, %r6677;
	add.s32 	%r5643, %r5533, %r6676;
	add.s32 	%r5644, %r5532, %r6675;
	st.local.v4.u32 	[%rd1+80], {%r5644, %r5643, %r5642, %r5641};
	add.s32 	%r5645, %r13, %r6679;
	st.local.u32 	[%rd1+96], %r5645;
	mov.u32 	%r6680, 0;
	st.local.u32 	[%rd1+64], %r6680;

BB2_6:
	add.s32 	%r6669, %r6669, 1;
	setp.lt.u32	%p3, %r6669, 64;
	@%p3 bra 	BB2_18;

	mov.u16 	%rs148, 0;
	st.local.v4.u8 	[%rd3+4], {%rs148, %rs148, %rs148, %rs148};
	st.local.v4.u8 	[%rd3+8], {%rs148, %rs148, %rs148, %rs148};
	st.local.v4.u8 	[%rd3+12], {%rs148, %rs148, %rs148, %rs148};
	mov.u32 	%r6682, 0;
	st.local.v4.u8 	[%rd3+64], {%rs148, %rs148, %rs148, %rs148};
	st.local.v4.u8 	[%rd3+68], {%rs148, %rs148, %rs148, %rs148};
	st.local.v4.u8 	[%rd3+72], {%rs148, %rs148, %rs148, %rs148};
	st.local.v4.u8 	[%rd3+76], {%rs148, %rs148, %rs148, %rs148};
	mov.u16 	%rs149, 128;
	st.local.v4.u8 	[%rd3], {%rs149, %rs148, %rs148, %rs148};
	st.local.v4.u32 	[%rd3+16], {%r6682, %r6682, %r6682, %r6682};
	st.local.v4.u32 	[%rd3+32], {%r6682, %r6682, %r6682, %r6682};
	st.local.v4.u32 	[%rd3+48], {%r6682, %r6682, %r6682, %r6682};
	st.local.v4.u32 	[%rd3+80], {%r6682, %r6682, %r6682, %r6682};
	st.local.v4.u32 	[%rd3+96], {%r6682, %r6682, %r6682, %r6682};
	st.local.v4.u32 	[%rd3+112], {%r6682, %r6682, %r6682, %r6682};
	setp.lt.u32	%p4, %r6680, 56;
	selp.b32	%r5647, 64, 120, %p4;
	sub.s32 	%r36, %r5647, %r6680;
	add.s32 	%r5648, %r36, -1;
	ld.local.u64 	%rd4181, [%rd1+112];
	cvt.s64.s32	%rd4182, %r5648;
	add.s64 	%rd4183, %rd3, %rd4182;
	st.local.u8 	[%rd4183], %rd4181;
	cvt.u16.u64	%rs150, %rd4181;
	shr.u16 	%rs151, %rs150, 8;
	add.s32 	%r5649, %r36, -2;
	cvt.s64.s32	%rd4185, %r5649;
	add.s64 	%rd4186, %rd3, %rd4185;
	st.local.u8 	[%rd4186], %rs151;
	shr.u64 	%rd4187, %rd4181, 16;
	add.s32 	%r5650, %r36, -3;
	cvt.s64.s32	%rd4188, %r5650;
	add.s64 	%rd4189, %rd3, %rd4188;
	st.local.u8 	[%rd4189], %rd4187;
	shr.u64 	%rd4190, %rd4181, 24;
	add.s32 	%r5651, %r36, -4;
	cvt.s64.s32	%rd4191, %r5651;
	add.s64 	%rd4192, %rd3, %rd4191;
	st.local.u8 	[%rd4192], %rd4190;
	shr.u64 	%rd4193, %rd4181, 32;
	add.s32 	%r5652, %r36, -5;
	cvt.s64.s32	%rd4194, %r5652;
	add.s64 	%rd4195, %rd3, %rd4194;
	st.local.u8 	[%rd4195], %rd4193;
	shr.u64 	%rd4196, %rd4181, 40;
	add.s32 	%r5653, %r36, -6;
	cvt.s64.s32	%rd4197, %r5653;
	add.s64 	%rd4198, %rd3, %rd4197;
	st.local.u8 	[%rd4198], %rd4196;
	shr.u64 	%rd4199, %rd4181, 48;
	add.s32 	%r5654, %r36, -7;
	cvt.s64.s32	%rd4200, %r5654;
	add.s64 	%rd4201, %rd3, %rd4200;
	st.local.u8 	[%rd4201], %rd4199;
	shr.u64 	%rd4202, %rd4181, 56;
	add.s32 	%r5655, %r36, -8;
	cvt.s64.s32	%rd4203, %r5655;
	add.s64 	%rd4204, %rd3, %rd4203;
	st.local.u8 	[%rd4204], %rd4202;
	and.b64  	%rd4205, %rd4181, 4294967295;
	mul.wide.s32 	%rd4206, %r36, 8;
	add.s64 	%rd4207, %rd4205, %rd4206;
	st.local.u64 	[%rd1+120], %rd4173;
	st.local.u64 	[%rd1+112], %rd4207;
	setp.eq.s32	%p5, %r5647, %r6680;
	@%p5 bra 	BB2_15;

	add.s64 	%rd28, %rd1, 16;
	add.s64 	%rd29, %rd2, 16;

BB2_9:
	cvt.s64.s32	%rd4208, %r6682;
	add.s64 	%rd4209, %rd3, %rd4208;
	ld.local.u8 	%rs152, [%rd4209];
	cvt.u64.u32	%rd4210, %r6680;
	add.s64 	%rd4211, %rd1, %rd4210;
	st.local.u8 	[%rd4211], %rs152;
	ld.local.u32 	%r5657, [%rd1+64];
	add.s32 	%r6680, %r5657, 1;
	st.local.u32 	[%rd1+64], %r6680;
	setp.ne.s32	%p6, %r6680, 64;
	@%p6 bra 	BB2_14;

	ld.local.v4.u32 	{%r5659, %r5660, %r5661, %r5662}, [%rd1];
	mov.b32	{%rs153, %rs154}, %r5659;
	shr.u16 	%rs155, %rs153, 8;
	shr.u16 	%rs156, %rs154, 8;
	mov.b32	{%rs157, %rs158}, %r5660;
	shr.u16 	%rs159, %rs157, 8;
	shr.u16 	%rs160, %rs158, 8;
	mov.b32	{%rs161, %rs162}, %r5661;
	shr.u16 	%rs163, %rs161, 8;
	shr.u16 	%rs164, %rs162, 8;
	mov.b32	{%rs165, %rs166}, %r5662;
	shr.u16 	%rs167, %rs165, 8;
	shr.u16 	%rs168, %rs166, 8;
	cvt.u32.u16	%r5667, %rs153;
	shl.b32 	%r5668, %r5667, 24;
	cvt.u32.u16	%r5669, %rs155;
	shl.b32 	%r5670, %r5669, 16;
	or.b32  	%r5671, %r5670, %r5668;
	and.b16  	%rs169, %rs154, 255;
	mul.wide.u16 	%r5672, %rs169, 256;
	or.b32  	%r5673, %r5671, %r5672;
	cvt.u32.u16	%r5674, %rs156;
	or.b32  	%r6684, %r5673, %r5674;
	cvt.u32.u16	%r5675, %rs157;
	shl.b32 	%r5676, %r5675, 24;
	cvt.u32.u16	%r5677, %rs159;
	shl.b32 	%r5678, %r5677, 16;
	or.b32  	%r5679, %r5678, %r5676;
	and.b16  	%rs170, %rs158, 255;
	mul.wide.u16 	%r5680, %rs170, 256;
	or.b32  	%r5681, %r5679, %r5680;
	cvt.u32.u16	%r5682, %rs160;
	cvt.u32.u16	%r5683, %rs161;
	shl.b32 	%r5684, %r5683, 24;
	cvt.u32.u16	%r5685, %rs163;
	shl.b32 	%r5686, %r5685, 16;
	or.b32  	%r5687, %r5686, %r5684;
	and.b16  	%rs171, %rs162, 255;
	mul.wide.u16 	%r5688, %rs171, 256;
	or.b32  	%r5689, %r5687, %r5688;
	cvt.u32.u16	%r5690, %rs164;
	cvt.u32.u16	%r5691, %rs165;
	shl.b32 	%r5692, %r5691, 24;
	cvt.u32.u16	%r5693, %rs167;
	shl.b32 	%r5694, %r5693, 16;
	or.b32  	%r5695, %r5694, %r5692;
	and.b16  	%rs172, %rs166, 255;
	mul.wide.u16 	%r5696, %rs172, 256;
	or.b32  	%r5697, %r5695, %r5696;
	cvt.u32.u16	%r5698, %rs168;
	or.b32  	%r5699, %r5697, %r5698;
	or.b32  	%r5700, %r5689, %r5690;
	or.b32  	%r5701, %r5681, %r5682;
	add.u64 	%rd4216, %SPL, 192;
	st.local.v4.u32 	[%rd4216], {%r6684, %r5701, %r5700, %r5699};
	ld.local.v4.u32 	{%r5702, %r5703, %r5704, %r5705}, [%rd28];
	mov.b32	{%rs173, %rs174}, %r5702;
	shr.u16 	%rs175, %rs173, 8;
	shr.u16 	%rs176, %rs174, 8;
	mov.b32	{%rs177, %rs178}, %r5703;
	shr.u16 	%rs179, %rs177, 8;
	shr.u16 	%rs180, %rs178, 8;
	mov.b32	{%rs181, %rs182}, %r5704;
	shr.u16 	%rs183, %rs181, 8;
	shr.u16 	%rs184, %rs182, 8;
	mov.b32	{%rs185, %rs186}, %r5705;
	shr.u16 	%rs187, %rs185, 8;
	shr.u16 	%rs188, %rs186, 8;
	cvt.u32.u16	%r5710, %rs173;
	shl.b32 	%r5711, %r5710, 24;
	cvt.u32.u16	%r5712, %rs175;
	shl.b32 	%r5713, %r5712, 16;
	or.b32  	%r5714, %r5713, %r5711;
	and.b16  	%rs189, %rs174, 255;
	mul.wide.u16 	%r5715, %rs189, 256;
	or.b32  	%r5716, %r5714, %r5715;
	cvt.u32.u16	%r5717, %rs176;
	cvt.u32.u16	%r5718, %rs177;
	shl.b32 	%r5719, %r5718, 24;
	cvt.u32.u16	%r5720, %rs179;
	shl.b32 	%r5721, %r5720, 16;
	or.b32  	%r5722, %r5721, %r5719;
	and.b16  	%rs190, %rs178, 255;
	mul.wide.u16 	%r5723, %rs190, 256;
	or.b32  	%r5724, %r5722, %r5723;
	cvt.u32.u16	%r5725, %rs180;
	cvt.u32.u16	%r5726, %rs181;
	shl.b32 	%r5727, %r5726, 24;
	cvt.u32.u16	%r5728, %rs183;
	shl.b32 	%r5729, %r5728, 16;
	or.b32  	%r5730, %r5729, %r5727;
	and.b16  	%rs191, %rs182, 255;
	mul.wide.u16 	%r5731, %rs191, 256;
	or.b32  	%r5732, %r5730, %r5731;
	cvt.u32.u16	%r5733, %rs184;
	cvt.u32.u16	%r5734, %rs185;
	shl.b32 	%r5735, %r5734, 24;
	cvt.u32.u16	%r5736, %rs187;
	shl.b32 	%r5737, %r5736, 16;
	or.b32  	%r5738, %r5737, %r5735;
	and.b16  	%rs192, %rs186, 255;
	mul.wide.u16 	%r5739, %rs192, 256;
	or.b32  	%r5740, %r5738, %r5739;
	cvt.u32.u16	%r5741, %rs188;
	or.b32  	%r5742, %r5740, %r5741;
	or.b32  	%r5743, %r5732, %r5733;
	or.b32  	%r5744, %r5724, %r5725;
	or.b32  	%r5745, %r5716, %r5717;
	st.local.v4.u32 	[%rd29], {%r5745, %r5744, %r5743, %r5742};
	ld.local.v4.u32 	{%r5746, %r5747, %r5748, %r5749}, [%rd28+16];
	mov.b32	{%rs193, %rs194}, %r5746;
	shr.u16 	%rs195, %rs193, 8;
	shr.u16 	%rs196, %rs194, 8;
	mov.b32	{%rs197, %rs198}, %r5747;
	shr.u16 	%rs199, %rs197, 8;
	shr.u16 	%rs200, %rs198, 8;
	mov.b32	{%rs201, %rs202}, %r5748;
	shr.u16 	%rs203, %rs201, 8;
	shr.u16 	%rs204, %rs202, 8;
	mov.b32	{%rs205, %rs206}, %r5749;
	shr.u16 	%rs207, %rs205, 8;
	shr.u16 	%rs208, %rs206, 8;
	cvt.u32.u16	%r5754, %rs193;
	shl.b32 	%r5755, %r5754, 24;
	cvt.u32.u16	%r5756, %rs195;
	shl.b32 	%r5757, %r5756, 16;
	or.b32  	%r5758, %r5757, %r5755;
	and.b16  	%rs209, %rs194, 255;
	mul.wide.u16 	%r5759, %rs209, 256;
	or.b32  	%r5760, %r5758, %r5759;
	cvt.u32.u16	%r5761, %rs196;
	cvt.u32.u16	%r5762, %rs197;
	shl.b32 	%r5763, %r5762, 24;
	cvt.u32.u16	%r5764, %rs199;
	shl.b32 	%r5765, %r5764, 16;
	or.b32  	%r5766, %r5765, %r5763;
	and.b16  	%rs210, %rs198, 255;
	mul.wide.u16 	%r5767, %rs210, 256;
	or.b32  	%r5768, %r5766, %r5767;
	cvt.u32.u16	%r5769, %rs200;
	cvt.u32.u16	%r5770, %rs201;
	shl.b32 	%r5771, %r5770, 24;
	cvt.u32.u16	%r5772, %rs203;
	shl.b32 	%r5773, %r5772, 16;
	or.b32  	%r5774, %r5773, %r5771;
	and.b16  	%rs211, %rs202, 255;
	mul.wide.u16 	%r5775, %rs211, 256;
	or.b32  	%r5776, %r5774, %r5775;
	cvt.u32.u16	%r5777, %rs204;
	cvt.u32.u16	%r5778, %rs205;
	shl.b32 	%r5779, %r5778, 24;
	cvt.u32.u16	%r5780, %rs207;
	shl.b32 	%r5781, %r5780, 16;
	or.b32  	%r5782, %r5781, %r5779;
	and.b16  	%rs212, %rs206, 255;
	mul.wide.u16 	%r5783, %rs212, 256;
	or.b32  	%r5784, %r5782, %r5783;
	cvt.u32.u16	%r5785, %rs208;
	or.b32  	%r5786, %r5784, %r5785;
	or.b32  	%r5787, %r5776, %r5777;
	or.b32  	%r5788, %r5768, %r5769;
	or.b32  	%r5789, %r5760, %r5761;
	st.local.v4.u32 	[%rd29+16], {%r5789, %r5788, %r5787, %r5786};
	ld.local.v4.u32 	{%r5790, %r5791, %r5792, %r5793}, [%rd28+32];
	mov.b32	{%rs213, %rs214}, %r5790;
	shr.u16 	%rs215, %rs213, 8;
	shr.u16 	%rs216, %rs214, 8;
	mov.b32	{%rs217, %rs218}, %r5791;
	shr.u16 	%rs219, %rs217, 8;
	shr.u16 	%rs220, %rs218, 8;
	mov.b32	{%rs221, %rs222}, %r5792;
	shr.u16 	%rs223, %rs221, 8;
	shr.u16 	%rs224, %rs222, 8;
	mov.b32	{%rs225, %rs226}, %r5793;
	shr.u16 	%rs227, %rs225, 8;
	shr.u16 	%rs228, %rs226, 8;
	cvt.u32.u16	%r5798, %rs213;
	shl.b32 	%r5799, %r5798, 24;
	cvt.u32.u16	%r5800, %rs215;
	shl.b32 	%r5801, %r5800, 16;
	or.b32  	%r5802, %r5801, %r5799;
	and.b16  	%rs229, %rs214, 255;
	mul.wide.u16 	%r5803, %rs229, 256;
	or.b32  	%r5804, %r5802, %r5803;
	cvt.u32.u16	%r5805, %rs216;
	cvt.u32.u16	%r5806, %rs217;
	shl.b32 	%r5807, %r5806, 24;
	cvt.u32.u16	%r5808, %rs219;
	shl.b32 	%r5809, %r5808, 16;
	or.b32  	%r5810, %r5809, %r5807;
	and.b16  	%rs230, %rs218, 255;
	mul.wide.u16 	%r5811, %rs230, 256;
	or.b32  	%r5812, %r5810, %r5811;
	cvt.u32.u16	%r5813, %rs220;
	cvt.u32.u16	%r5814, %rs221;
	shl.b32 	%r5815, %r5814, 24;
	cvt.u32.u16	%r5816, %rs223;
	shl.b32 	%r5817, %r5816, 16;
	or.b32  	%r5818, %r5817, %r5815;
	and.b16  	%rs231, %rs222, 255;
	mul.wide.u16 	%r5819, %rs231, 256;
	or.b32  	%r5820, %r5818, %r5819;
	cvt.u32.u16	%r5821, %rs224;
	cvt.u32.u16	%r5822, %rs225;
	shl.b32 	%r5823, %r5822, 24;
	cvt.u32.u16	%r5824, %rs227;
	shl.b32 	%r5825, %r5824, 16;
	or.b32  	%r5826, %r5825, %r5823;
	and.b16  	%rs232, %rs226, 255;
	mul.wide.u16 	%r5827, %rs232, 256;
	or.b32  	%r5828, %r5826, %r5827;
	cvt.u32.u16	%r5829, %rs228;
	or.b32  	%r5830, %r5828, %r5829;
	or.b32  	%r5831, %r5820, %r5821;
	or.b32  	%r5832, %r5812, %r5813;
	or.b32  	%r5833, %r5804, %r5805;
	st.local.v4.u32 	[%rd29+32], {%r5833, %r5832, %r5831, %r5830};
	shr.u32 	%r5834, %r5701, 7;
	shl.b32 	%r5835, %r5682, 25;
	or.b32  	%r5836, %r5834, %r5835;
	shr.u32 	%r5837, %r5679, 18;
	shl.b32 	%r5838, %r5701, 14;
	or.b32  	%r5839, %r5837, %r5838;
	xor.b32  	%r5840, %r5836, %r5839;
	shr.u32 	%r5841, %r5701, 3;
	xor.b32  	%r5842, %r5840, %r5841;
	shr.u32 	%r5843, %r5818, 17;
	shl.b32 	%r5844, %r5831, 15;
	or.b32  	%r5845, %r5843, %r5844;
	shr.u32 	%r5846, %r5818, 19;
	shl.b32 	%r5847, %r5831, 13;
	or.b32  	%r5848, %r5846, %r5847;
	xor.b32  	%r5849, %r5845, %r5848;
	shr.u32 	%r5850, %r5820, 10;
	xor.b32  	%r5851, %r5849, %r5850;
	add.s32 	%r5852, %r5788, %r6684;
	add.s32 	%r5853, %r5852, %r5842;
	shr.u32 	%r5854, %r5700, 7;
	shl.b32 	%r5855, %r5690, 25;
	or.b32  	%r5856, %r5854, %r5855;
	shr.u32 	%r5857, %r5687, 18;
	shl.b32 	%r5858, %r5700, 14;
	or.b32  	%r5859, %r5857, %r5858;
	xor.b32  	%r5860, %r5856, %r5859;
	shr.u32 	%r5861, %r5700, 3;
	xor.b32  	%r5862, %r5860, %r5861;
	shr.u32 	%r5863, %r5826, 17;
	shl.b32 	%r5864, %r5830, 15;
	or.b32  	%r5865, %r5863, %r5864;
	shr.u32 	%r5866, %r5826, 19;
	shl.b32 	%r5867, %r5830, 13;
	or.b32  	%r5868, %r5866, %r5867;
	xor.b32  	%r5869, %r5865, %r5868;
	shr.u32 	%r5870, %r5828, 10;
	xor.b32  	%r5871, %r5869, %r5870;
	add.s32 	%r5872, %r5787, %r5701;
	add.s32 	%r5873, %r5872, %r5862;
	shr.u32 	%r5874, %r5699, 7;
	shl.b32 	%r5875, %r5698, 25;
	or.b32  	%r5876, %r5874, %r5875;
	shr.u32 	%r5877, %r5695, 18;
	shl.b32 	%r5878, %r5699, 14;
	or.b32  	%r5879, %r5877, %r5878;
	xor.b32  	%r5880, %r5876, %r5879;
	shr.u32 	%r5881, %r5699, 3;
	xor.b32  	%r5882, %r5880, %r5881;
	add.s32 	%r5883, %r5853, %r5851;
	shf.l.wrap.b32 	%r5884, %r5883, %r5883, 15;
	shf.l.wrap.b32 	%r5885, %r5883, %r5883, 13;
	xor.b32  	%r5886, %r5884, %r5885;
	shr.u32 	%r5887, %r5883, 10;
	xor.b32  	%r5888, %r5886, %r5887;
	add.s32 	%r5889, %r5786, %r5700;
	add.s32 	%r5890, %r5889, %r5882;
	shr.u32 	%r5891, %r5745, 7;
	shl.b32 	%r5892, %r5717, 25;
	or.b32  	%r5893, %r5891, %r5892;
	shr.u32 	%r5894, %r5714, 18;
	shl.b32 	%r5895, %r5745, 14;
	or.b32  	%r5896, %r5894, %r5895;
	xor.b32  	%r5897, %r5893, %r5896;
	shr.u32 	%r5898, %r5745, 3;
	xor.b32  	%r5899, %r5897, %r5898;
	add.s32 	%r5900, %r5873, %r5871;
	shf.l.wrap.b32 	%r5901, %r5900, %r5900, 15;
	shf.l.wrap.b32 	%r5902, %r5900, %r5900, 13;
	xor.b32  	%r5903, %r5901, %r5902;
	shr.u32 	%r5904, %r5900, 10;
	xor.b32  	%r5905, %r5903, %r5904;
	add.s32 	%r5906, %r5833, %r5699;
	add.s32 	%r5907, %r5906, %r5899;
	add.s32 	%r5908, %r5907, %r5905;
	add.s32 	%r5909, %r5890, %r5888;
	st.local.v4.u32 	[%rd29+48], {%r5883, %r5900, %r5909, %r5908};
	shr.u32 	%r5910, %r5744, 7;
	shl.b32 	%r5911, %r5725, 25;
	or.b32  	%r5912, %r5910, %r5911;
	shr.u32 	%r5913, %r5722, 18;
	shl.b32 	%r5914, %r5744, 14;
	or.b32  	%r5915, %r5913, %r5914;
	xor.b32  	%r5916, %r5912, %r5915;
	shr.u32 	%r5917, %r5744, 3;
	xor.b32  	%r5918, %r5916, %r5917;
	shf.l.wrap.b32 	%r5919, %r5909, %r5909, 15;
	shf.l.wrap.b32 	%r5920, %r5909, %r5909, 13;
	xor.b32  	%r5921, %r5919, %r5920;
	shr.u32 	%r5922, %r5909, 10;
	xor.b32  	%r5923, %r5921, %r5922;
	add.s32 	%r5924, %r5832, %r5745;
	add.s32 	%r5925, %r5924, %r5918;
	shr.u32 	%r5926, %r5743, 7;
	shl.b32 	%r5927, %r5733, 25;
	or.b32  	%r5928, %r5926, %r5927;
	shr.u32 	%r5929, %r5730, 18;
	shl.b32 	%r5930, %r5743, 14;
	or.b32  	%r5931, %r5929, %r5930;
	xor.b32  	%r5932, %r5928, %r5931;
	shr.u32 	%r5933, %r5743, 3;
	xor.b32  	%r5934, %r5932, %r5933;
	shf.l.wrap.b32 	%r5935, %r5908, %r5908, 15;
	shf.l.wrap.b32 	%r5936, %r5908, %r5908, 13;
	xor.b32  	%r5937, %r5935, %r5936;
	shr.u32 	%r5938, %r5908, 10;
	xor.b32  	%r5939, %r5937, %r5938;
	add.s32 	%r5940, %r5831, %r5744;
	add.s32 	%r5941, %r5940, %r5934;
	shr.u32 	%r5942, %r5742, 7;
	shl.b32 	%r5943, %r5741, 25;
	or.b32  	%r5944, %r5942, %r5943;
	shr.u32 	%r5945, %r5738, 18;
	shl.b32 	%r5946, %r5742, 14;
	or.b32  	%r5947, %r5945, %r5946;
	xor.b32  	%r5948, %r5944, %r5947;
	shr.u32 	%r5949, %r5742, 3;
	xor.b32  	%r5950, %r5948, %r5949;
	add.s32 	%r5951, %r5925, %r5923;
	shf.l.wrap.b32 	%r5952, %r5951, %r5951, 15;
	shf.l.wrap.b32 	%r5953, %r5951, %r5951, 13;
	xor.b32  	%r5954, %r5952, %r5953;
	shr.u32 	%r5955, %r5951, 10;
	xor.b32  	%r5956, %r5954, %r5955;
	add.s32 	%r5957, %r5830, %r5743;
	add.s32 	%r5958, %r5957, %r5950;
	shr.u32 	%r5959, %r5789, 7;
	shl.b32 	%r5960, %r5761, 25;
	or.b32  	%r5961, %r5959, %r5960;
	shr.u32 	%r5962, %r5758, 18;
	shl.b32 	%r5963, %r5789, 14;
	or.b32  	%r5964, %r5962, %r5963;
	xor.b32  	%r5965, %r5961, %r5964;
	shr.u32 	%r5966, %r5789, 3;
	xor.b32  	%r5967, %r5965, %r5966;
	add.s32 	%r5968, %r5941, %r5939;
	shf.l.wrap.b32 	%r5969, %r5968, %r5968, 15;
	shf.l.wrap.b32 	%r5970, %r5968, %r5968, 13;
	xor.b32  	%r5971, %r5969, %r5970;
	shr.u32 	%r5972, %r5968, 10;
	xor.b32  	%r5973, %r5971, %r5972;
	add.s32 	%r5974, %r5883, %r5742;
	add.s32 	%r5975, %r5974, %r5967;
	add.s32 	%r5976, %r5975, %r5973;
	add.s32 	%r5977, %r5958, %r5956;
	st.local.v4.u32 	[%rd29+64], {%r5951, %r5968, %r5977, %r5976};
	shr.u32 	%r5978, %r5788, 7;
	shl.b32 	%r5979, %r5769, 25;
	or.b32  	%r5980, %r5978, %r5979;
	shr.u32 	%r5981, %r5766, 18;
	shl.b32 	%r5982, %r5788, 14;
	or.b32  	%r5983, %r5981, %r5982;
	xor.b32  	%r5984, %r5980, %r5983;
	shr.u32 	%r5985, %r5788, 3;
	xor.b32  	%r5986, %r5984, %r5985;
	shf.l.wrap.b32 	%r5987, %r5977, %r5977, 15;
	shf.l.wrap.b32 	%r5988, %r5977, %r5977, 13;
	xor.b32  	%r5989, %r5987, %r5988;
	shr.u32 	%r5990, %r5977, 10;
	xor.b32  	%r5991, %r5989, %r5990;
	add.s32 	%r5992, %r5900, %r5789;
	add.s32 	%r5993, %r5992, %r5986;
	shr.u32 	%r5994, %r5787, 7;
	shl.b32 	%r5995, %r5777, 25;
	or.b32  	%r5996, %r5994, %r5995;
	shr.u32 	%r5997, %r5774, 18;
	shl.b32 	%r5998, %r5787, 14;
	or.b32  	%r5999, %r5997, %r5998;
	xor.b32  	%r6000, %r5996, %r5999;
	shr.u32 	%r6001, %r5787, 3;
	xor.b32  	%r6002, %r6000, %r6001;
	shf.l.wrap.b32 	%r6003, %r5976, %r5976, 15;
	shf.l.wrap.b32 	%r6004, %r5976, %r5976, 13;
	xor.b32  	%r6005, %r6003, %r6004;
	shr.u32 	%r6006, %r5976, 10;
	xor.b32  	%r6007, %r6005, %r6006;
	add.s32 	%r6008, %r5909, %r5788;
	add.s32 	%r6009, %r6008, %r6002;
	shr.u32 	%r6010, %r5786, 7;
	shl.b32 	%r6011, %r5785, 25;
	or.b32  	%r6012, %r6010, %r6011;
	shr.u32 	%r6013, %r5782, 18;
	shl.b32 	%r6014, %r5786, 14;
	or.b32  	%r6015, %r6013, %r6014;
	xor.b32  	%r6016, %r6012, %r6015;
	shr.u32 	%r6017, %r5786, 3;
	xor.b32  	%r6018, %r6016, %r6017;
	add.s32 	%r6019, %r5993, %r5991;
	shf.l.wrap.b32 	%r6020, %r6019, %r6019, 15;
	shf.l.wrap.b32 	%r6021, %r6019, %r6019, 13;
	xor.b32  	%r6022, %r6020, %r6021;
	shr.u32 	%r6023, %r6019, 10;
	xor.b32  	%r6024, %r6022, %r6023;
	add.s32 	%r6025, %r5908, %r5787;
	add.s32 	%r6026, %r6025, %r6018;
	shr.u32 	%r6027, %r5833, 7;
	shl.b32 	%r6028, %r5805, 25;
	or.b32  	%r6029, %r6027, %r6028;
	shr.u32 	%r6030, %r5802, 18;
	shl.b32 	%r6031, %r5833, 14;
	or.b32  	%r6032, %r6030, %r6031;
	xor.b32  	%r6033, %r6029, %r6032;
	shr.u32 	%r6034, %r5833, 3;
	xor.b32  	%r6035, %r6033, %r6034;
	add.s32 	%r6036, %r6009, %r6007;
	shf.l.wrap.b32 	%r6037, %r6036, %r6036, 15;
	shf.l.wrap.b32 	%r6038, %r6036, %r6036, 13;
	xor.b32  	%r6039, %r6037, %r6038;
	shr.u32 	%r6040, %r6036, 10;
	xor.b32  	%r6041, %r6039, %r6040;
	add.s32 	%r6042, %r5951, %r5786;
	add.s32 	%r6043, %r6042, %r6035;
	add.s32 	%r6044, %r6043, %r6041;
	add.s32 	%r6045, %r6026, %r6024;
	st.local.v4.u32 	[%rd29+80], {%r6019, %r6036, %r6045, %r6044};
	shr.u32 	%r6046, %r5832, 7;
	shl.b32 	%r6047, %r5813, 25;
	or.b32  	%r6048, %r6046, %r6047;
	shr.u32 	%r6049, %r5810, 18;
	shl.b32 	%r6050, %r5832, 14;
	or.b32  	%r6051, %r6049, %r6050;
	xor.b32  	%r6052, %r6048, %r6051;
	shr.u32 	%r6053, %r5832, 3;
	xor.b32  	%r6054, %r6052, %r6053;
	shf.l.wrap.b32 	%r6055, %r6045, %r6045, 15;
	shf.l.wrap.b32 	%r6056, %r6045, %r6045, 13;
	xor.b32  	%r6057, %r6055, %r6056;
	shr.u32 	%r6058, %r6045, 10;
	xor.b32  	%r6059, %r6057, %r6058;
	add.s32 	%r6060, %r5968, %r5833;
	add.s32 	%r6061, %r6060, %r6054;
	shr.u32 	%r6062, %r5831, 7;
	shl.b32 	%r6063, %r5821, 25;
	or.b32  	%r6064, %r6062, %r6063;
	shr.u32 	%r6065, %r5818, 18;
	shl.b32 	%r6066, %r5831, 14;
	or.b32  	%r6067, %r6065, %r6066;
	xor.b32  	%r6068, %r6064, %r6067;
	shr.u32 	%r6069, %r5831, 3;
	xor.b32  	%r6070, %r6068, %r6069;
	shf.l.wrap.b32 	%r6071, %r6044, %r6044, 15;
	shf.l.wrap.b32 	%r6072, %r6044, %r6044, 13;
	xor.b32  	%r6073, %r6071, %r6072;
	shr.u32 	%r6074, %r6044, 10;
	xor.b32  	%r6075, %r6073, %r6074;
	add.s32 	%r6076, %r5977, %r5832;
	add.s32 	%r6077, %r6076, %r6070;
	shr.u32 	%r6078, %r5830, 7;
	shl.b32 	%r6079, %r5829, 25;
	or.b32  	%r6080, %r6078, %r6079;
	shr.u32 	%r6081, %r5826, 18;
	shl.b32 	%r6082, %r5830, 14;
	or.b32  	%r6083, %r6081, %r6082;
	xor.b32  	%r6084, %r6080, %r6083;
	shr.u32 	%r6085, %r5830, 3;
	xor.b32  	%r6086, %r6084, %r6085;
	add.s32 	%r6087, %r6061, %r6059;
	shf.l.wrap.b32 	%r6088, %r6087, %r6087, 15;
	shf.l.wrap.b32 	%r6089, %r6087, %r6087, 13;
	xor.b32  	%r6090, %r6088, %r6089;
	shr.u32 	%r6091, %r6087, 10;
	xor.b32  	%r6092, %r6090, %r6091;
	add.s32 	%r6093, %r5976, %r5831;
	add.s32 	%r6094, %r6093, %r6086;
	shf.l.wrap.b32 	%r6095, %r5883, %r5883, 25;
	shf.l.wrap.b32 	%r6096, %r5883, %r5883, 14;
	xor.b32  	%r6097, %r6095, %r6096;
	shr.u32 	%r6098, %r5883, 3;
	xor.b32  	%r6099, %r6097, %r6098;
	add.s32 	%r6100, %r6077, %r6075;
	shf.l.wrap.b32 	%r6101, %r6100, %r6100, 15;
	shf.l.wrap.b32 	%r6102, %r6100, %r6100, 13;
	xor.b32  	%r6103, %r6101, %r6102;
	shr.u32 	%r6104, %r6100, 10;
	xor.b32  	%r6105, %r6103, %r6104;
	add.s32 	%r6106, %r6019, %r5830;
	add.s32 	%r6107, %r6106, %r6099;
	add.s32 	%r6108, %r6107, %r6105;
	add.s32 	%r6109, %r6094, %r6092;
	st.local.v4.u32 	[%rd29+96], {%r6087, %r6100, %r6109, %r6108};
	shf.l.wrap.b32 	%r6110, %r5900, %r5900, 25;
	shf.l.wrap.b32 	%r6111, %r5900, %r5900, 14;
	xor.b32  	%r6112, %r6110, %r6111;
	shr.u32 	%r6113, %r5900, 3;
	xor.b32  	%r6114, %r6112, %r6113;
	shf.l.wrap.b32 	%r6115, %r6109, %r6109, 15;
	shf.l.wrap.b32 	%r6116, %r6109, %r6109, 13;
	xor.b32  	%r6117, %r6115, %r6116;
	shr.u32 	%r6118, %r6109, 10;
	xor.b32  	%r6119, %r6117, %r6118;
	add.s32 	%r6120, %r6036, %r5883;
	add.s32 	%r6121, %r6120, %r6114;
	shf.l.wrap.b32 	%r6122, %r5909, %r5909, 25;
	shf.l.wrap.b32 	%r6123, %r5909, %r5909, 14;
	xor.b32  	%r6124, %r6122, %r6123;
	shr.u32 	%r6125, %r5909, 3;
	xor.b32  	%r6126, %r6124, %r6125;
	shf.l.wrap.b32 	%r6127, %r6108, %r6108, 15;
	shf.l.wrap.b32 	%r6128, %r6108, %r6108, 13;
	xor.b32  	%r6129, %r6127, %r6128;
	shr.u32 	%r6130, %r6108, 10;
	xor.b32  	%r6131, %r6129, %r6130;
	add.s32 	%r6132, %r6045, %r5900;
	add.s32 	%r6133, %r6132, %r6126;
	shf.l.wrap.b32 	%r6134, %r5908, %r5908, 25;
	shf.l.wrap.b32 	%r6135, %r5908, %r5908, 14;
	xor.b32  	%r6136, %r6134, %r6135;
	shr.u32 	%r6137, %r5908, 3;
	xor.b32  	%r6138, %r6136, %r6137;
	add.s32 	%r6139, %r6121, %r6119;
	shf.l.wrap.b32 	%r6140, %r6139, %r6139, 15;
	shf.l.wrap.b32 	%r6141, %r6139, %r6139, 13;
	xor.b32  	%r6142, %r6140, %r6141;
	shr.u32 	%r6143, %r6139, 10;
	xor.b32  	%r6144, %r6142, %r6143;
	add.s32 	%r6145, %r6044, %r5909;
	add.s32 	%r6146, %r6145, %r6138;
	shf.l.wrap.b32 	%r6147, %r5951, %r5951, 25;
	shf.l.wrap.b32 	%r6148, %r5951, %r5951, 14;
	xor.b32  	%r6149, %r6147, %r6148;
	shr.u32 	%r6150, %r5951, 3;
	xor.b32  	%r6151, %r6149, %r6150;
	add.s32 	%r6152, %r6133, %r6131;
	shf.l.wrap.b32 	%r6153, %r6152, %r6152, 15;
	shf.l.wrap.b32 	%r6154, %r6152, %r6152, 13;
	xor.b32  	%r6155, %r6153, %r6154;
	shr.u32 	%r6156, %r6152, 10;
	xor.b32  	%r6157, %r6155, %r6156;
	add.s32 	%r6158, %r6087, %r5908;
	add.s32 	%r6159, %r6158, %r6151;
	add.s32 	%r6160, %r6159, %r6157;
	add.s32 	%r6161, %r6146, %r6144;
	st.local.v4.u32 	[%rd29+112], {%r6139, %r6152, %r6161, %r6160};
	shf.l.wrap.b32 	%r6162, %r5968, %r5968, 25;
	shf.l.wrap.b32 	%r6163, %r5968, %r5968, 14;
	xor.b32  	%r6164, %r6162, %r6163;
	shr.u32 	%r6165, %r5968, 3;
	xor.b32  	%r6166, %r6164, %r6165;
	shf.l.wrap.b32 	%r6167, %r6161, %r6161, 15;
	shf.l.wrap.b32 	%r6168, %r6161, %r6161, 13;
	xor.b32  	%r6169, %r6167, %r6168;
	shr.u32 	%r6170, %r6161, 10;
	xor.b32  	%r6171, %r6169, %r6170;
	add.s32 	%r6172, %r6100, %r5951;
	add.s32 	%r6173, %r6172, %r6166;
	shf.l.wrap.b32 	%r6174, %r5977, %r5977, 25;
	shf.l.wrap.b32 	%r6175, %r5977, %r5977, 14;
	xor.b32  	%r6176, %r6174, %r6175;
	shr.u32 	%r6177, %r5977, 3;
	xor.b32  	%r6178, %r6176, %r6177;
	shf.l.wrap.b32 	%r6179, %r6160, %r6160, 15;
	shf.l.wrap.b32 	%r6180, %r6160, %r6160, 13;
	xor.b32  	%r6181, %r6179, %r6180;
	shr.u32 	%r6182, %r6160, 10;
	xor.b32  	%r6183, %r6181, %r6182;
	add.s32 	%r6184, %r6109, %r5968;
	add.s32 	%r6185, %r6184, %r6178;
	shf.l.wrap.b32 	%r6186, %r5976, %r5976, 25;
	shf.l.wrap.b32 	%r6187, %r5976, %r5976, 14;
	xor.b32  	%r6188, %r6186, %r6187;
	shr.u32 	%r6189, %r5976, 3;
	xor.b32  	%r6190, %r6188, %r6189;
	add.s32 	%r6191, %r6173, %r6171;
	shf.l.wrap.b32 	%r6192, %r6191, %r6191, 15;
	shf.l.wrap.b32 	%r6193, %r6191, %r6191, 13;
	xor.b32  	%r6194, %r6192, %r6193;
	shr.u32 	%r6195, %r6191, 10;
	xor.b32  	%r6196, %r6194, %r6195;
	add.s32 	%r6197, %r6108, %r5977;
	add.s32 	%r6198, %r6197, %r6190;
	shf.l.wrap.b32 	%r6199, %r6019, %r6019, 25;
	shf.l.wrap.b32 	%r6200, %r6019, %r6019, 14;
	xor.b32  	%r6201, %r6199, %r6200;
	shr.u32 	%r6202, %r6019, 3;
	xor.b32  	%r6203, %r6201, %r6202;
	add.s32 	%r6204, %r6185, %r6183;
	shf.l.wrap.b32 	%r6205, %r6204, %r6204, 15;
	shf.l.wrap.b32 	%r6206, %r6204, %r6204, 13;
	xor.b32  	%r6207, %r6205, %r6206;
	shr.u32 	%r6208, %r6204, 10;
	xor.b32  	%r6209, %r6207, %r6208;
	add.s32 	%r6210, %r6139, %r5976;
	add.s32 	%r6211, %r6210, %r6203;
	add.s32 	%r6212, %r6211, %r6209;
	add.s32 	%r6213, %r6198, %r6196;
	st.local.v4.u32 	[%rd29+128], {%r6191, %r6204, %r6213, %r6212};
	shf.l.wrap.b32 	%r6214, %r6036, %r6036, 25;
	shf.l.wrap.b32 	%r6215, %r6036, %r6036, 14;
	xor.b32  	%r6216, %r6214, %r6215;
	shr.u32 	%r6217, %r6036, 3;
	xor.b32  	%r6218, %r6216, %r6217;
	shf.l.wrap.b32 	%r6219, %r6213, %r6213, 15;
	shf.l.wrap.b32 	%r6220, %r6213, %r6213, 13;
	xor.b32  	%r6221, %r6219, %r6220;
	shr.u32 	%r6222, %r6213, 10;
	xor.b32  	%r6223, %r6221, %r6222;
	add.s32 	%r6224, %r6152, %r6019;
	add.s32 	%r6225, %r6224, %r6218;
	shf.l.wrap.b32 	%r6226, %r6045, %r6045, 25;
	shf.l.wrap.b32 	%r6227, %r6045, %r6045, 14;
	xor.b32  	%r6228, %r6226, %r6227;
	shr.u32 	%r6229, %r6045, 3;
	xor.b32  	%r6230, %r6228, %r6229;
	shf.l.wrap.b32 	%r6231, %r6212, %r6212, 15;
	shf.l.wrap.b32 	%r6232, %r6212, %r6212, 13;
	xor.b32  	%r6233, %r6231, %r6232;
	shr.u32 	%r6234, %r6212, 10;
	xor.b32  	%r6235, %r6233, %r6234;
	add.s32 	%r6236, %r6161, %r6036;
	add.s32 	%r6237, %r6236, %r6230;
	shf.l.wrap.b32 	%r6238, %r6044, %r6044, 25;
	shf.l.wrap.b32 	%r6239, %r6044, %r6044, 14;
	xor.b32  	%r6240, %r6238, %r6239;
	shr.u32 	%r6241, %r6044, 3;
	xor.b32  	%r6242, %r6240, %r6241;
	add.s32 	%r6243, %r6225, %r6223;
	shf.l.wrap.b32 	%r6244, %r6243, %r6243, 15;
	shf.l.wrap.b32 	%r6245, %r6243, %r6243, 13;
	xor.b32  	%r6246, %r6244, %r6245;
	shr.u32 	%r6247, %r6243, 10;
	xor.b32  	%r6248, %r6246, %r6247;
	add.s32 	%r6249, %r6160, %r6045;
	add.s32 	%r6250, %r6249, %r6242;
	shf.l.wrap.b32 	%r6251, %r6087, %r6087, 25;
	shf.l.wrap.b32 	%r6252, %r6087, %r6087, 14;
	xor.b32  	%r6253, %r6251, %r6252;
	shr.u32 	%r6254, %r6087, 3;
	xor.b32  	%r6255, %r6253, %r6254;
	add.s32 	%r6256, %r6237, %r6235;
	shf.l.wrap.b32 	%r6257, %r6256, %r6256, 15;
	shf.l.wrap.b32 	%r6258, %r6256, %r6256, 13;
	xor.b32  	%r6259, %r6257, %r6258;
	shr.u32 	%r6260, %r6256, 10;
	xor.b32  	%r6261, %r6259, %r6260;
	add.s32 	%r6262, %r6191, %r6044;
	add.s32 	%r6263, %r6262, %r6255;
	add.s32 	%r6264, %r6263, %r6261;
	add.s32 	%r6265, %r6250, %r6248;
	st.local.v4.u32 	[%rd29+144], {%r6243, %r6256, %r6265, %r6264};
	shf.l.wrap.b32 	%r6266, %r6100, %r6100, 25;
	shf.l.wrap.b32 	%r6267, %r6100, %r6100, 14;
	xor.b32  	%r6268, %r6266, %r6267;
	shr.u32 	%r6269, %r6100, 3;
	xor.b32  	%r6270, %r6268, %r6269;
	shf.l.wrap.b32 	%r6271, %r6265, %r6265, 15;
	shf.l.wrap.b32 	%r6272, %r6265, %r6265, 13;
	xor.b32  	%r6273, %r6271, %r6272;
	shr.u32 	%r6274, %r6265, 10;
	xor.b32  	%r6275, %r6273, %r6274;
	add.s32 	%r6276, %r6204, %r6087;
	add.s32 	%r6277, %r6276, %r6270;
	shf.l.wrap.b32 	%r6278, %r6109, %r6109, 25;
	shf.l.wrap.b32 	%r6279, %r6109, %r6109, 14;
	xor.b32  	%r6280, %r6278, %r6279;
	shr.u32 	%r6281, %r6109, 3;
	xor.b32  	%r6282, %r6280, %r6281;
	shf.l.wrap.b32 	%r6283, %r6264, %r6264, 15;
	shf.l.wrap.b32 	%r6284, %r6264, %r6264, 13;
	xor.b32  	%r6285, %r6283, %r6284;
	shr.u32 	%r6286, %r6264, 10;
	xor.b32  	%r6287, %r6285, %r6286;
	add.s32 	%r6288, %r6213, %r6100;
	add.s32 	%r6289, %r6288, %r6282;
	shf.l.wrap.b32 	%r6290, %r6108, %r6108, 25;
	shf.l.wrap.b32 	%r6291, %r6108, %r6108, 14;
	xor.b32  	%r6292, %r6290, %r6291;
	shr.u32 	%r6293, %r6108, 3;
	xor.b32  	%r6294, %r6292, %r6293;
	add.s32 	%r6295, %r6277, %r6275;
	shf.l.wrap.b32 	%r6296, %r6295, %r6295, 15;
	shf.l.wrap.b32 	%r6297, %r6295, %r6295, 13;
	xor.b32  	%r6298, %r6296, %r6297;
	shr.u32 	%r6299, %r6295, 10;
	xor.b32  	%r6300, %r6298, %r6299;
	add.s32 	%r6301, %r6212, %r6109;
	add.s32 	%r6302, %r6301, %r6294;
	shf.l.wrap.b32 	%r6303, %r6139, %r6139, 25;
	shf.l.wrap.b32 	%r6304, %r6139, %r6139, 14;
	xor.b32  	%r6305, %r6303, %r6304;
	shr.u32 	%r6306, %r6139, 3;
	xor.b32  	%r6307, %r6305, %r6306;
	add.s32 	%r6308, %r6289, %r6287;
	shf.l.wrap.b32 	%r6309, %r6308, %r6308, 15;
	shf.l.wrap.b32 	%r6310, %r6308, %r6308, 13;
	xor.b32  	%r6311, %r6309, %r6310;
	shr.u32 	%r6312, %r6308, 10;
	xor.b32  	%r6313, %r6311, %r6312;
	add.s32 	%r6314, %r6243, %r6108;
	add.s32 	%r6315, %r6314, %r6307;
	add.s32 	%r6316, %r6315, %r6313;
	add.s32 	%r6317, %r6302, %r6300;
	st.local.v4.u32 	[%rd29+160], {%r6295, %r6308, %r6317, %r6316};
	shf.l.wrap.b32 	%r6318, %r6152, %r6152, 25;
	shf.l.wrap.b32 	%r6319, %r6152, %r6152, 14;
	xor.b32  	%r6320, %r6318, %r6319;
	shr.u32 	%r6321, %r6152, 3;
	xor.b32  	%r6322, %r6320, %r6321;
	shf.l.wrap.b32 	%r6323, %r6317, %r6317, 15;
	shf.l.wrap.b32 	%r6324, %r6317, %r6317, 13;
	xor.b32  	%r6325, %r6323, %r6324;
	shr.u32 	%r6326, %r6317, 10;
	xor.b32  	%r6327, %r6325, %r6326;
	add.s32 	%r6328, %r6256, %r6139;
	add.s32 	%r6329, %r6328, %r6322;
	shf.l.wrap.b32 	%r6330, %r6161, %r6161, 25;
	shf.l.wrap.b32 	%r6331, %r6161, %r6161, 14;
	xor.b32  	%r6332, %r6330, %r6331;
	shr.u32 	%r6333, %r6161, 3;
	xor.b32  	%r6334, %r6332, %r6333;
	shf.l.wrap.b32 	%r6335, %r6316, %r6316, 15;
	shf.l.wrap.b32 	%r6336, %r6316, %r6316, 13;
	xor.b32  	%r6337, %r6335, %r6336;
	shr.u32 	%r6338, %r6316, 10;
	xor.b32  	%r6339, %r6337, %r6338;
	add.s32 	%r6340, %r6265, %r6152;
	add.s32 	%r6341, %r6340, %r6334;
	shf.l.wrap.b32 	%r6342, %r6160, %r6160, 25;
	shf.l.wrap.b32 	%r6343, %r6160, %r6160, 14;
	xor.b32  	%r6344, %r6342, %r6343;
	shr.u32 	%r6345, %r6160, 3;
	xor.b32  	%r6346, %r6344, %r6345;
	add.s32 	%r6347, %r6329, %r6327;
	shf.l.wrap.b32 	%r6348, %r6347, %r6347, 15;
	shf.l.wrap.b32 	%r6349, %r6347, %r6347, 13;
	xor.b32  	%r6350, %r6348, %r6349;
	shr.u32 	%r6351, %r6347, 10;
	xor.b32  	%r6352, %r6350, %r6351;
	add.s32 	%r6353, %r6264, %r6161;
	add.s32 	%r6354, %r6353, %r6346;
	shf.l.wrap.b32 	%r6355, %r6191, %r6191, 25;
	shf.l.wrap.b32 	%r6356, %r6191, %r6191, 14;
	xor.b32  	%r6357, %r6355, %r6356;
	shr.u32 	%r6358, %r6191, 3;
	xor.b32  	%r6359, %r6357, %r6358;
	add.s32 	%r6360, %r6341, %r6339;
	shf.l.wrap.b32 	%r6361, %r6360, %r6360, 15;
	shf.l.wrap.b32 	%r6362, %r6360, %r6360, 13;
	xor.b32  	%r6363, %r6361, %r6362;
	shr.u32 	%r6364, %r6360, 10;
	xor.b32  	%r6365, %r6363, %r6364;
	add.s32 	%r6366, %r6295, %r6160;
	add.s32 	%r6367, %r6366, %r6359;
	add.s32 	%r6368, %r6367, %r6365;
	add.s32 	%r6369, %r6354, %r6352;
	st.local.v4.u32 	[%rd29+176], {%r6347, %r6360, %r6369, %r6368};
	shf.l.wrap.b32 	%r6370, %r6204, %r6204, 25;
	shf.l.wrap.b32 	%r6371, %r6204, %r6204, 14;
	xor.b32  	%r6372, %r6370, %r6371;
	shr.u32 	%r6373, %r6204, 3;
	xor.b32  	%r6374, %r6372, %r6373;
	shf.l.wrap.b32 	%r6375, %r6369, %r6369, 15;
	shf.l.wrap.b32 	%r6376, %r6369, %r6369, 13;
	xor.b32  	%r6377, %r6375, %r6376;
	shr.u32 	%r6378, %r6369, 10;
	xor.b32  	%r6379, %r6377, %r6378;
	add.s32 	%r6380, %r6308, %r6191;
	add.s32 	%r6381, %r6380, %r6374;
	shf.l.wrap.b32 	%r6382, %r6213, %r6213, 25;
	shf.l.wrap.b32 	%r6383, %r6213, %r6213, 14;
	xor.b32  	%r6384, %r6382, %r6383;
	shr.u32 	%r6385, %r6213, 3;
	xor.b32  	%r6386, %r6384, %r6385;
	shf.l.wrap.b32 	%r6387, %r6368, %r6368, 15;
	shf.l.wrap.b32 	%r6388, %r6368, %r6368, 13;
	xor.b32  	%r6389, %r6387, %r6388;
	shr.u32 	%r6390, %r6368, 10;
	xor.b32  	%r6391, %r6389, %r6390;
	add.s32 	%r6392, %r6317, %r6204;
	add.s32 	%r6393, %r6392, %r6386;
	shf.l.wrap.b32 	%r6394, %r6212, %r6212, 25;
	shf.l.wrap.b32 	%r6395, %r6212, %r6212, 14;
	xor.b32  	%r6396, %r6394, %r6395;
	shr.u32 	%r6397, %r6212, 3;
	xor.b32  	%r6398, %r6396, %r6397;
	add.s32 	%r6399, %r6381, %r6379;
	shf.l.wrap.b32 	%r6400, %r6399, %r6399, 15;
	shf.l.wrap.b32 	%r6401, %r6399, %r6399, 13;
	xor.b32  	%r6402, %r6400, %r6401;
	shr.u32 	%r6403, %r6399, 10;
	xor.b32  	%r6404, %r6402, %r6403;
	add.s32 	%r6405, %r6316, %r6213;
	add.s32 	%r6406, %r6405, %r6398;
	shf.l.wrap.b32 	%r6407, %r6243, %r6243, 25;
	shf.l.wrap.b32 	%r6408, %r6243, %r6243, 14;
	xor.b32  	%r6409, %r6407, %r6408;
	shr.u32 	%r6410, %r6243, 3;
	xor.b32  	%r6411, %r6409, %r6410;
	add.s32 	%r6412, %r6393, %r6391;
	shf.l.wrap.b32 	%r6413, %r6412, %r6412, 15;
	shf.l.wrap.b32 	%r6414, %r6412, %r6412, 13;
	xor.b32  	%r6415, %r6413, %r6414;
	shr.u32 	%r6416, %r6412, 10;
	xor.b32  	%r6417, %r6415, %r6416;
	add.s32 	%r6418, %r6347, %r6212;
	add.s32 	%r6419, %r6418, %r6411;
	add.s32 	%r6420, %r6419, %r6417;
	add.s32 	%r6421, %r6406, %r6404;
	st.local.v4.u32 	[%rd29+192], {%r6399, %r6412, %r6421, %r6420};
	shf.l.wrap.b32 	%r6422, %r6256, %r6256, 25;
	shf.l.wrap.b32 	%r6423, %r6256, %r6256, 14;
	xor.b32  	%r6424, %r6422, %r6423;
	shr.u32 	%r6425, %r6256, 3;
	xor.b32  	%r6426, %r6424, %r6425;
	shf.l.wrap.b32 	%r6427, %r6421, %r6421, 15;
	shf.l.wrap.b32 	%r6428, %r6421, %r6421, 13;
	xor.b32  	%r6429, %r6427, %r6428;
	shr.u32 	%r6430, %r6421, 10;
	xor.b32  	%r6431, %r6429, %r6430;
	add.s32 	%r6432, %r6360, %r6243;
	add.s32 	%r6433, %r6432, %r6426;
	shf.l.wrap.b32 	%r6434, %r6265, %r6265, 25;
	shf.l.wrap.b32 	%r6435, %r6265, %r6265, 14;
	xor.b32  	%r6436, %r6434, %r6435;
	shr.u32 	%r6437, %r6265, 3;
	xor.b32  	%r6438, %r6436, %r6437;
	shf.l.wrap.b32 	%r6439, %r6420, %r6420, 15;
	shf.l.wrap.b32 	%r6440, %r6420, %r6420, 13;
	xor.b32  	%r6441, %r6439, %r6440;
	shr.u32 	%r6442, %r6420, 10;
	xor.b32  	%r6443, %r6441, %r6442;
	add.s32 	%r6444, %r6369, %r6256;
	add.s32 	%r6445, %r6444, %r6438;
	shf.l.wrap.b32 	%r6446, %r6264, %r6264, 25;
	shf.l.wrap.b32 	%r6447, %r6264, %r6264, 14;
	xor.b32  	%r6448, %r6446, %r6447;
	shr.u32 	%r6449, %r6264, 3;
	xor.b32  	%r6450, %r6448, %r6449;
	add.s32 	%r6451, %r6433, %r6431;
	shf.l.wrap.b32 	%r6452, %r6451, %r6451, 15;
	shf.l.wrap.b32 	%r6453, %r6451, %r6451, 13;
	xor.b32  	%r6454, %r6452, %r6453;
	shr.u32 	%r6455, %r6451, 10;
	xor.b32  	%r6456, %r6454, %r6455;
	add.s32 	%r6457, %r6368, %r6265;
	add.s32 	%r6458, %r6457, %r6450;
	shf.l.wrap.b32 	%r6459, %r6295, %r6295, 25;
	shf.l.wrap.b32 	%r6460, %r6295, %r6295, 14;
	xor.b32  	%r6461, %r6459, %r6460;
	shr.u32 	%r6462, %r6295, 3;
	xor.b32  	%r6463, %r6461, %r6462;
	add.s32 	%r6464, %r6445, %r6443;
	shf.l.wrap.b32 	%r6465, %r6464, %r6464, 15;
	shf.l.wrap.b32 	%r6466, %r6464, %r6464, 13;
	xor.b32  	%r6467, %r6465, %r6466;
	shr.u32 	%r6468, %r6464, 10;
	xor.b32  	%r6469, %r6467, %r6468;
	add.s32 	%r6470, %r6399, %r6264;
	add.s32 	%r6471, %r6470, %r6463;
	add.s32 	%r6472, %r6471, %r6469;
	add.s32 	%r6473, %r6458, %r6456;
	st.local.v4.u32 	[%rd29+208], {%r6451, %r6464, %r6473, %r6472};
	shf.l.wrap.b32 	%r6474, %r6308, %r6308, 25;
	shf.l.wrap.b32 	%r6475, %r6308, %r6308, 14;
	xor.b32  	%r6476, %r6474, %r6475;
	shr.u32 	%r6477, %r6308, 3;
	xor.b32  	%r6478, %r6476, %r6477;
	shf.l.wrap.b32 	%r6479, %r6473, %r6473, 15;
	shf.l.wrap.b32 	%r6480, %r6473, %r6473, 13;
	xor.b32  	%r6481, %r6479, %r6480;
	shr.u32 	%r6482, %r6473, 10;
	xor.b32  	%r6483, %r6481, %r6482;
	add.s32 	%r6484, %r6412, %r6295;
	add.s32 	%r6485, %r6484, %r6478;
	shf.l.wrap.b32 	%r6486, %r6317, %r6317, 25;
	shf.l.wrap.b32 	%r6487, %r6317, %r6317, 14;
	xor.b32  	%r6488, %r6486, %r6487;
	shr.u32 	%r6489, %r6317, 3;
	xor.b32  	%r6490, %r6488, %r6489;
	shf.l.wrap.b32 	%r6491, %r6472, %r6472, 15;
	shf.l.wrap.b32 	%r6492, %r6472, %r6472, 13;
	xor.b32  	%r6493, %r6491, %r6492;
	shr.u32 	%r6494, %r6472, 10;
	xor.b32  	%r6495, %r6493, %r6494;
	add.s32 	%r6496, %r6421, %r6308;
	add.s32 	%r6497, %r6496, %r6490;
	shf.l.wrap.b32 	%r6498, %r6316, %r6316, 25;
	shf.l.wrap.b32 	%r6499, %r6316, %r6316, 14;
	xor.b32  	%r6500, %r6498, %r6499;
	shr.u32 	%r6501, %r6316, 3;
	xor.b32  	%r6502, %r6500, %r6501;
	add.s32 	%r6503, %r6485, %r6483;
	shf.l.wrap.b32 	%r6504, %r6503, %r6503, 15;
	shf.l.wrap.b32 	%r6505, %r6503, %r6503, 13;
	xor.b32  	%r6506, %r6504, %r6505;
	shr.u32 	%r6507, %r6503, 10;
	xor.b32  	%r6508, %r6506, %r6507;
	add.s32 	%r6509, %r6420, %r6317;
	add.s32 	%r6510, %r6509, %r6502;
	shf.l.wrap.b32 	%r6511, %r6347, %r6347, 25;
	shf.l.wrap.b32 	%r6512, %r6347, %r6347, 14;
	xor.b32  	%r6513, %r6511, %r6512;
	shr.u32 	%r6514, %r6347, 3;
	xor.b32  	%r6515, %r6513, %r6514;
	add.s32 	%r6516, %r6497, %r6495;
	shf.l.wrap.b32 	%r6517, %r6516, %r6516, 15;
	shf.l.wrap.b32 	%r6518, %r6516, %r6516, 13;
	xor.b32  	%r6519, %r6517, %r6518;
	shr.u32 	%r6520, %r6516, 10;
	xor.b32  	%r6521, %r6519, %r6520;
	add.s32 	%r6522, %r6451, %r6316;
	add.s32 	%r6523, %r6522, %r6515;
	add.s32 	%r6524, %r6523, %r6521;
	add.s32 	%r6525, %r6510, %r6508;
	st.local.v4.u32 	[%rd29+224], {%r6503, %r6516, %r6525, %r6524};
	ld.local.u32 	%r41, [%rd1+68];
	ld.local.v2.u32 	{%r6526, %r6527}, [%rd1+72];
	ld.local.v4.u32 	{%r6528, %r6529, %r6530, %r6531}, [%rd1+80];
	ld.local.u32 	%r48, [%rd1+96];
	mov.u32 	%r6683, -64;
	mov.u64 	%rd4250, k;
	mov.u64 	%rd4251, %rd2;
	mov.u32 	%r6685, %r41;
	mov.u32 	%r6686, %r6526;
	mov.u32 	%r6687, %r6527;
	mov.u32 	%r6688, %r6528;
	mov.u32 	%r6689, %r6529;
	mov.u32 	%r6690, %r6530;
	mov.u32 	%r6691, %r6531;
	mov.u32 	%r6692, %r48;
	bra.uni 	BB2_11;

BB2_12:
	add.s64 	%rd32, %rd4251, 16;
	ld.local.u32 	%r6684, [%rd4251+16];
	add.s64 	%rd4250, %rd4250, 16;
	mov.u64 	%rd4251, %rd32;

BB2_11:
	shf.l.wrap.b32 	%r6532, %r6689, %r6689, 26;
	shf.l.wrap.b32 	%r6533, %r6689, %r6689, 21;
	xor.b32  	%r6534, %r6532, %r6533;
	shf.l.wrap.b32 	%r6535, %r6689, %r6689, 7;
	xor.b32  	%r6536, %r6534, %r6535;
	not.b32 	%r6537, %r6689;
	and.b32  	%r6538, %r6691, %r6537;
	and.b32  	%r6539, %r6689, %r6690;
	xor.b32  	%r6540, %r6539, %r6538;
	add.s32 	%r6541, %r6540, %r6692;
	add.s32 	%r6542, %r6541, %r6536;
	ld.const.u32 	%r6543, [%rd4250];
	add.s32 	%r6544, %r6542, %r6543;
	add.s32 	%r6545, %r6544, %r6684;
	shf.l.wrap.b32 	%r6546, %r6685, %r6685, 30;
	shf.l.wrap.b32 	%r6547, %r6685, %r6685, 19;
	xor.b32  	%r6548, %r6546, %r6547;
	shf.l.wrap.b32 	%r6549, %r6685, %r6685, 10;
	xor.b32  	%r6550, %r6548, %r6549;
	xor.b32  	%r6551, %r6686, %r6687;
	and.b32  	%r6552, %r6685, %r6551;
	and.b32  	%r6553, %r6686, %r6687;
	xor.b32  	%r6554, %r6552, %r6553;
	add.s32 	%r6555, %r6550, %r6554;
	add.s32 	%r6692, %r6545, %r6688;
	add.s32 	%r6688, %r6555, %r6545;
	shf.l.wrap.b32 	%r6556, %r6692, %r6692, 26;
	shf.l.wrap.b32 	%r6557, %r6692, %r6692, 21;
	xor.b32  	%r6558, %r6556, %r6557;
	shf.l.wrap.b32 	%r6559, %r6692, %r6692, 7;
	xor.b32  	%r6560, %r6558, %r6559;
	and.b32  	%r6561, %r6692, %r6689;
	not.b32 	%r6562, %r6692;
	and.b32  	%r6563, %r6690, %r6562;
	xor.b32  	%r6564, %r6561, %r6563;
	add.s32 	%r6565, %r6564, %r6691;
	add.s32 	%r6566, %r6565, %r6560;
	ld.const.u32 	%r6567, [%rd4250+4];
	add.s32 	%r6568, %r6566, %r6567;
	ld.local.u32 	%r6569, [%rd4251+4];
	add.s32 	%r6570, %r6568, %r6569;
	shf.l.wrap.b32 	%r6571, %r6688, %r6688, 30;
	shf.l.wrap.b32 	%r6572, %r6688, %r6688, 19;
	xor.b32  	%r6573, %r6571, %r6572;
	shf.l.wrap.b32 	%r6574, %r6688, %r6688, 10;
	xor.b32  	%r6575, %r6573, %r6574;
	xor.b32  	%r6576, %r6685, %r6686;
	and.b32  	%r6577, %r6688, %r6576;
	and.b32  	%r6578, %r6685, %r6686;
	xor.b32  	%r6579, %r6577, %r6578;
	add.s32 	%r6580, %r6575, %r6579;
	add.s32 	%r6691, %r6570, %r6687;
	add.s32 	%r6687, %r6580, %r6570;
	shf.l.wrap.b32 	%r6581, %r6691, %r6691, 26;
	shf.l.wrap.b32 	%r6582, %r6691, %r6691, 21;
	xor.b32  	%r6583, %r6581, %r6582;
	shf.l.wrap.b32 	%r6584, %r6691, %r6691, 7;
	xor.b32  	%r6585, %r6583, %r6584;
	and.b32  	%r6586, %r6691, %r6692;
	not.b32 	%r6587, %r6691;
	and.b32  	%r6588, %r6689, %r6587;
	xor.b32  	%r6589, %r6586, %r6588;
	add.s32 	%r6590, %r6589, %r6690;
	add.s32 	%r6591, %r6590, %r6585;
	ld.const.u32 	%r6592, [%rd4250+8];
	add.s32 	%r6593, %r6591, %r6592;
	ld.local.v2.u32 	{%r6594, %r6595}, [%rd4251+8];
	add.s32 	%r6597, %r6593, %r6594;
	shf.l.wrap.b32 	%r6598, %r6687, %r6687, 30;
	shf.l.wrap.b32 	%r6599, %r6687, %r6687, 19;
	xor.b32  	%r6600, %r6598, %r6599;
	shf.l.wrap.b32 	%r6601, %r6687, %r6687, 10;
	xor.b32  	%r6602, %r6600, %r6601;
	xor.b32  	%r6603, %r6688, %r6685;
	and.b32  	%r6604, %r6687, %r6603;
	and.b32  	%r6605, %r6688, %r6685;
	xor.b32  	%r6606, %r6604, %r6605;
	add.s32 	%r6607, %r6602, %r6606;
	add.s32 	%r6690, %r6597, %r6686;
	add.s32 	%r6686, %r6607, %r6597;
	shf.l.wrap.b32 	%r6608, %r6690, %r6690, 26;
	shf.l.wrap.b32 	%r6609, %r6690, %r6690, 21;
	xor.b32  	%r6610, %r6608, %r6609;
	shf.l.wrap.b32 	%r6611, %r6690, %r6690, 7;
	xor.b32  	%r6612, %r6610, %r6611;
	and.b32  	%r6613, %r6690, %r6691;
	not.b32 	%r6614, %r6690;
	and.b32  	%r6615, %r6692, %r6614;
	xor.b32  	%r6616, %r6613, %r6615;
	add.s32 	%r6617, %r6616, %r6689;
	add.s32 	%r6618, %r6617, %r6612;
	ld.const.u32 	%r6619, [%rd4250+12];
	add.s32 	%r6620, %r6618, %r6619;
	add.s32 	%r6622, %r6620, %r6595;
	shf.l.wrap.b32 	%r6623, %r6686, %r6686, 30;
	shf.l.wrap.b32 	%r6624, %r6686, %r6686, 19;
	xor.b32  	%r6625, %r6623, %r6624;
	shf.l.wrap.b32 	%r6626, %r6686, %r6686, 10;
	xor.b32  	%r6627, %r6625, %r6626;
	xor.b32  	%r6628, %r6687, %r6688;
	and.b32  	%r6629, %r6686, %r6628;
	and.b32  	%r6630, %r6687, %r6688;
	xor.b32  	%r6631, %r6629, %r6630;
	add.s32 	%r6632, %r6627, %r6631;
	add.s32 	%r6689, %r6622, %r6685;
	add.s32 	%r6685, %r6632, %r6622;
	add.s32 	%r6683, %r6683, 4;
	setp.eq.s32	%p7, %r6683, 0;
	@%p7 bra 	BB2_13;
	bra.uni 	BB2_12;

BB2_13:
	add.s32 	%r6634, %r41, %r6685;
	st.local.u32 	[%rd1+68], %r6634;
	add.s32 	%r6635, %r6527, %r6687;
	add.s32 	%r6636, %r6526, %r6686;
	st.local.v2.u32 	[%rd1+72], {%r6636, %r6635};
	add.s32 	%r6637, %r6531, %r6691;
	add.s32 	%r6638, %r6530, %r6690;
	add.s32 	%r6639, %r6529, %r6689;
	add.s32 	%r6640, %r6528, %r6688;
	st.local.v4.u32 	[%rd1+80], {%r6640, %r6639, %r6638, %r6637};
	add.s32 	%r6641, %r48, %r6692;
	st.local.u32 	[%rd1+96], %r6641;
	mov.u32 	%r6680, 0;
	st.local.u32 	[%rd1+64], %r6680;

BB2_14:
	add.s32 	%r6682, %r6682, 1;
	setp.lt.u32	%p8, %r6682, %r36;
	@%p8 bra 	BB2_9;

BB2_15:
	ld.param.u64 	%rd4244, [scanHash_param_2];
	ld.local.u32 	%r6642, [%rd1+92];
	shr.u32 	%r6643, %r6642, 24;
	cvt.u64.u32	%rd4217, %r6643;
	shr.u32 	%r6644, %r6642, 8;
	cvt.u64.u32	%rd4218, %r6644;
	shl.b32 	%r6645, %r6642, 8;
	cvt.u64.u32	%rd4219, %r6645;
	and.b64  	%rd4220, %rd4218, 65280;
	or.b64  	%rd4221, %rd4217, %rd4220;
	shl.b32 	%r6646, %r6642, 24;
	cvt.u64.u32	%rd4222, %r6646;
	and.b64  	%rd4223, %rd4219, 16711680;
	or.b64  	%rd4224, %rd4221, %rd4223;
	ld.local.u32 	%r6647, [%rd1+96];
	shr.u32 	%r6648, %r6647, 24;
	cvt.u64.u32	%rd4225, %r6648;
	shl.b64 	%rd4226, %rd4225, 32;
	or.b64  	%rd4227, %rd4224, %rd4222;
	mul.wide.u32 	%rd4228, %r6647, 16777216;
	or.b64  	%rd4229, %rd4227, %rd4226;
	shr.u32 	%r6649, %r6647, 8;
	cvt.u64.u32	%rd4230, %r6649;
	and.b64  	%rd4231, %rd4230, 255;
	and.b64  	%rd4232, %rd4228, 280375465082880;
	or.b64  	%rd4233, %rd4229, %rd4232;
	cvt.u64.u32	%rd4234, %r6647;
	shl.b64 	%rd4235, %rd4234, 56;
	shl.b64 	%rd4236, %rd4231, 48;
	or.b64  	%rd4237, %rd4233, %rd4236;
	or.b64  	%rd4238, %rd4237, %rd4235;
	setp.gt.u64	%p9, %rd4238, %rd4244;
	@%p9 bra 	BB2_17;

	ld.param.u32 	%r6663, [scanHash_param_3];
	mov.b32	%r6662, %envreg3;
	add.s32 	%r6661, %r6662, %r6663;
	mov.u32 	%r6660, %ntid.x;
	mov.u32 	%r6659, %ctaid.x;
	mov.u32 	%r6658, %tid.x;
	mad.lo.s32 	%r6657, %r6659, %r6660, %r6661;
	add.s32 	%r6656, %r6657, %r6658;
	ld.param.u64 	%rd4245, [scanHash_param_1];
	ld.global.u32 	%r6650, [%rd4245+60];
	add.s32 	%r6651, %r6650, 1;
	st.global.u32 	[%rd4245+60], %r6651;
	mul.wide.u32 	%rd4239, %r6650, 4;
	add.s64 	%rd4240, %rd4245, %rd4239;
	st.global.u32 	[%rd4240], %r6656;

BB2_17:
	bar.sync 	0;
	ret;
}


  